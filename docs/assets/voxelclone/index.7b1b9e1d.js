import"../modulepreload-polyfill.b7f2da20.js";import{m as V}from"../mod.4956582c.js";function U(s){return Math.PI*s/180}function w(s){let e=0;for(const t of s)e+=t*t;const i=Math.sqrt(e);return s.map(t=>t/i)}function X([s,e,i],[t,o,h]){return s*t+e*o+i*h}function N([s,e,i],[t,o,h]){return[e*h-i*o,i*t-s*h,s*o-e*t]}function T(s,e){return[s[0]*e,s[1]*e,s[2]*e]}function k(s,e){return[s[0]+e[0],s[1]+e[1],s[2]+e[2]]}function Y(s,e){return[s[0]-e[0],s[1]-e[1],s[2]-e[2]]}function K(s){const[e,i,t,o]=s;return[[e[0],i[0],t[0],o[0]],[e[1],i[1],t[1],o[1]],[e[2],i[2],t[2],o[2]],[e[3],i[3],t[3],o[3]]]}function F(s,e,i,t){const o=1/Math.tan(s/2),h=t-i;return[[o/e,0,0,0],[0,o,0,0],[0,0,-(i+t)/h,-2*i*t/h],[0,0,-1,0]]}function J(s,e,i){let t=w(Y(e,s));const o=w(N(t,i)),h=w(N(o,t));if(!o.every(r=>r==r))throw"Two parallel vectors were given";t=T(t,-1);const u=$(-X(o,s),-X(h,s),-X(t,s)),n=[[o[0],o[1],o[2],0],[h[0],h[1],h[2],0],[t[0],t[1],t[2],0],[0,0,0,1]];return W(u,n)}function $(s,e,i){return[[1,0,0,s],[0,1,0,e],[0,0,1,i],[0,0,0,1]]}function m(s,e){return s[0]*e[0]+s[1]*e[1]+s[2]*e[2]+s[3]*e[3]}function W(s,e){const[i,t,o,h]=s,[u,n,r,l]=K(e);return[[m(i,u),m(i,n),m(i,r),m(i,l)],[m(t,u),m(t,n),m(t,r),m(t,l)],[m(o,u),m(o,n),m(o,r),m(o,l)],[m(h,u),m(h,n),m(h,r),m(h,l)]]}function Z(s){const[e,i,t,o]=K(s);return[...e,...i,...t,...o]}function q(s,e,i){return Math.min(Math.max(s,e),i)}function G(s,e){if(!s)throw new Error(e)}var y=(s=>(s[s.LEFT=0]="LEFT",s[s.RIGHT=1]="RIGHT",s[s.UP=2]="UP",s[s.DOWN=3]="DOWN",s[s.FRONT=4]="FRONT",s[s.BACK=5]="BACK",s))(y||{});class j{constructor(e,i){this.buildTextureAtlas=t=>{let o=t.createTexture();t.bindTexture(t.TEXTURE_2D,o),t.pixelStorei(t.UNPACK_ALIGNMENT,1),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);const h=this.tileSize*6,u=this.tileSize*this.defs.length,n=new Uint8Array(h*u*4);t.texImage2D(t.TEXTURE_2D,0,t.RGBA,h,u,0,t.RGBA,t.UNSIGNED_BYTE,n);for(let r=0;r<this.defs.length;r++){const l=this.defs[r];if(!l.transparent)for(let p=0;p<l.textures.length;p++)t.texSubImage2D(t.TEXTURE_2D,0,p*this.tileSize,r*this.tileSize,this.tileSize,this.tileSize,t.RGBA,t.UNSIGNED_BYTE,l.textures[p])}return t.generateMipmap(t.TEXTURE_2D),o},this.tileSize=e,this.defs=i,this.tileTexXsize=1/6,this.tileTexYsize=1/i.length;for(let t=0;t<this.defs.length;t++){const o=this.defs[t];if(!o.transparent)for(let h=0;h<o.textures.length;h++){const u=o.textures[h];G(u.height===e,"block #{block_index} face #{face_index} height != {tileSize}"),G(u.width===e,"block #{block_index} face #{face_index} width != {tileSize}")}}}}function O(s,e,i){const t=s.createShader(e);return s.shaderSource(t,i),s.compileShader(t),t}function Q(s,e){const i=s.createProgram();for(const o of e)s.attachShader(i,o);if(s.linkProgram(i),s.getProgramParameter(i,s.LINK_STATUS))return i;for(const o of e)s.getShaderParameter(o,s.COMPILE_STATUS)||console.log(s.getShaderInfoLog(o)),s.deleteShader(o);return console.log(s.getProgramInfoLog(i)),s.deleteProgram(i),null}const z=[0,-1,0];class H{constructor(e,i){this.front=w([Math.cos(i)*Math.cos(e),Math.sin(e),Math.sin(i)*Math.cos(e)]),this.right=w(N(this.front,z)),this.up=w(N(this.right,this.front))}}class tt{constructor(e,i){this.pitch=0,this.yaw=U(-90),this.controlsEnabled=!1,this.fast=!1,this.keys=new Set,this.update=()=>{if(!this.controlsEnabled)return;let t=.02;this.fast&&(t*=5);const o=w(N(this.basis.right,z));this.keys.has("KeyW")&&(this.pos=k(this.pos,T(o,t))),this.keys.has("KeyS")&&(this.pos=k(this.pos,T(o,-t))),this.keys.has("KeyA")&&(this.pos=k(this.pos,T(this.basis.right,t))),this.keys.has("KeyD")&&(this.pos=k(this.pos,T(this.basis.right,-t))),this.keys.has("ShiftLeft")&&(this.pos=k(this.pos,T(z,-t))),this.keys.has("Space")&&(this.pos=k(this.pos,T(z,t)))},this.getMvp=()=>{const t=U(90),o=this.canvas.width/this.canvas.height,h=F(t,o,.001,1e3),u=k(this.pos,T(this.basis.front,-1)),n=J(this.pos,u,z);return W(h,n)},this.getLoc=()=>[this.pos[0],this.pos[1],this.pos[2]],this.pos=e,this.canvas=i,this.basis=new H(this.pitch,this.yaw),window.addEventListener("keypress",t=>{t.key==="f"&&(this.fast=!this.fast)}),window.addEventListener("keydown",t=>this.keys.add(t.code)),window.addEventListener("keyup",t=>this.keys.delete(t.code)),this.canvas.addEventListener("click",t=>{this.canvas.requestPointerLock()}),document.addEventListener("pointerlockchange",t=>{this.controlsEnabled=document.pointerLockElement===this.canvas}),this.canvas.addEventListener("mousemove",t=>{if(!this.controlsEnabled)return;const o=.001;this.yaw-=t.movementX*o,this.pitch-=t.movementY*o,this.pitch=q(this.pitch,U(-89.9),U(89.9)),this.basis=new H(this.pitch,this.yaw)})}}const st=1,et=1,S=16,L=16,E=16,I=2,D=2,b=2;class it{constructor(e,i,t,o,h,u){this.getWorldChunkLoc=n=>[Math.floor(n[0]/S),Math.floor(n[1]/L),Math.floor(n[2]/E)],this.shouldBeLoaded=n=>{const r=Y(n,this.worldChunkCenterLoc);return r[0]>=-I&&r[0]<=I&&r[1]>=-D&&r[1]<=D&&r[2]>=-b&&r[2]<=b},this.updateCameraLoc=()=>{for(const n of this.togenerate)this.shouldBeLoaded(JSON.parse(n))||this.togenerate.delete(n);for(const n of this.tomesh)if(!this.shouldBeLoaded(JSON.parse(n))){let r=this.chunk_map.get(n);r!==void 0&&r.graphics!==void 0&&this.deleteChunkGraphics(r.graphics),this.chunk_map.delete(n),this.tomesh.delete(n)}for(const n of this.ready)if(!this.shouldBeLoaded(JSON.parse(n))){let r=this.chunk_map.get(n);r!==void 0&&r.graphics!==void 0&&this.deleteChunkGraphics(r.graphics),this.chunk_map.delete(n),this.ready.delete(n)}for(let n=-I;n<=I;n++)for(let r=-D;r<=D;r++)for(let l=-b;l<=b;l++){const p=k(this.worldChunkCenterLoc,[n,r,l]);this.togenerate.add(JSON.stringify(p))}},this.makeChunkGraphics=(n,r)=>{const l=nt(n,r,this.blockManager),p=l.length,d=l.flatMap(x=>[...x.position,...x.uv]),g=this.gl.createVertexArray();this.gl.bindVertexArray(g);const _=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,_),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(d),this.gl.STATIC_DRAW),this.gl.enableVertexAttribArray(this.glPositionLoc),this.gl.vertexAttribPointer(this.glPositionLoc,3,this.gl.FLOAT,!1,5*4,0*4),this.gl.enableVertexAttribArray(this.glUvLoc),this.gl.vertexAttribPointer(this.glUvLoc,2,this.gl.FLOAT,!1,5*4,3*4),{vao:g,buffer:_,nVertexes:p}},this.deleteChunkGraphics=n=>{this.gl.deleteBuffer(n.buffer),this.gl.deleteVertexArray(n.vao)},this.update=n=>{let r=0;for(const d of this.togenerate)r<st&&(this.togenerate.delete(d),this.chunk_map.set(d,{blocks:ot(JSON.parse(d),this.noiseFn)}),this.tomesh.add(d),r++);let l=0;for(const d of this.tomesh)if(l<et){this.tomesh.delete(d);let g=this.chunk_map.get(d);if(g!==void 0){g.graphics!==void 0&&this.deleteChunkGraphics(g.graphics);const _=JSON.parse(d),x=[_[0]*S,_[1]*L,_[2]*E];g.graphics=this.makeChunkGraphics(g.blocks,x),this.ready.add(d),l++}}const p=this.getWorldChunkLoc(n);(p[0]!==this.worldChunkCenterLoc[0]||p[1]!==this.worldChunkCenterLoc[1]||p[2]!==this.worldChunkCenterLoc[2])&&(this.worldChunkCenterLoc=p,this.updateCameraLoc())},this.render=()=>{for(const n of this.ready){let r=this.chunk_map.get(n);r!==void 0&&r.graphics!==void 0&&(this.gl.bindVertexArray(r.graphics.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,r.graphics.nVertexes))}},this.gl=t,this.blockManager=u,this.glPositionLoc=o,this.glUvLoc=h,this.seed=e,this.noiseFn=V.makeNoise3D(e),this.worldChunkCenterLoc=this.getWorldChunkLoc(i),this.chunk_map=new Map,this.togenerate=new Set,this.tomesh=new Set,this.ready=new Set,this.updateCameraLoc()}}function A(s,e,i){return s*L*E+e*E+i}function ot(s,e){const i=[s[0]*S,s[1]*L,s[2]*E],t=new Uint16Array(S*L*E),o=20;for(let h=0;h<S;h++)for(let u=0;u<L;u++)for(let n=0;n<E;n++){const r=A(h,u,n),l=h+i[0],p=u+i[1],d=n+i[2],g=e(l/o,p/o,d/o),_=e(l/o,(p-1)/o,d/o);g>0?_>0?t[r]=3:t[r]=1:t[r]=0}return t}function nt(s,e,i){const t=[];for(let o=0;o<S;o++)for(let h=0;h<L;h++)for(let u=0;u<E;u++){const n=s[A(o,h,u)];if(i.defs[n].transparent)continue;const r=o+e[0],l=h+e[1],p=u+e[2],d=[r+0,l+0,p+0],g=[r+1,l+0,p+0],_=[r+0,l+0,p+1],x=[r+1,l+0,p+1],C=[r+0,l+1,p+0],R=[r+1,l+1,p+0],M=[r+0,l+1,p+1],P=[r+1,l+1,p+1],f=i.tileTexXsize,v=i.tileTexYsize;if(o===0||i.defs[s[A(o-1,h,u)]].transparent){const a=i.tileTexXsize*y.LEFT,c=i.tileTexYsize*n;t.push({position:d,uv:[a+0,c+0]}),t.push({position:C,uv:[a+0,c+v]}),t.push({position:_,uv:[a+f,c+0]}),t.push({position:_,uv:[a+f,c+0]}),t.push({position:C,uv:[a+0,c+v]}),t.push({position:M,uv:[a+f,c+v]})}if(o===S-1||i.defs[s[A(o+1,h,u)]].transparent){const a=i.tileTexXsize*y.RIGHT,c=i.tileTexYsize*n;t.push({position:g,uv:[a+f,c+0]}),t.push({position:x,uv:[a+0,c+0]}),t.push({position:R,uv:[a+f,c+v]}),t.push({position:x,uv:[a+0,c+0]}),t.push({position:P,uv:[a+0,c+v]}),t.push({position:R,uv:[a+f,c+v]})}if(h===0||i.defs[s[A(o,h-1,u)]].transparent){const a=i.tileTexXsize*y.UP,c=i.tileTexYsize*n;t.push({position:_,uv:[a+0,c+v]}),t.push({position:g,uv:[a+f,c+0]}),t.push({position:d,uv:[a+0,c+0]}),t.push({position:_,uv:[a+0,c+v]}),t.push({position:x,uv:[a+f,c+v]}),t.push({position:g,uv:[a+f,c+0]})}if(h===L-1||i.defs[s[A(o,h+1,u)]].transparent){const a=i.tileTexXsize*y.DOWN,c=i.tileTexYsize*n;t.push({position:C,uv:[a+f,c+0]}),t.push({position:R,uv:[a+0,c+0]}),t.push({position:M,uv:[a+f,c+v]}),t.push({position:R,uv:[a+0,c+0]}),t.push({position:P,uv:[a+0,c+v]}),t.push({position:M,uv:[a+f,c+v]})}if(u===0||i.defs[s[A(o,h,u-1)]].transparent){const a=i.tileTexXsize*y.BACK,c=i.tileTexYsize*n;t.push({position:d,uv:[a+f,c+0]}),t.push({position:g,uv:[a+0,c+0]}),t.push({position:C,uv:[a+f,c+v]}),t.push({position:g,uv:[a+0,c+0]}),t.push({position:R,uv:[a+0,c+v]}),t.push({position:C,uv:[a+f,c+v]})}if(u===E-1||i.defs[s[A(o,h,u+1)]].transparent){const a=i.tileTexXsize*y.FRONT,c=i.tileTexYsize*n;t.push({position:M,uv:[a+0,c+v]}),t.push({position:x,uv:[a+f,c+0]}),t.push({position:_,uv:[a+0,c+0]}),t.push({position:M,uv:[a+0,c+v]}),t.push({position:P,uv:[a+f,c+v]}),t.push({position:x,uv:[a+f,c+0]})}}return t}const rt=`#version 300 es
precision highp float;
layout(location=0) in vec3 a_position;
layout(location=1) in vec2 a_uv;

// premultiplied mvp matrix
uniform mat4 u_mvpMat;

out vec2 v_uv;

void main() {
   v_uv = a_uv;
   gl_Position = u_mvpMat * vec4(a_position, 1.0);
}
`,ht=`#version 300 es
precision highp float;
precision highp sampler2D;

// the texture atlas for the blocks
uniform sampler2D u_textureAtlas;
// the normal atlas for the blocks
uniform sampler2D u_normalAtlas;

// texCoord
in vec2 v_uv;

out vec4 v_outColor;

void main() {
  vec3 color = texture(u_textureAtlas, v_uv).rgb;

  v_outColor = vec4(color, 1.0);
}
`;class at{constructor(e,i){this.resizeCanvas=()=>{this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height)},this.displayHelp=()=>this.animationLoop(),this.animationLoop=()=>{this.camera.update(),this.world.update(this.camera.getLoc());{const u=this.camera.getMvp();this.gl.uniformMatrix4fv(this.mvpMatLoc,!1,Z(u)),this.world.render()}this.requestID=window.requestAnimationFrame(this.animationLoop)},this.canvas=e,this.blockManager=i,this.camera=new tt([0,0,0],this.canvas),this.gl=e.getContext("webgl2"),this.gl.enable(this.gl.DEPTH_TEST);const t=Q(this.gl,[O(this.gl,this.gl.VERTEX_SHADER,rt),O(this.gl,this.gl.FRAGMENT_SHADER,ht)]);this.gl.useProgram(t);const o=this.gl.getAttribLocation(t,"a_position"),h=this.gl.getAttribLocation(t,"a_uv");this.world=new it(42,[0,0,0],this.gl,o,h,i),this.mvpMatLoc=this.gl.getUniformLocation(t,"u_mvpMat"),this.textureAtlasLoc=this.gl.getUniformLocation(t,"u_textureAtlas"),this.normalAtlasLoc=this.gl.getUniformLocation(t,"u_normalAtlas"),this.gl.activeTexture(this.gl.TEXTURE0),this.textureAtlas=this.blockManager.buildTextureAtlas(this.gl),this.gl.uniform1i(this.textureAtlasLoc,0),this.gl.activeTexture(this.gl.TEXTURE1),this.normalAtlas=this.blockManager.buildTextureAtlas(this.gl),this.gl.uniform1i(this.normalAtlasLoc,1),this.resizeCanvas(),this.canvas.addEventListener("resize",this.resizeCanvas)}}const ct=document.getElementById("canvas");function B(s,e){return s?{transparent:s,name:e}:{transparent:s,name:e,textures:[document.getElementById(`${e}-left`),document.getElementById(`${e}-right`),document.getElementById(`${e}-up`),document.getElementById(`${e}-down`),document.getElementById(`${e}-front`),document.getElementById(`${e}-back`)]}}const ut=new j(16,[B(!0,"air"),B(!1,"grass"),B(!1,"soil"),B(!1,"stone")]),lt=new at(ct,ut);lt.displayHelp();
