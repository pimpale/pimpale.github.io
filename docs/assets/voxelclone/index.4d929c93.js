var pt=Object.defineProperty;var mt=(n,e,t)=>e in n?pt(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var o=(n,e,t)=>(mt(n,typeof e!="symbol"?e+"":e,t),t);import"../modulepreload-polyfill.c7c6310f.js";import{m as _t}from"../mod.a5ac064f.js";function q(n){return Math.PI*n/180}function et([n,e,t]){return Math.hypot(n,e,t)}function J(n){const e=et(n);return n.map(t=>t/e)}function G([n,e,t]){return[n,e,t]}function K([n,e,t],[s,r,i]){return n*s+e*r+t*i}function j([n,e,t],[s,r,i]){return[e*i-t*r,t*s-n*i,n*r-e*s]}function L(n,e){return[n[0]*e,n[1]*e,n[2]*e]}function v(n,e){return[n[0]+e[0],n[1]+e[1],n[2]+e[2]]}function O(n,e){return[n[0]-e[0],n[1]-e[1],n[2]-e[2]]}function it(n){const[e,t,s,r]=n;return[[e[0],t[0],s[0],r[0]],[e[1],t[1],s[1],r[1]],[e[2],t[2],s[2],r[2]],[e[3],t[3],s[3],r[3]]]}function ut(n,e,t,s){const r=1/Math.tan(n/2),i=s-t;return[[r/e,0,0,0],[0,r,0,0],[0,0,-(t+s)/i,-2*t*s/i],[0,0,-1,0]]}function ft(n,e,t){let s=J(O(e,n));const r=J(j(s,t)),i=J(j(r,s));if(!r.every(f=>f==f))throw"two parallel vectors were given";s=L(s,-1);const h=xt(-K(r,n),-K(i,n),-K(s,n)),c=[[r[0],r[1],r[2],0],[i[0],i[1],i[2],0],[s[0],s[1],s[2],0],[0,0,0,1]];return W(h,c)}function xt(n,e,t){return[[1,0,0,n],[0,1,0,e],[0,0,1,t],[0,0,0,1]]}function A(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]+n[3]*e[3]}function W(n,e){const[t,s,r,i]=n,[h,c,f,a]=it(e);return[[A(t,h),A(t,c),A(t,f),A(t,a)],[A(s,h),A(s,c),A(s,f),A(s,a)],[A(r,h),A(r,c),A(r,f),A(r,a)],[A(i,h),A(i,c),A(i,f),A(i,a)]]}function Q(n,e){return[n[0],n[1],n[2],e]}function X(n){return[n[0],n[1],n[2]]}function F(n,e){const[t,s,r,i]=n;return[A(t,e),A(s,e),A(r,e),A(i,e)]}function nt([n,e,t],s){const r=(m,d,l)=>{const u=Math.sqrt(m*m+d*d+l*l);return[m/u,d/u,l/u]};let[i,h,c]=r(n,e,t),[f,a]=[Math.cos(s),Math.sin(s)],p=1-f;return[[i*i*p+f,i*h*p-c*a,i*c*p+h*a,0],[i*h*p+c*a,h*h*p+f,h*c*p-i*a,0],[i*c*p-h*a,h*c*p+i*a,c*c*p+f,0],[0,0,0,1]]}function rt(n){const[e,t,s,r]=it(n);return[...e,...t,...s,...r]}function gt(n,e,t){return Math.min(Math.max(n,e),t)}function st(n,e){if(!n)throw new Error(e)}function S(n,e){const t=n%e;return t<0?t+e:t}function Et(n,e){return Array(Math.max(e.length,n.length)).fill(void 0).map((t,s)=>[n[s],e[s]])}var T=(n=>(n[n.LEFT=0]="LEFT",n[n.RIGHT=1]="RIGHT",n[n.UP=2]="UP",n[n.DOWN=3]="DOWN",n[n.FRONT=4]="FRONT",n[n.BACK=5]="BACK",n))(T||{});function dt(n){switch(n){case 0:return[-1,0,0];case 1:return[1,0,0];case 2:return[0,-1,0];case 3:return[0,1,0];case 5:return[0,0,-1];case 4:return[0,0,1]}}class vt{constructor(e,t){o(this,"defs");o(this,"tileSize");o(this,"buildTextureAtlas",e=>{let t=e.createTexture();e.bindTexture(e.TEXTURE_2D_ARRAY,t),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MAG_FILTER,e.NEAREST);const s=new Uint8Array(this.tileSize*this.tileSize*this.defs.length*6*4);e.texImage3D(e.TEXTURE_2D_ARRAY,0,e.RGBA,this.tileSize,this.tileSize,this.defs.length*6,0,e.RGBA,e.UNSIGNED_BYTE,s);for(let r=0;r<this.defs.length;r++){const i=this.defs[r];if(i.textures!==void 0)for(let h=0;h<i.textures.length;h++)e.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,r*6+h,this.tileSize,this.tileSize,1,e.RGBA,e.UNSIGNED_BYTE,i.textures[h])}return e.generateMipmap(e.TEXTURE_2D_ARRAY),t});this.tileSize=e,this.defs=t;for(let s=0;s<this.defs.length;s++){const r=this.defs[s];if(r.textures!==void 0)for(let i=0;i<r.textures.length;i++){const h=r.textures[i];st(h.height===e,`block #${s} face #${i} height != ${e}, found ${h.height}`),st(h.width===e,`block #${s} face #${i} width != ${e}, found ${h.width}`)}}}}function B(n,e,t){const s=n.createShader(e);return n.shaderSource(s,t),n.compileShader(s),s}function ot(n,e,t){const s=n.createProgram();for(const i of e)n.attachShader(s,i);for(const[i,h]of t)n.bindAttribLocation(s,i,h);if(n.linkProgram(s),n.getProgramParameter(s,n.LINK_STATUS))return s;for(const i of e)n.getShaderParameter(i,n.COMPILE_STATUS)||console.log(n.getShaderInfoLog(i)),n.deleteShader(i);return console.log(n.getProgramInfoLog(s)),n.deleteProgram(s),null}const wt=1,Tt=1,kt=1,At=1,Rt=1,C=16,b=16,y=16,ht=2,at=2,ct=2,Y=1,H=1,z=1,V=512,Z=1024,yt=`#version 300 es
precision highp int;
precision highp float;
uniform mat4 u_mvpMat;

in vec3 a_position;
out vec3 v_position;

in vec3 a_tuv;
out vec3 v_tuv;

in vec3 a_normal;
out vec3 v_normal;

void main() {
   v_tuv = a_tuv;
   v_normal = a_normal;
   v_position = a_position;
   // actual location
   gl_Position = u_mvpMat * vec4(a_position, 1.0);
}
`,Lt=`#version 300 es
precision highp int;
precision highp float;
precision highp isampler2D;
precision highp sampler2DArray;

// the texture atlas for the blocks
uniform sampler2DArray u_textureAtlas;

// Shared between all chunks
uniform sampler2DArray u_lightDepthArr;
uniform sampler2DArray u_lightDataArr;

// specific to the chunk.
// Contains 27 entries of start indexes and lengths
uniform isampler2D u_lightIndexes;

// position
in vec3 v_position;

// normal
in vec3 v_normal;

// texCoord
in vec3 v_tuv;

out vec4 v_outColor;

void main() {
  vec4 color = texture(u_textureAtlas, v_tuv);

  float lightSum = 0.2;

  int nLights = textureSize(u_lightIndexes, 0).x;
  for(int c = 0; c < nLights; c++) {
    int i = texelFetch(u_lightIndexes, ivec2(c, 0), 0).x;

    // get light position from texture
    vec3 lightPos = texelFetch(u_lightDataArr, ivec3(0, 0, i), 0).rgb;
    mat4 lightMvp = mat4(
        texelFetch(u_lightDataArr, ivec3(1, 0, i), 0),
        texelFetch(u_lightDataArr, ivec3(2, 0, i), 0),
        texelFetch(u_lightDataArr, ivec3(3, 0, i), 0),
        texelFetch(u_lightDataArr, ivec3(4, 0, i), 0)
    );
    vec4 lightSpacePosition = lightMvp * vec4(v_position, 1.0);

    vec3 projectedCoord = lightSpacePosition.xyz / lightSpacePosition.w;
    bool inRange =
        projectedCoord.z >= -1.0 &&
        projectedCoord.z <= 1.0 &&
        projectedCoord.x >= -1.0 &&
        projectedCoord.x <= 1.0 &&
        projectedCoord.y >= -1.0 &&
        projectedCoord.y <= 1.0;

    // remap coords to texCoords
    vec2 texCoord = (projectedCoord.xy + vec2(1.0, 1.0))/2.0;

    float depthMapDepth = texture(u_lightDepthArr, vec3(texCoord, i)).r;
    const float bias = 0.002;
    float currentDepth = (projectedCoord.z + 1.0)/2.0 - bias;

    if(inRange && currentDepth <= depthMapDepth) {
        float intensity = 1.0-currentDepth;
        vec3 lightDir = normalize(lightPos - v_position);
        float diffuseIntensity = max(dot(v_normal, lightDir), 0.0);
        lightSum += 7.0*diffuseIntensity*intensity;
    }
  }

  v_outColor = vec4(color.rgb*lightSum, color.a);
}
`,bt=`#version 300 es
precision highp float;
in vec3 a_position;
uniform mat4 u_mvpMat;
void main() {
   gl_Position = u_mvpMat * vec4(a_position, 1.0);
}
`,Dt=`#version 300 es
precision highp float;
out vec4 v_outColor;
void main() {
  v_outColor = vec4(0.0, 0.0, 0.0, 1.0);
}
`;class Ct{constructor(e,t,s,r,i){o(this,"POSITION_LOC",0);o(this,"NORMAL_LOC",1);o(this,"TUV_LOC",2);o(this,"textureAtlas");o(this,"shadowTexArr");o(this,"shadowFbs");o(this,"lightDataTexArr");o(this,"renderProgram");o(this,"renderMvpMatLoc");o(this,"renderTextureAtlasLoc");o(this,"renderLightDepthArrLoc");o(this,"renderLightDataArrLoc");o(this,"renderLightIndexesLoc");o(this,"shadowProgram");o(this,"shadowMvpMatLoc");o(this,"emptyChunk",new Uint16Array(C*b*y));o(this,"worldChunkCenterLoc");o(this,"seed");o(this,"noiseFn");o(this,"highlights");o(this,"freeLightIndexes");o(this,"chunk_map");o(this,"gl");o(this,"blockManager");o(this,"getWorldChunkLoc",e=>[Math.floor(e[0]/C),Math.floor(e[1]/b),Math.floor(e[2]/y)]);o(this,"createGraphics",e=>{const t=this.gl.createVertexArray();this.gl.bindVertexArray(t);const s=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,s),this.gl.bufferData(this.gl.ARRAY_BUFFER,e,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.POSITION_LOC),this.gl.vertexAttribPointer(this.POSITION_LOC,3,this.gl.FLOAT,!1,9*4,0*4),this.gl.enableVertexAttribArray(this.NORMAL_LOC),this.gl.vertexAttribPointer(this.NORMAL_LOC,3,this.gl.FLOAT,!1,9*4,3*4),this.gl.enableVertexAttribArray(this.TUV_LOC),this.gl.vertexAttribPointer(this.TUV_LOC,3,this.gl.FLOAT,!1,9*4,6*4),{vao:t,buffer:s,vertexCount:e.length/9}});o(this,"deleteGraphics",e=>{this.gl.deleteBuffer(e.buffer),this.gl.deleteVertexArray(e.vao)});o(this,"deleteChunkGraphics",e=>{this.deleteGraphics(e.solid),this.deleteGraphics(e.transparent)});o(this,"deleteGPUData",e=>{this.gl.deleteTexture(e.lightIndexesTex)});o(this,"shouldBeLoaded",e=>{const t=O(e,this.worldChunkCenterLoc);return t[0]>=-Y&&t[0]<=Y&&t[1]>=-H&&t[1]<=H&&t[2]>=-z&&t[2]<=z});o(this,"shouldBeUnloaded",e=>{const t=O(e,this.worldChunkCenterLoc);return!(t[0]>=-ht&&t[0]<=ht&&t[1]>=-at&&t[1]<=at&&t[2]>=-ct&&t[2]<=ct)});o(this,"unloadChunk",e=>{const t=this.chunk_map.get(e);t.graphics!==void 0&&this.deleteChunkGraphics(t.graphics),t.ownLights!==void 0&&this.freeLightIndexes.push(...t.ownLights.lightData.map(s=>s.index)),t.completeLighting!==void 0&&this.deleteGPUData(t.completeLighting.data);for(const s of this.adjacentChunkLocs(JSON.parse(e))){const r=this.chunk_map.get(JSON.stringify(s));(r==null?void 0:r.completeLighting)!==void 0&&(r.completeLighting.stale=!0)}this.chunk_map.delete(e)});o(this,"updateCameraLoc",()=>{for(const[s,r]of this.chunk_map)this.shouldBeUnloaded(JSON.parse(s))&&this.unloadChunk(s);for(let s=-Y;s<=Y;s++)for(let r=-H;r<=H;r++)for(let i=-z;i<=z;i++){const h=JSON.stringify(v(this.worldChunkCenterLoc,[s,r,i]));this.chunk_map.get(h)===void 0&&this.chunk_map.set(h,{})}const e=Array.from(this.chunk_map.keys(),s=>JSON.parse(s)).sort((s,r)=>{const i=et(O(s,this.worldChunkCenterLoc)),h=et(O(r,this.worldChunkCenterLoc));return i-h}),t=new Map;for(const s of e){const r=JSON.stringify(s);t.set(r,this.chunk_map.get(r))}this.chunk_map=t});o(this,"addHighlight",(e,t)=>{const s=this.highlights.get(e);s!==void 0&&this.deleteGraphics(s);const r=this.createGraphics(tt([{bi:6,cubeLoc:t.coords,face:t.face}]));this.highlights.set(e,r)});o(this,"removeHighlight",e=>{const t=this.highlights.get(e);t!==void 0&&(this.deleteGraphics(t),this.highlights.delete(e))});o(this,"createLightData",e=>{const t=v(e.cubeLoc,[.5,.5,.5]),s=ut(q(90),1,.5,10),r=e.face===T.UP||e.face===T.DOWN?[-1,0,0]:[0,-1,0],i=ft(t,v(t,dt(e.face)),r),h=W(s,i);return[t,h]});o(this,"updateLightDataTex",(e,t)=>{const s=new Float32Array(20);{let[r,i]=t,[h,c,f,a]=it(i);s.set(r,0),s.set(h,4),s.set(c,8),s.set(f,12),s.set(a,16)}this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.lightDataTexArr),this.gl.texSubImage3D(this.gl.TEXTURE_2D_ARRAY,0,0,0,e,5,1,1,this.gl.RGBA,this.gl.FLOAT,s)});o(this,"renderShadowMap",(e,t,s)=>{this.gl.useProgram(this.shadowProgram),this.gl.uniformMatrix4fv(this.shadowMvpMatLoc,!1,rt(t)),this.gl.viewport(0,0,V,V),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.shadowFbs[e]),this.gl.clear(this.gl.DEPTH_BUFFER_BIT);for(const r of s)this.gl.bindVertexArray(r.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,r.vertexCount)});o(this,"adjacentChunkLocs",e=>[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]].map(s=>v(e,s)));o(this,"neighboringChunkLocs",e=>{const t=[];for(let s=-1;s<=1;s++)for(let r=-1;r<=1;r++)for(let i=-1;i<=1;i++)(i!==0||r!==0||s!==0)&&t.push(v(e,[s,r,i]));return t});o(this,"getChunkBlocksIfExists",e=>{var s;const t=(s=this.chunk_map.get(JSON.stringify(e)))==null?void 0:s.blocks;return t||this.emptyChunk});o(this,"update",e=>{let t=0;t:for(const[r,i]of this.chunk_map){const h=JSON.parse(r);if(i.blocks===void 0){i.blocks=Mt(h,this.noiseFn);for(const f of this.adjacentChunkLocs(h)){const a=this.chunk_map.get(JSON.stringify(f));a&&a.mesh&&(a.mesh.stale=!0)}t+=wt}if(t>1)break t;const c=[h[0]*C,h[1]*b,h[2]*y];if(i.mesh===void 0||i.mesh.stale){for(const m of this.adjacentChunkLocs(h))if(this.shouldBeLoaded(m)){const d=this.chunk_map.get(JSON.stringify(m));if(d===void 0||d.blocks===void 0)continue t}const{solid:f,transparent:a,lights:p}=It(c,this.blockManager,i.blocks,this.getChunkBlocksIfExists(v(h,[-1,0,0])),this.getChunkBlocksIfExists(v(h,[1,0,0])),this.getChunkBlocksIfExists(v(h,[0,-1,0])),this.getChunkBlocksIfExists(v(h,[0,1,0])),this.getChunkBlocksIfExists(v(h,[0,0,-1])),this.getChunkBlocksIfExists(v(h,[0,0,1])));i.mesh={solid:f,transparent:a,lights:p,stale:!1},i.graphics!==void 0&&(i.graphics.stale=!0),t+=Tt}if(t>1)break t;if(i.graphics===void 0||i.graphics.stale){i.graphics!==void 0&&this.deleteChunkGraphics(i.graphics),i.graphics={solid:this.createGraphics(tt(i.mesh.solid)),transparent:this.createGraphics(tt(i.mesh.transparent)),stale:!1},i.ownLights!==void 0&&(i.ownLights.stale=!0);for(const f of this.neighboringChunkLocs(h)){const a=this.chunk_map.get(JSON.stringify(f));a&&a.ownLights&&(a.ownLights.stale=!0)}t+=kt}if(t>1)break t;if(i.ownLights===void 0||i.ownLights.stale){const f=i.mesh.lights.map(this.createLightData);let a=!1;const p=i.ownLights===void 0?[]:i.ownLights.lightData.map(l=>l.index);let m=[];for(const[l,u]of Et(f,p))if(l!==void 0&&u!==void 0&&m.push({matLoc:l,index:u}),l===void 0&&u!==void 0)this.freeLightIndexes.push(u),a=!0;else if(l!==void 0&&u===void 0){const E=this.freeLightIndexes.pop();E!==void 0?(m.push({matLoc:l,index:E}),a=!0):console.log("Ran out of lights!")}i.ownLights={stale:!0,lightData:m};const d=[i.graphics.solid];for(const l of this.neighboringChunkLocs(h)){const u=this.chunk_map.get(JSON.stringify(l));u&&u.graphics&&d.push(u.graphics.solid)}for(const{index:l,matLoc:u}of i.ownLights.lightData)this.renderShadowMap(l,u[1],d),this.updateLightDataTex(l,u);if(a){i.completeLighting!==void 0&&(i.completeLighting.stale=!0);for(const l of this.neighboringChunkLocs(h)){const u=this.chunk_map.get(JSON.stringify(l));u&&u.completeLighting&&(u.completeLighting.stale=!0)}}i.ownLights.stale=!1,t+=At}if(t>1)break t;if(i.completeLighting===void 0||i.completeLighting.stale){i.completeLighting===void 0&&(i.completeLighting={stale:!0,data:{lightIndexesTex:this.gl.createTexture()}});const f=[h,...this.neighboringChunkLocs(h)].map(a=>{var p,m;return(m=(p=this.chunk_map.get(JSON.stringify(a)))==null?void 0:p.ownLights)==null?void 0:m.lightData}).flatMap(a=>a===void 0?[]:a.map(p=>p.index));console.log(f),this.gl.bindTexture(this.gl.TEXTURE_2D,i.completeLighting.data.lightIndexesTex),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.R32I,f.length,1,0,this.gl.RED_INTEGER,this.gl.INT,new Int32Array(f)),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),i.completeLighting.stale=!1,t+=Rt}if(t>1)break t}const s=this.getWorldChunkLoc(e);(s[0]!==this.worldChunkCenterLoc[0]||s[1]!==this.worldChunkCenterLoc[1]||s[2]!==this.worldChunkCenterLoc[2])&&(this.worldChunkCenterLoc=s,this.updateCameraLoc())});o(this,"render",e=>{this.gl.useProgram(this.renderProgram),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.uniformMatrix4fv(this.renderMvpMatLoc,!1,rt(e)),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.textureAtlas),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.shadowTexArr),this.gl.activeTexture(this.gl.TEXTURE2),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.lightDataTexArr);for(const t of this.chunk_map.values())t.graphics!==void 0&&t.completeLighting!==void 0&&(this.gl.bindVertexArray(t.graphics.solid.vao),this.gl.activeTexture(this.gl.TEXTURE3),this.gl.bindTexture(this.gl.TEXTURE_2D,t.completeLighting.data.lightIndexesTex),this.gl.drawArrays(this.gl.TRIANGLES,0,t.graphics.solid.vertexCount));this.gl.depthMask(!1);for(const t of this.chunk_map.values())t.graphics!==void 0&&(this.gl.bindVertexArray(t.graphics.transparent.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,t.graphics.transparent.vertexCount));this.gl.depthMask(!0),this.gl.disable(this.gl.DEPTH_TEST);for(const t of this.highlights.values())this.gl.bindVertexArray(t.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,t.vertexCount)});o(this,"getBlock",e=>{const t=this.chunk_map.get(JSON.stringify(this.getWorldChunkLoc(e)));return t&&t.blocks?t.blocks[R(S(e[0],C),S(e[1],b),S(e[2],y))]:null});o(this,"setBlock",(e,t)=>{const s=h=>{const c=this.chunk_map.get(JSON.stringify(h));c&&c.mesh&&(c.mesh.stale=!0)},r=this.getWorldChunkLoc(e),i=this.chunk_map.get(JSON.stringify(r));if(i&&i.blocks){const h=Math.floor(S(e[0],C)),c=Math.floor(S(e[1],b)),f=Math.floor(S(e[2],y));return i.blocks[R(h,c,f)]=t,s(r),h===0&&s(v(r,[-1,0,0])),h===C-1&&s(v(r,[1,0,0])),c===0&&s(v(r,[0,-1,0])),c===b-1&&s(v(r,[0,1,0])),f===0&&s(v(r,[0,0,-1])),f===y-1&&s(v(r,[0,0,1])),!0}else return!1});o(this,"intbound",(e,t)=>{const s=Math.round(e)==e;if(t<0&&s)return 0;let r;return e==0?r=1:r=Math.ceil(e),(t>0?r-e:e-Math.floor(e))/Math.abs(t)});o(this,"castRay",(e,t,s)=>{let r=Math.floor(e[0]),i=Math.floor(e[1]),h=Math.floor(e[2]);const[c,f,a]=t,p=Math.sign(c),m=Math.sign(f),d=Math.sign(a);let l=this.intbound(e[0],c),u=this.intbound(e[1],f),E=this.intbound(e[2],a);const g=p/c,_=m/f,w=d/a;st(K(t,t)!==0,"direction vector is 0");const x=s/Math.sqrt(c*c+f*f+a*a);let k=T.UP;for(;;){const M=this.getBlock([r,i,h]);if(M===null)break;if(this.blockManager.defs[M].pointable)return{coords:[r,i,h],face:k};if(l<u)if(l<E){if(l>x)break;r+=p,l+=g,k=p==1?T.LEFT:T.RIGHT}else{if(E>x)break;h+=d,E+=w,k=d==1?T.BACK:T.FRONT}else if(u<E){if(u>x)break;i+=m,u+=_,k=m==1?T.UP:T.DOWN}else{if(E>x)break;h+=d,E+=w,k=d==1?T.BACK:T.FRONT}}return null});this.gl=s,this.blockManager=r,this.seed=e,this.noiseFn=_t.makeNoise3D(e),this.worldChunkCenterLoc=this.getWorldChunkLoc(t),this.chunk_map=new Map,this.highlights=new Map,this.textureAtlas=this.blockManager.buildTextureAtlas(this.gl),this.renderProgram=ot(this.gl,[B(this.gl,this.gl.VERTEX_SHADER,yt),B(this.gl,this.gl.FRAGMENT_SHADER,Lt)],new Map([[this.POSITION_LOC,"a_position"],[this.NORMAL_LOC,"a_normal"],[this.TUV_LOC,"a_tuv"]])),this.gl.useProgram(this.renderProgram),this.renderMvpMatLoc=this.gl.getUniformLocation(this.renderProgram,"u_mvpMat"),this.renderTextureAtlasLoc=this.gl.getUniformLocation(this.renderProgram,"u_textureAtlas"),this.renderLightDepthArrLoc=this.gl.getUniformLocation(this.renderProgram,"u_lightDepthArr"),this.renderLightDataArrLoc=this.gl.getUniformLocation(this.renderProgram,"u_lightDataArr"),this.renderLightIndexesLoc=this.gl.getUniformLocation(this.renderProgram,"u_lightIndexes"),this.gl.uniform1i(this.renderTextureAtlasLoc,0),this.gl.uniform1i(this.renderLightDepthArrLoc,1),this.gl.uniform1i(this.renderLightDataArrLoc,2),this.gl.uniform1i(this.renderLightIndexesLoc,3),this.shadowProgram=ot(this.gl,[B(this.gl,this.gl.VERTEX_SHADER,bt),B(this.gl,this.gl.FRAGMENT_SHADER,Dt)],new Map([[this.POSITION_LOC,"a_position"]])),this.gl.useProgram(this.shadowProgram),this.shadowMvpMatLoc=this.gl.getUniformLocation(this.shadowProgram,"u_mvpMat");{this.freeLightIndexes=[];for(let h=0;h<Z;h++)this.freeLightIndexes.push(h);this.lightDataTexArr=s.createTexture(),s.bindTexture(s.TEXTURE_2D_ARRAY,this.lightDataTexArr),s.texImage3D(s.TEXTURE_2D_ARRAY,0,s.RGBA32F,5,1,Z,0,s.RGBA,s.FLOAT,null),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MIN_FILTER,s.NEAREST),this.shadowTexArr=s.createTexture(),s.bindTexture(s.TEXTURE_2D_ARRAY,this.shadowTexArr),s.texImage3D(s.TEXTURE_2D_ARRAY,0,s.DEPTH_COMPONENT16,V,V,Z,0,s.DEPTH_COMPONENT,s.UNSIGNED_SHORT,null),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MIN_FILTER,s.NEAREST),this.shadowFbs=[];for(let h=0;h<Z;h++){const c=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,c),s.framebufferTextureLayer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,this.shadowTexArr,0,h),this.shadowFbs.push(c)}}this.updateCameraLoc()}}function R(n,e,t){return Math.floor(n)*b*y+Math.floor(e)*y+Math.floor(t)}function Mt(n,e){const t=[n[0]*C,n[1]*b,n[2]*y],s=new Uint16Array(C*b*y),r=20;for(let i=0;i<C;i++)for(let h=0;h<b;h++)for(let c=0;c<y;c++){const f=R(i,h,c),a=i+t[0],p=h+t[1],m=c+t[2],d=e(a/r,p/r,m/r),l=e(a/r,(p-1)/r,m/r);d>.5?l>.5?s[f]=3:s[f]=1:s[f]=0}return s[0]=5,s}function D(n,e){return!(n.textures===void 0||!n.transparent&&!e.transparent||n==e)}function It(n,e,t,s,r,i,h,c,f){const a=[],p=[],m=[];for(let d=0;d<C;d++)for(let l=0;l<b;l++)for(let u=0;u<y;u++){const E=t[R(d,l,u)],g=[n[0]+d,n[1]+l,n[2]+u],_=e.defs[E];if(_.textures===void 0)continue;const w=_.transparent?m:p;if(d===0?D(_,e.defs[s[R(C-1,l,u)]]):D(_,e.defs[t[R(d-1,l,u)]])){const x={bi:E,cubeLoc:g,face:T.LEFT};w.push(x),_.light&&a.push(x)}if(d===C-1?D(_,e.defs[r[R(0,l,u)]]):D(_,e.defs[t[R(d+1,l,u)]])){const x={bi:E,cubeLoc:g,face:T.RIGHT};w.push(x),_.light&&a.push(x)}if(l===0?D(_,e.defs[i[R(d,b-1,u)]]):D(_,e.defs[t[R(d,l-1,u)]])){const x={bi:E,cubeLoc:g,face:T.UP};w.push(x),_.light&&a.push(x)}if(l===b-1?D(_,e.defs[h[R(d,0,u)]]):D(_,e.defs[t[R(d,l+1,u)]])){const x={bi:E,cubeLoc:g,face:T.DOWN};w.push(x),_.light&&a.push(x)}if(u===0?D(_,e.defs[c[R(d,l,y-1)]]):D(_,e.defs[t[R(d,l,u-1)]])){const x={bi:E,cubeLoc:g,face:T.BACK};w.push(x),_.light&&a.push(x)}if(u===y-1?D(_,e.defs[f[R(d,l,0)]]):D(_,e.defs[t[R(d,l,u+1)]])){const x={bi:E,cubeLoc:g,face:T.FRONT};w.push(x),_.light&&a.push(x)}}return{solid:p,transparent:m,lights:a}}function tt(n){const e=new Float32Array(n.length*6*9);let t=0;for(const{bi:s,face:r,cubeLoc:[i,h,c]}of n){const f=[i+0,h+0,c+0],a=[i+1,h+0,c+0],p=[i+0,h+0,c+1],m=[i+1,h+0,c+1],d=[i+0,h+1,c+0],l=[i+1,h+1,c+0],u=[i+0,h+1,c+1],E=[i+1,h+1,c+1],g=s*6+r,_=[-1,0,0],w=[1,0,0],x=[0,-1,0],k=[0,1,0],M=[0,0,-1],I=[0,0,1];switch(r){case T.LEFT:{e.set(f,t),t+=3,e.set(_,t),t+=3,e.set([1,0,g],t),t+=3,e.set(p,t),t+=3,e.set(_,t),t+=3,e.set([0,0,g],t),t+=3,e.set(d,t),t+=3,e.set(_,t),t+=3,e.set([1,1,g],t),t+=3,e.set(p,t),t+=3,e.set(_,t),t+=3,e.set([0,0,g],t),t+=3,e.set(u,t),t+=3,e.set(_,t),t+=3,e.set([0,1,g],t),t+=3,e.set(d,t),t+=3,e.set(_,t),t+=3,e.set([1,1,g],t),t+=3;break}case T.RIGHT:{e.set(a,t),t+=3,e.set(w,t),t+=3,e.set([0,0,g],t),t+=3,e.set(l,t),t+=3,e.set(w,t),t+=3,e.set([0,1,g],t),t+=3,e.set(m,t),t+=3,e.set(w,t),t+=3,e.set([1,0,g],t),t+=3,e.set(m,t),t+=3,e.set(w,t),t+=3,e.set([1,0,g],t),t+=3,e.set(l,t),t+=3,e.set(w,t),t+=3,e.set([0,1,g],t),t+=3,e.set(E,t),t+=3,e.set(w,t),t+=3,e.set([1,1,g],t),t+=3;break}case T.UP:{e.set(p,t),t+=3,e.set(x,t),t+=3,e.set([1,1,g],t),t+=3,e.set(f,t),t+=3,e.set(x,t),t+=3,e.set([1,0,g],t),t+=3,e.set(a,t),t+=3,e.set(x,t),t+=3,e.set([0,0,g],t),t+=3,e.set(p,t),t+=3,e.set(x,t),t+=3,e.set([1,1,g],t),t+=3,e.set(a,t),t+=3,e.set(x,t),t+=3,e.set([0,0,g],t),t+=3,e.set(m,t),t+=3,e.set(x,t),t+=3,e.set([0,1,g],t),t+=3;break}case T.DOWN:{e.set(d,t),t+=3,e.set(k,t),t+=3,e.set([0,0,g],t),t+=3,e.set(u,t),t+=3,e.set(k,t),t+=3,e.set([0,1,g],t),t+=3,e.set(l,t),t+=3,e.set(k,t),t+=3,e.set([1,0,g],t),t+=3,e.set(l,t),t+=3,e.set(k,t),t+=3,e.set([1,0,g],t),t+=3,e.set(u,t),t+=3,e.set(k,t),t+=3,e.set([0,1,g],t),t+=3,e.set(E,t),t+=3,e.set(k,t),t+=3,e.set([1,1,g],t),t+=3;break}case T.BACK:{e.set(f,t),t+=3,e.set(M,t),t+=3,e.set([0,0,g],t),t+=3,e.set(d,t),t+=3,e.set(M,t),t+=3,e.set([0,1,g],t),t+=3,e.set(a,t),t+=3,e.set(M,t),t+=3,e.set([1,0,g],t),t+=3,e.set(a,t),t+=3,e.set(M,t),t+=3,e.set([1,0,g],t),t+=3,e.set(d,t),t+=3,e.set(M,t),t+=3,e.set([0,1,g],t),t+=3,e.set(l,t),t+=3,e.set(M,t),t+=3,e.set([1,1,g],t),t+=3;break}case T.FRONT:{e.set(u,t),t+=3,e.set(I,t),t+=3,e.set([1,1,g],t),t+=3,e.set(p,t),t+=3,e.set(I,t),t+=3,e.set([1,0,g],t),t+=3,e.set(m,t),t+=3,e.set(I,t),t+=3,e.set([0,0,g],t),t+=3,e.set(u,t),t+=3,e.set(I,t),t+=3,e.set([1,1,g],t),t+=3,e.set(m,t),t+=3,e.set(I,t),t+=3,e.set([0,0,g],t),t+=3,e.set(E,t),t+=3,e.set(I,t),t+=3,e.set([0,1,g],t),t+=3;break}}}return e}class St{constructor(e,t,s,r){o(this,"front");o(this,"right");o(this,"up");const i=Q(s,0),h=Q(r,0),c=Q(j(s,r),0),f=nt(s,t),a=X(F(f,h)),p=nt(a,e),m=W(p,f);this.right=X(F(m,h)),this.up=X(F(m,i)),this.front=X(F(m,c))}}class Nt{constructor(e,t,s){o(this,"pos");o(this,"dir");o(this,"canvas");o(this,"getPos",()=>G(this.pos));o(this,"setPos",e=>this.pos=G(e));o(this,"getDir",()=>G(this.dir));o(this,"setDir",e=>this.dir=G(e));o(this,"getMvp",e=>{const t=q(90),s=this.canvas.width/this.canvas.height,r=ut(t,s,.1,100),i=ft(this.pos,v(this.pos,this.dir),e);return W(r,i)});this.pos=e,this.dir=t,this.canvas=s}}class ${}function Ut(n){function e(s){return s.toString(16).padStart(2,"0")}const t=new Uint8Array(n/2);return window.crypto.getRandomValues(t),Array.from(t,e).join("")}class Pt{constructor(e,t,s,r,i){o(this,"pos");o(this,"dir");o(this,"worldright");o(this,"worldup");o(this,"components");o(this,"update",()=>{for(const e of this.components)e.applySystem(this)});this.components=e,this.worldup=t,this.worldright=s,this.pos=r===void 0?[0,0,0]:r,this.dir=i===void 0?[1,0,0]:i}}class Ot extends ${constructor(t,s,r){super();o(this,"physics");o(this,"blockInteraction");o(this,"grabControlElement");o(this,"pitch",0);o(this,"yaw",0);o(this,"controlsEnabled",!1);o(this,"fast",!1);o(this,"fly",!0);o(this,"keys",new Set);o(this,"leftMouseDown",!1);o(this,"rightMouseDown",!1);o(this,"applySystem",t=>{const s=new St(this.pitch,this.yaw,t.worldup,t.worldright);if(t.dir=L(s.front,-1),this.controlsEnabled){const r=J(j(s.right,t.worldup));let i=this.fast?.1:.04;this.fly?(this.keys.has("KeyW")&&this.physics.go(L(r,i)),this.keys.has("KeyS")&&this.physics.go(L(r,-i)),this.keys.has("KeyA")&&this.physics.go(L(s.right,i)),this.keys.has("KeyD")&&this.physics.go(L(s.right,-i)),this.keys.has("ShiftLeft")&&this.physics.go(L(t.worldup,-i)),this.keys.has("Space")&&this.physics.go(L(t.worldup,i))):(this.keys.has("KeyW")&&this.physics.go(L(r,i)),this.keys.has("KeyS")&&this.physics.go(L(r,-i)),this.keys.has("KeyA")&&this.physics.go(L(s.right,i)),this.keys.has("KeyD")&&this.physics.go(L(s.right,-i)),this.keys.has("Space")&&this.physics.jump()),this.keys.has("Digit1")&&(this.blockInteraction.placeID=1),this.keys.has("Digit2")&&(this.blockInteraction.placeID=2),this.keys.has("Digit3")&&(this.blockInteraction.placeID=3),this.keys.has("Digit4")&&(this.blockInteraction.placeID=4),this.keys.has("Digit5")&&(this.blockInteraction.placeID=5),this.leftMouseDown?this.blockInteraction.breakSelectedBlock():this.rightMouseDown&&this.blockInteraction.placeSelectedBlock()}});this.physics=s,this.blockInteraction=r,this.grabControlElement=t,window.addEventListener("keypress",i=>{i.key==="f"&&(this.fast=!this.fast),i.key==="m"&&(this.fly?(this.fly=!1,this.physics.enablePhysics()):(this.fly=!0,this.physics.disablePhysics()))}),window.addEventListener("keydown",i=>this.keys.add(i.code)),window.addEventListener("keyup",i=>this.keys.delete(i.code)),this.grabControlElement.addEventListener("click",i=>{this.grabControlElement.requestPointerLock()}),document.addEventListener("pointerlockchange",i=>{this.controlsEnabled=document.pointerLockElement===this.grabControlElement}),window.addEventListener("mousemove",i=>{if(!this.controlsEnabled)return;const h=.0015;this.yaw-=i.movementX*h,this.pitch+=i.movementY*h,this.pitch=gt(this.pitch,q(-89.9),q(89.9))}),window.addEventListener("mousedown",i=>{i.button===0?this.leftMouseDown=!0:i.button===2&&(this.rightMouseDown=!0)}),window.addEventListener("mouseup",i=>{i.button===0?this.leftMouseDown=!1:i.button===2&&(this.rightMouseDown=!1)})}}class Gt extends ${constructor(t){super();o(this,"camera");o(this,"applySystem",t=>{this.camera.setDir(t.dir),this.camera.setPos(t.pos)});this.camera=t}}function N(n,e){return n.minX<=e.maxX&&n.maxX>=e.minX&&n.minY<=e.maxY&&n.maxY>=e.minY&&n.minZ<=e.maxZ&&n.maxZ>=e.minZ}class Xt extends ${constructor(t){super();o(this,"world");o(this,"upVel",0);o(this,"wantGo",[0,0,0]);o(this,"wantJump",!1);o(this,"x_rad",.3);o(this,"z_rad",.3);o(this,"p_y_rad",1.5);o(this,"n_y_rad",.3);o(this,"side_depth",.1);o(this,"head_depth",.1);o(this,"foot_depth",.6);o(this,"physicsEnabled",!1);o(this,"enablePhysics",()=>this.physicsEnabled=!0);o(this,"disablePhysics",()=>{this.physicsEnabled=!1,this.upVel=0});o(this,"getPhysicsEnabled",()=>this.physicsEnabled);o(this,"go",t=>{this.wantGo=v(this.wantGo,t)});o(this,"jump",()=>{this.wantJump=!0});o(this,"calculatePlayerIntersection",t=>{let s={minX:t[0]-this.x_rad,maxX:t[0]-this.x_rad+this.side_depth,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},r={minX:t[0]+this.x_rad-this.side_depth,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},i={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]-this.z_rad+this.side_depth},h={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]+this.z_rad-this.side_depth,maxZ:t[2]+this.z_rad},c={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad,maxY:t[1]-this.n_y_rad+this.head_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},f={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]+this.p_y_rad-this.foot_depth,maxY:t[1]+this.p_y_rad,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},a=!1,p=!1,m=!1,d=!1,l=!1,u=!1;for(let E=-2;E<=2;E++)for(let g=-2;g<=2;g++)for(let _=-2;_<=2;_++){const w=v(t,[E,g,_]).map(k=>Math.floor(k)),x=this.world.getBlock(w);if(x!=null&&this.world.blockManager.defs[x].pointable){let k={minX:w[0],maxX:w[0]+1,minY:w[1],maxY:w[1]+1,minZ:w[2],maxZ:w[2]+1};!a&&N(s,k)&&(a=!0),!p&&N(r,k)&&(p=!0),!m&&N(c,k)&&(m=!0),!d&&N(f,k)&&(d=!0),!l&&N(i,k)&&(l=!0),!u&&N(h,k)&&(u=!0)}}return{left:a,right:p,up:m,down:d,back:l,front:u}});o(this,"applySystem",t=>{if(!this.physicsEnabled){t.pos=v(t.pos,this.wantGo),this.wantGo=[0,0,0];return}this.upVel-=.001,this.upVel=gt(this.upVel,-.1,.1),this.wantGo=v(this.wantGo,L(t.worldup,this.upVel));let s=v(t.pos,this.wantGo);const r=this.calculatePlayerIntersection(s);this.wantJump&&r.down&&(this.upVel=.05),this.wantJump=!1,r.left&&(this.wantGo[0]=Math.max(this.wantGo[0],0)),r.right&&(this.wantGo[0]=Math.min(this.wantGo[0],0)),r.up&&(this.wantGo[1]=Math.max(this.wantGo[1],0),this.upVel=Math.min(this.upVel,0)),r.down&&(this.wantGo[1]=Math.min(this.wantGo[1],0),this.upVel=Math.max(this.upVel,0)),r.back&&(this.wantGo[2]=Math.max(this.wantGo[2],0)),r.front&&(this.wantGo[2]=Math.min(this.wantGo[2],0)),t.pos=v(t.pos,this.wantGo),this.wantGo=[0,0,0]});this.world=t}}class Ft extends ${constructor(t,s){super();o(this,"uniqueId");o(this,"camera");o(this,"world");o(this,"placeID",2);o(this,"ray",null);o(this,"breakRequests",new Map);o(this,"placeRequests",new Map);o(this,"breakSelectedBlock",()=>{if(this.ray){const t=JSON.stringify(this.ray.coords),s=this.breakRequests.get(t);this.breakRequests.set(t,s===void 0?0:s+1)}});o(this,"placeSelectedBlock",()=>{if(this.ray){const t=JSON.stringify(v(this.ray.coords,dt(this.ray.face))),s=this.placeRequests.get(t);this.placeRequests.set(t,s===void 0?0:s+1)}});o(this,"applySystem",t=>{for(const[s,r]of this.breakRequests)r>30&&(this.world.setBlock(JSON.parse(s),0),this.breakRequests.delete(s));for(const[s,r]of this.placeRequests)r>20&&(this.world.setBlock(JSON.parse(s),this.placeID),this.placeRequests.delete(s));this.ray=this.world.castRay(this.camera.getPos(),this.camera.getDir(),100),this.ray?this.world.addHighlight(this.uniqueId,this.ray):this.world.removeHighlight(this.uniqueId)});this.uniqueId=Ut(32),this.camera=t,this.world=s}}const lt=[0,-1,0],Bt=[-1,0,0];class Yt{constructor(e,t){o(this,"canvas");o(this,"camera");o(this,"world");o(this,"entityList");o(this,"blockManager");o(this,"gl");o(this,"filledbuffer");o(this,"requestID");o(this,"resizeCanvas",()=>{this.canvas.width=window.innerWidth/2,this.canvas.height=window.innerHeight/2});o(this,"start",()=>this.animationLoop());o(this,"animationLoop",()=>{for(const e of this.entityList)e.update();this.world.update(this.camera.getPos()),this.world.render(this.camera.getMvp(lt)),this.requestID=window.requestAnimationFrame(this.animationLoop)});this.canvas=e,this.blockManager=t,this.camera=new Nt([0,0,0],[0,0,1],this.canvas),this.gl=e.getContext("webgl2"),this.world=new Ct(42,this.camera.getPos(),this.gl,t,this.camera);const s=new Xt(this.world),r=new Ft(this.camera,this.world),i=new Pt([new Ot(this.canvas,s,r),new Gt(this.camera),s,r],lt,Bt);this.entityList=[i],this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas)}}async function U(n){return new Promise((e,t)=>{const s=document.getElementById(n);s.onerror=t,s.onload=()=>e(s),s.complete&&e(s)})}async function P(n){return await Promise.all([U(`${n}-left`),U(`${n}-right`),U(`${n}-up`),U(`${n}-down`),U(`${n}-front`),U(`${n}-back`)])}async function Ht(){const n=new vt(16,[{name:"air",pointable:!1,light:!1,transparent:!0},{name:"grass",pointable:!0,light:!1,transparent:!1,textures:await P("grass")},{name:"soil",pointable:!0,light:!1,transparent:!1,textures:await P("soil")},{name:"stone",pointable:!0,light:!1,transparent:!1,textures:await P("stone")},{name:"glass",pointable:!0,light:!1,transparent:!0,textures:await P("glass")},{name:"lamp",pointable:!0,light:!0,transparent:!1,textures:await P("lamp")},{name:"selector",pointable:!0,light:!1,transparent:!1,textures:await P("selector")}]),e=document.getElementById("canvas");new Yt(e,n).start()}Ht();
