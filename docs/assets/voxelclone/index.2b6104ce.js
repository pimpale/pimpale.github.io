import"../modulepreload-polyfill.b7f2da20.js";import{m as _t}from"../mod.4956582c.js";function q(e){return Math.PI*e/180}function et(e){let s=0;for(const t of e)s+=t*t;return Math.sqrt(s)}function V(e){const s=et(e);return e.map(t=>t/s)}function B([e,s,t]){return[e,s,t]}function Z([e,s,t],[h,n,a]){return e*h+s*n+t*a}function J([e,s,t],[h,n,a]){return[s*a-t*n,t*h-e*a,e*n-s*h]}function y(e,s){return[e[0]*s,e[1]*s,e[2]*s]}function T(e,s){return[e[0]+s[0],e[1]+s[1],e[2]+s[2]]}function K(e,s){return[e[0]-s[0],e[1]-s[1],e[2]-s[2]]}function rt(e){const[s,t,h,n]=e;return[[s[0],t[0],h[0],n[0]],[s[1],t[1],h[1],n[1]],[s[2],t[2],h[2],n[2]],[s[3],t[3],h[3],n[3]]]}function ut(e,s,t,h){const n=1/Math.tan(e/2),a=h-t;return[[n/s,0,0,0],[0,n,0,0],[0,0,-(t+h)/a,-2*t*h/a],[0,0,-1,0]]}function ft(e,s,t){let h=V(K(s,e));const n=V(J(h,t)),a=V(J(n,h));if(!n.every(o=>o==o))throw"two parallel vectors were given";h=y(h,-1);const r=mt(-Z(n,e),-Z(a,e),-Z(h,e)),i=[[n[0],n[1],n[2],0],[a[0],a[1],a[2],0],[h[0],h[1],h[2],0],[0,0,0,1]];return $(r,i)}function mt(e,s,t){return[[1,0,0,e],[0,1,0,s],[0,0,1,t],[0,0,0,1]]}function k(e,s){return e[0]*s[0]+e[1]*s[1]+e[2]*s[2]+e[3]*s[3]}function $(e,s){const[t,h,n,a]=e,[r,i,o,c]=rt(s);return[[k(t,r),k(t,i),k(t,o),k(t,c)],[k(h,r),k(h,i),k(h,o),k(h,c)],[k(n,r),k(n,i),k(n,o),k(n,c)],[k(a,r),k(a,i),k(a,o),k(a,c)]]}function tt(e,s){return[e[0],e[1],e[2],s]}function Y(e){return[e[0],e[1],e[2]]}function H(e,s){const[t,h,n,a]=e;return[k(t,s),k(h,s),k(n,s),k(a,s)]}function ot([e,s,t],h){const n=(f,g,p)=>{const _=Math.sqrt(f*f+g*g+p*p);return[f/_,g/_,p/_]};let[a,r,i]=n(e,s,t),[o,c]=[Math.cos(h),Math.sin(h)],l=1-o;return[[a*a*l+o,a*r*l-i*c,a*i*l+r*c,0],[a*r*l+i*c,r*r*l+o,r*i*l-a*c,0],[a*i*l-r*c,r*i*l+a*c,i*i*l+o,0],[0,0,0,1]]}function at(e){const[s,t,h,n]=rt(e);return[...s,...t,...h,...n]}function dt(e,s,t){return Math.min(Math.max(e,s),t)}function it(e,s){if(!e)throw new Error(s)}function L(e,s){const t=e%s;return t<0?t+s:t}var A=(e=>(e[e.LEFT=0]="LEFT",e[e.RIGHT=1]="RIGHT",e[e.UP=2]="UP",e[e.DOWN=3]="DOWN",e[e.FRONT=4]="FRONT",e[e.BACK=5]="BACK",e))(A||{});function pt(e){switch(e){case 0:return[-1,0,0];case 1:return[1,0,0];case 2:return[0,-1,0];case 3:return[0,1,0];case 5:return[0,0,-1];case 4:return[0,0,1]}}class Et{constructor(s,t){this.buildTextureAtlas=h=>{let n=h.createTexture();h.bindTexture(h.TEXTURE_2D_ARRAY,n),h.pixelStorei(h.UNPACK_ALIGNMENT,1),h.texParameteri(h.TEXTURE_2D_ARRAY,h.TEXTURE_MIN_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D_ARRAY,h.TEXTURE_MAG_FILTER,h.NEAREST);const a=new Uint8Array(this.tileSize*this.tileSize*this.defs.length*6*4);h.texImage3D(h.TEXTURE_2D_ARRAY,0,h.RGBA,this.tileSize,this.tileSize,this.defs.length*6,0,h.RGBA,h.UNSIGNED_BYTE,a);for(let r=0;r<this.defs.length;r++){const i=this.defs[r];if(i.textures!==void 0)for(let o=0;o<i.textures.length;o++)h.texSubImage3D(h.TEXTURE_2D_ARRAY,0,0,0,r*6+o,this.tileSize,this.tileSize,1,h.RGBA,h.UNSIGNED_BYTE,i.textures[o])}return h.generateMipmap(h.TEXTURE_2D_ARRAY),n},this.tileSize=s,this.defs=t;for(let h=0;h<this.defs.length;h++){const n=this.defs[h];if(n.textures!==void 0)for(let a=0;a<n.textures.length;a++){const r=n.textures[a];it(r.height===s,`block #${h} face #${a} height != ${s}, found ${r.height}`),it(r.width===s,`block #${h} face #${a} width != ${s}, found ${r.width}`)}}}}function z(e,s,t){const h=e.createShader(s);return e.shaderSource(h,t),e.compileShader(h),h}function ct(e,s,t){const h=e.createProgram();for(const a of s)e.attachShader(h,a);for(const[a,r]of t)e.bindAttribLocation(h,a,r);if(e.linkProgram(h),e.getProgramParameter(h,e.LINK_STATUS))return h;for(const a of s)e.getShaderParameter(a,e.COMPILE_STATUS)||console.log(e.getShaderInfoLog(a)),e.deleteShader(a);return console.log(e.getProgramInfoLog(h)),e.deleteProgram(h),null}const vt=1,Tt=1,At=1,Rt=1,b=24,C=24,w=24,O=2,G=2,X=2,j=128,gt=18,W=9*gt,kt=`#version 300 es
precision highp int;
precision highp float;
uniform mat4 u_mvpMat;

in vec3 a_position;
out vec3 v_position;

in vec3 a_tuv;
out vec3 v_tuv;

in vec3 a_normal;
out vec3 v_normal;

void main() {
   v_tuv = a_tuv;
   v_normal = a_normal;
   v_position = a_position;
   // actual location
   gl_Position = u_mvpMat * vec4(a_position, 1.0);
}
`,xt=`#version 300 es
precision highp int;
precision highp float;
precision highp sampler2DArray;

// the texture atlas for the blocks
uniform sampler2DArray u_textureAtlas;

uniform int u_lightNumber;

// the light depth maps array
uniform sampler2DArray u_lightDepthArr;

// the light data array
uniform sampler2DArray u_lightDataArr;

// position
in vec3 v_position;

// normal
in vec3 v_normal;

// texCoord
in vec3 v_tuv;

out vec4 v_outColor;

void main() {
  vec4 color = texture(u_textureAtlas, v_tuv);

  float lightSum = 0.3;

  for(int i = 0; i < u_lightNumber; i++) {
    // get light position from texture
    vec3 lightPos = texelFetch(u_lightDataArr, ivec3(0, 0, i), 0).rgb;
    mat4 lightMvp = mat4(
        texelFetch(u_lightDataArr, ivec3(1, 0, i), 0),
        texelFetch(u_lightDataArr, ivec3(2, 0, i), 0),
        texelFetch(u_lightDataArr, ivec3(3, 0, i), 0),
        texelFetch(u_lightDataArr, ivec3(4, 0, i), 0)
    );
    vec4 lightSpacePosition = lightMvp * vec4(v_position, 1.0);

    vec3 projectedCoord = lightSpacePosition.xyz / lightSpacePosition.w;
    bool inRange =
        projectedCoord.z >= -1.0 &&
        projectedCoord.z <= 1.0 &&
        projectedCoord.x >= -1.0 &&
        projectedCoord.x <= 1.0 &&
        projectedCoord.y >= -1.0 &&
        projectedCoord.y <= 1.0;

    // remap coords to texCoords
    vec2 texCoord = (projectedCoord.xy + vec2(1.0, 1.0))/2.0;

    float depthMapDepth = texture(u_lightDepthArr, vec3(texCoord, i)).r;
    const float bias = 0.01;
    float currentDepth = (projectedCoord.z + 1.0)/2.0 - bias;

    if(inRange && currentDepth <= depthMapDepth) {
        float intensity = (1.0-currentDepth);
        vec3 lightDir = normalize(lightPos - v_position);
        float diffuseIntensity = max(dot(v_normal, lightDir), 0.0);
        lightSum += 7.0*diffuseIntensity*intensity;
    }
  }
  v_outColor = vec4(color.rgb*lightSum, color.a);
}
`,wt=`#version 300 es
precision highp float;
in vec3 a_position;
uniform mat4 u_mvpMat;
void main() {
   gl_Position = u_mvpMat * vec4(a_position, 1.0);
}
`,yt=`#version 300 es
precision highp float;
precision highp sampler2DArray;
in vec3 v_tuv;
out vec4 v_outColor;

void main() {
  v_outColor = vec4(0.0, 0.0, 0.0, 1.0);
}
`;class bt{constructor(s,t,h,n,a){this.POSITION_LOC=0,this.NORMAL_LOC=1,this.TUV_LOC=2,this.emptyChunk=new Uint16Array(b*C*w),this.getWorldChunkLoc=r=>[Math.floor(r[0]/b),Math.floor(r[1]/C),Math.floor(r[2]/w)],this.createGraphics=r=>{const i=this.gl.createVertexArray();this.gl.bindVertexArray(i);const o=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,o),this.gl.bufferData(this.gl.ARRAY_BUFFER,r,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.POSITION_LOC),this.gl.vertexAttribPointer(this.POSITION_LOC,3,this.gl.FLOAT,!1,9*4,0*4),this.gl.enableVertexAttribArray(this.NORMAL_LOC),this.gl.vertexAttribPointer(this.NORMAL_LOC,3,this.gl.FLOAT,!1,9*4,3*4),this.gl.enableVertexAttribArray(this.TUV_LOC),this.gl.vertexAttribPointer(this.TUV_LOC,3,this.gl.FLOAT,!1,9*4,6*4),{vao:i,buffer:o,vertexCount:r.length/9}},this.deleteGraphics=r=>{this.gl.deleteBuffer(r.buffer),this.gl.deleteVertexArray(r.vao)},this.deleteChunkGraphics=r=>{this.deleteGraphics(r.solid),this.deleteGraphics(r.transparent)},this.shouldBeLoaded=r=>{const i=K(r,this.worldChunkCenterLoc);return i[0]>=-O&&i[0]<=O&&i[1]>=-G&&i[1]<=G&&i[2]>=-X&&i[2]<=X},this.updateCameraLoc=()=>{for(const[i,o]of this.chunk_map)this.shouldBeLoaded(JSON.parse(i))||(o.graphics!==void 0&&this.deleteChunkGraphics(o.graphics),o.lights!==void 0&&this.freeChunkLightingGPUData.push(o.lights.data),this.chunk_map.delete(i));const r=[];for(let i=-O;i<=O;i++)for(let o=-G;o<=G;o++)for(let c=-X;c<=X;c++)r.push(T(this.worldChunkCenterLoc,[i,o,c]));r.sort((i,o)=>{const c=et(K(i,this.worldChunkCenterLoc)),l=et(K(o,this.worldChunkCenterLoc));return c-l});for(const i of r){const o=JSON.stringify(i);this.chunk_map.get(o)===void 0&&this.chunk_map.set(o,{})}},this.addHighlight=(r,i)=>{const o=this.highlights.get(r);o!==void 0&&this.deleteGraphics(o);const c=this.createGraphics(st([{bi:6,cubeLoc:i.coords,face:i.face}]));this.highlights.set(r,c)},this.removeHighlight=r=>{const i=this.highlights.get(r);i!==void 0&&(this.deleteGraphics(i),this.highlights.delete(r))},this.createLightData=r=>{const i=T(r.cubeLoc,[.5,.5,.5]),o=ut(q(90),1,.5,10),c=r.face===A.UP||r.face===A.DOWN?[-1,0,0]:[0,-1,0],l=ft(i,T(i,pt(r.face)),c),f=$(o,l);return[i,f]},this.updateLightDataTex=(r,i)=>{const o=new Float32Array(i.length*20);for(let c=0;c<i.length;c++){let[l,f]=i[c],[g,p,_,E]=rt(f);o.set(l,c*20),o.set(g,c*20+4),o.set(p,c*20+8),o.set(_,c*20+12),o.set(E,c*20+16)}this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,r),this.gl.texSubImage3D(this.gl.TEXTURE_2D_ARRAY,0,0,0,0,5,1,i.length,this.gl.RGBA,this.gl.FLOAT,o)},this.renderShadowMap=(r,i,o,c)=>{this.gl.useProgram(this.shadowProgram),this.gl.uniformMatrix4fv(this.shadowMvpMatLoc,!1,at(o)),this.gl.viewport(0,0,j,j),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,i),this.gl.clear(this.gl.DEPTH_BUFFER_BIT);for(const l of c)this.gl.bindVertexArray(l.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,l.vertexCount)},this.adjacentChunkLocs=r=>[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]].map(o=>T(r,o)),this.neighboringChunkLocs=r=>{const i=[];for(let o=-1;o<=1;o++)for(let c=-1;c<=1;c++)for(let l=-1;l<=1;l++)(l!==0||c!==0||o!==0)&&i.push(T(r,[o,c,l]));return i},this.getChunkBlocksIfExists=r=>{var o;const i=(o=this.chunk_map.get(JSON.stringify(r)))==null?void 0:o.blocks;return i||this.emptyChunk},this.update=r=>{let i=0;t:for(const[c,l]of this.chunk_map){const f=JSON.parse(c);if(l.blocks===void 0){l.blocks=Ct(f,this.noiseFn);for(const p of this.adjacentChunkLocs(f)){const _=this.chunk_map.get(JSON.stringify(p));_&&_.mesh&&(_.mesh.stale=!0)}i+=vt}if(i>1)break t;const g=[f[0]*b,f[1]*C,f[2]*w];if(l.mesh===void 0||l.mesh.stale){for(const u of this.adjacentChunkLocs(f))if(this.shouldBeLoaded(u)){const d=this.chunk_map.get(JSON.stringify(u));if(d===void 0||d.blocks===void 0)continue t}const{solid:p,transparent:_,lights:E}=Dt(g,this.blockManager,l.blocks,this.getChunkBlocksIfExists(T(f,[-1,0,0])),this.getChunkBlocksIfExists(T(f,[1,0,0])),this.getChunkBlocksIfExists(T(f,[0,-1,0])),this.getChunkBlocksIfExists(T(f,[0,1,0])),this.getChunkBlocksIfExists(T(f,[0,0,-1])),this.getChunkBlocksIfExists(T(f,[0,0,1])));l.mesh={solid:p,transparent:_,lights:E,stale:!1},l.graphics!==void 0&&(l.graphics.stale=!0),l.lights!==void 0&&(l.lights.stale=!0);for(const u of this.neighboringChunkLocs(f)){const d=this.chunk_map.get(JSON.stringify(u));d&&d.lights&&(d.lights.stale=!0)}i+=Tt}if(i>1||((l.graphics===void 0||l.graphics.stale)&&(l.graphics!==void 0&&this.deleteChunkGraphics(l.graphics),l.graphics={solid:this.createGraphics(st(l.mesh.solid)),transparent:this.createGraphics(st(l.mesh.transparent)),stale:!1},i+=At),i>1))break t;if(l.lights===void 0||l.lights.stale){const p=[c,...this.neighboringChunkLocs(f).map(u=>JSON.stringify(u))],_=p.flatMap(u=>{const d=this.chunk_map.get(u);return d&&d.mesh?d.mesh.lights.slice(0,gt):[]}).slice(0,W).map(this.createLightData);if(l.lights===void 0){const u=this.freeChunkLightingGPUData.pop();if(u===void 0)continue;l.lights={data:u,stale:!0,nLights:_.length}}else l.lights.nLights=_.length;const E=[];for(const u of p){const d=this.chunk_map.get(u);d&&d.graphics&&E.push(d.graphics.solid)}for(let u=0;u<_.length;u++)this.renderShadowMap(l.lights.data.shadowTexArr,l.lights.data.shadowFbs[u],_[u][1],E);this.updateLightDataTex(l.lights.data.lightDataTexArr,_),l.lights.stale=!1,i+=Rt}if(i>1)break t}const o=this.getWorldChunkLoc(r);(o[0]!==this.worldChunkCenterLoc[0]||o[1]!==this.worldChunkCenterLoc[1]||o[2]!==this.worldChunkCenterLoc[2])&&(this.worldChunkCenterLoc=o,this.updateCameraLoc())},this.render=r=>{this.gl.useProgram(this.renderProgram),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.uniformMatrix4fv(this.renderMvpMatLoc,!1,at(r)),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.textureAtlas),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT);for(const i of this.chunk_map.values())i.graphics!==void 0&&i.lights!==void 0&&(this.gl.bindVertexArray(i.graphics.solid.vao),this.gl.uniform1i(this.renderLightNumber,i.lights.nLights),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,i.lights.data.shadowTexArr),this.gl.activeTexture(this.gl.TEXTURE2),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,i.lights.data.lightDataTexArr),this.gl.drawArrays(this.gl.TRIANGLES,0,i.graphics.solid.vertexCount));this.gl.depthMask(!1);for(const i of this.chunk_map.values())i.graphics!==void 0&&(this.gl.bindVertexArray(i.graphics.transparent.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,i.graphics.transparent.vertexCount));this.gl.depthMask(!0),this.gl.disable(this.gl.DEPTH_TEST);for(const i of this.highlights.values())this.gl.bindVertexArray(i.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,i.vertexCount)},this.getBlock=r=>{const i=this.chunk_map.get(JSON.stringify(this.getWorldChunkLoc(r)));return i&&i.blocks?i.blocks[x(L(r[0],b),L(r[1],C),L(r[2],w))]:null},this.setBlock=(r,i)=>{const o=f=>{const g=this.chunk_map.get(JSON.stringify(f));g&&g.mesh&&(g.mesh.stale=!0)},c=this.getWorldChunkLoc(r),l=this.chunk_map.get(JSON.stringify(c));if(l&&l.blocks){const f=Math.floor(L(r[0],b)),g=Math.floor(L(r[1],C)),p=Math.floor(L(r[2],w));return l.blocks[x(f,g,p)]=i,o(c),f===0&&o(T(c,[-1,0,0])),f===b-1&&o(T(c,[1,0,0])),g===0&&o(T(c,[0,-1,0])),g===C-1&&o(T(c,[0,1,0])),p===0&&o(T(c,[0,0,-1])),p===w-1&&o(T(c,[0,0,1])),!0}else return!1},this.intbound=(r,i)=>{const o=Math.round(r)==r;if(i<0&&o)return 0;let c;return r==0?c=1:c=Math.ceil(r),(i>0?c-r:r-Math.floor(r))/Math.abs(i)},this.castRay=(r,i,o)=>{let c=Math.floor(r[0]),l=Math.floor(r[1]),f=Math.floor(r[2]);const[g,p,_]=i,E=Math.sign(g),u=Math.sign(p),d=Math.sign(_);let v=this.intbound(r[0],g),m=this.intbound(r[1],p),R=this.intbound(r[2],_);const M=E/g,S=u/p,ht=d/_;it(Z(i,i)!==0,"direction vector is 0");const F=o/Math.sqrt(g*g+p*p+_*_);let U=A.UP;for(;;){const nt=this.getBlock([c,l,f]);if(nt===null)break;if(this.blockManager.defs[nt].pointable)return{coords:[c,l,f],face:U};if(v<m)if(v<R){if(v>F)break;c+=E,v+=M,U=E==1?A.LEFT:A.RIGHT}else{if(R>F)break;f+=d,R+=ht,U=d==1?A.BACK:A.FRONT}else if(m<R){if(m>F)break;l+=u,m+=S,U=u==1?A.UP:A.DOWN}else{if(R>F)break;f+=d,R+=ht,U=d==1?A.BACK:A.FRONT}}return null},this.gl=h,this.blockManager=n,this.seed=s,this.noiseFn=_t.makeNoise3D(s),this.worldChunkCenterLoc=this.getWorldChunkLoc(t),this.chunk_map=new Map,this.highlights=new Map,this.renderProgram=ct(this.gl,[z(this.gl,this.gl.VERTEX_SHADER,kt),z(this.gl,this.gl.FRAGMENT_SHADER,xt)],new Map([[this.POSITION_LOC,"a_position"],[this.NORMAL_LOC,"a_normal"],[this.TUV_LOC,"a_tuv"]])),this.gl.useProgram(this.renderProgram),console.log(this.gl.getParameter(this.gl.MAX_VARYING_VECTORS)),this.renderMvpMatLoc=this.gl.getUniformLocation(this.renderProgram,"u_mvpMat"),this.renderTextureAtlasLoc=this.gl.getUniformLocation(this.renderProgram,"u_textureAtlas"),this.renderLightNumber=this.gl.getUniformLocation(this.renderProgram,"u_lightNumber"),this.renderLightDepthArr=this.gl.getUniformLocation(this.renderProgram,"u_lightDepthArr"),this.renderLightDataArr=this.gl.getUniformLocation(this.renderProgram,"u_lightDataArr"),this.gl.activeTexture(this.gl.TEXTURE0),this.textureAtlas=this.blockManager.buildTextureAtlas(this.gl),this.gl.uniform1i(this.renderTextureAtlasLoc,0),this.gl.uniform1i(this.renderLightDepthArr,1),this.gl.uniform1i(this.renderLightDataArr,2),this.shadowProgram=ct(this.gl,[z(this.gl,this.gl.VERTEX_SHADER,wt),z(this.gl,this.gl.FRAGMENT_SHADER,yt)],new Map([[this.POSITION_LOC,"a_position"]])),this.gl.useProgram(this.shadowProgram),this.shadowMvpMatLoc=this.gl.getUniformLocation(this.shadowProgram,"u_mvpMat"),this.freeChunkLightingGPUData=[];for(let r=0;r<(O*2+1)*(G*2+1)*(X*2+1);r++)this.freeChunkLightingGPUData.push(Mt(this.gl));this.updateCameraLoc()}}function x(e,s,t){return Math.floor(e)*C*w+Math.floor(s)*w+Math.floor(t)}function Ct(e,s){const t=[e[0]*b,e[1]*C,e[2]*w],h=new Uint16Array(b*C*w),n=20;for(let a=0;a<b;a++)for(let r=0;r<C;r++)for(let i=0;i<w;i++){const o=x(a,r,i),c=a+t[0],l=r+t[1],f=i+t[2],g=s(c/n,l/n,f/n),p=s(c/n,(l-1)/n,f/n);g>.5?p>.5?h[o]=3:h[o]=1:h[o]=0}return h[b-2]=5,h}function D(e,s){return!(e.textures===void 0||!e.transparent&&!s.transparent||e==s)}function Dt(e,s,t,h,n,a,r,i,o){const c=[],l=[],f=[];for(let g=0;g<b;g++)for(let p=0;p<C;p++)for(let _=0;_<w;_++){const E=t[x(g,p,_)],u=[e[0]+g,e[1]+p,e[2]+_],d=s.defs[E];if(d.textures===void 0)continue;const v=d.transparent?f:l;if(g===0?D(d,s.defs[h[x(b-1,p,_)]]):D(d,s.defs[t[x(g-1,p,_)]])){const m={bi:E,cubeLoc:u,face:A.LEFT};v.push(m),d.light&&c.push(m)}if(g===b-1?D(d,s.defs[n[x(0,p,_)]]):D(d,s.defs[t[x(g+1,p,_)]])){const m={bi:E,cubeLoc:u,face:A.RIGHT};v.push(m),d.light&&c.push(m)}if(p===0?D(d,s.defs[a[x(g,C-1,_)]]):D(d,s.defs[t[x(g,p-1,_)]])){const m={bi:E,cubeLoc:u,face:A.UP};v.push(m),d.light&&c.push(m)}if(p===C-1?D(d,s.defs[r[x(g,0,_)]]):D(d,s.defs[t[x(g,p+1,_)]])){const m={bi:E,cubeLoc:u,face:A.DOWN};v.push(m),d.light&&c.push(m)}if(_===0?D(d,s.defs[i[x(g,p,w-1)]]):D(d,s.defs[t[x(g,p,_-1)]])){const m={bi:E,cubeLoc:u,face:A.BACK};v.push(m),d.light&&c.push(m)}if(_===w-1?D(d,s.defs[o[x(g,p,0)]]):D(d,s.defs[t[x(g,p,_+1)]])){const m={bi:E,cubeLoc:u,face:A.FRONT};v.push(m),d.light&&c.push(m)}}return{solid:l,transparent:f,lights:c}}function st(e){const s=new Float32Array(e.length*6*9);let t=0;for(const{bi:h,face:n,cubeLoc:[a,r,i]}of e){const o=[a+0,r+0,i+0],c=[a+1,r+0,i+0],l=[a+0,r+0,i+1],f=[a+1,r+0,i+1],g=[a+0,r+1,i+0],p=[a+1,r+1,i+0],_=[a+0,r+1,i+1],E=[a+1,r+1,i+1],u=h*6+n,d=[-1,0,0],v=[1,0,0],m=[0,-1,0],R=[0,1,0],M=[0,0,-1],S=[0,0,1];switch(n){case A.LEFT:{s.set(o,t),t+=3,s.set(d,t),t+=3,s.set([1,0,u],t),t+=3,s.set(l,t),t+=3,s.set(d,t),t+=3,s.set([0,0,u],t),t+=3,s.set(g,t),t+=3,s.set(d,t),t+=3,s.set([1,1,u],t),t+=3,s.set(l,t),t+=3,s.set(d,t),t+=3,s.set([0,0,u],t),t+=3,s.set(_,t),t+=3,s.set(d,t),t+=3,s.set([0,1,u],t),t+=3,s.set(g,t),t+=3,s.set(d,t),t+=3,s.set([1,1,u],t),t+=3;break}case A.RIGHT:{s.set(c,t),t+=3,s.set(v,t),t+=3,s.set([0,0,u],t),t+=3,s.set(p,t),t+=3,s.set(v,t),t+=3,s.set([0,1,u],t),t+=3,s.set(f,t),t+=3,s.set(v,t),t+=3,s.set([1,0,u],t),t+=3,s.set(f,t),t+=3,s.set(v,t),t+=3,s.set([1,0,u],t),t+=3,s.set(p,t),t+=3,s.set(v,t),t+=3,s.set([0,1,u],t),t+=3,s.set(E,t),t+=3,s.set(v,t),t+=3,s.set([1,1,u],t),t+=3;break}case A.UP:{s.set(l,t),t+=3,s.set(m,t),t+=3,s.set([1,1,u],t),t+=3,s.set(o,t),t+=3,s.set(m,t),t+=3,s.set([1,0,u],t),t+=3,s.set(c,t),t+=3,s.set(m,t),t+=3,s.set([0,0,u],t),t+=3,s.set(l,t),t+=3,s.set(m,t),t+=3,s.set([1,1,u],t),t+=3,s.set(c,t),t+=3,s.set(m,t),t+=3,s.set([0,0,u],t),t+=3,s.set(f,t),t+=3,s.set(m,t),t+=3,s.set([0,1,u],t),t+=3;break}case A.DOWN:{s.set(g,t),t+=3,s.set(R,t),t+=3,s.set([0,0,u],t),t+=3,s.set(_,t),t+=3,s.set(R,t),t+=3,s.set([0,1,u],t),t+=3,s.set(p,t),t+=3,s.set(R,t),t+=3,s.set([1,0,u],t),t+=3,s.set(p,t),t+=3,s.set(R,t),t+=3,s.set([1,0,u],t),t+=3,s.set(_,t),t+=3,s.set(R,t),t+=3,s.set([0,1,u],t),t+=3,s.set(E,t),t+=3,s.set(R,t),t+=3,s.set([1,1,u],t),t+=3;break}case A.BACK:{s.set(o,t),t+=3,s.set(M,t),t+=3,s.set([0,0,u],t),t+=3,s.set(g,t),t+=3,s.set(M,t),t+=3,s.set([0,1,u],t),t+=3,s.set(c,t),t+=3,s.set(M,t),t+=3,s.set([1,0,u],t),t+=3,s.set(c,t),t+=3,s.set(M,t),t+=3,s.set([1,0,u],t),t+=3,s.set(g,t),t+=3,s.set(M,t),t+=3,s.set([0,1,u],t),t+=3,s.set(p,t),t+=3,s.set(M,t),t+=3,s.set([1,1,u],t),t+=3;break}case A.FRONT:{s.set(_,t),t+=3,s.set(S,t),t+=3,s.set([1,1,u],t),t+=3,s.set(l,t),t+=3,s.set(S,t),t+=3,s.set([1,0,u],t),t+=3,s.set(f,t),t+=3,s.set(S,t),t+=3,s.set([0,0,u],t),t+=3,s.set(_,t),t+=3,s.set(S,t),t+=3,s.set([1,1,u],t),t+=3,s.set(f,t),t+=3,s.set(S,t),t+=3,s.set([0,0,u],t),t+=3,s.set(E,t),t+=3,s.set(S,t),t+=3,s.set([0,1,u],t),t+=3;break}}}return s}const Mt=e=>{const s=e.createTexture();e.bindTexture(e.TEXTURE_2D_ARRAY,s),e.texImage3D(e.TEXTURE_2D_ARRAY,0,e.RGBA32F,5,1,W,0,e.RGBA,e.FLOAT,null),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);const t=e.createTexture();e.bindTexture(e.TEXTURE_2D_ARRAY,t),e.texImage3D(e.TEXTURE_2D_ARRAY,0,e.DEPTH_COMPONENT32F,j,j,W,0,e.DEPTH_COMPONENT,e.FLOAT,null),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);const h=[];for(let n=0;n<W;n++){const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTextureLayer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,t,0,n),h.push(a)}return{shadowTexArr:t,shadowFbs:h,lightDataTexArr:s}};class St{constructor(s,t,h,n){const a=tt(h,0),r=tt(n,0),i=tt(J(h,n),0),o=ot(h,t),c=Y(H(o,r)),l=ot(c,s),f=$(l,o);this.right=Y(H(f,r)),this.up=Y(H(f,a)),this.front=Y(H(f,i))}}class Lt{constructor(s,t,h){this.getPos=()=>B(this.pos),this.setPos=n=>this.pos=B(n),this.getDir=()=>B(this.dir),this.setDir=n=>this.dir=B(n),this.getMvp=n=>{const a=q(90),r=this.canvas.width/this.canvas.height,i=ut(a,r,.1,100),o=ft(this.pos,T(this.pos,this.dir),n);return $(i,o)},this.pos=s,this.dir=t,this.canvas=h}}class Q{}function Pt(e){function s(h){return h.toString(16).padStart(2,"0")}const t=new Uint8Array(e/2);return window.crypto.getRandomValues(t),Array.from(t,s).join("")}class It{constructor(s,t,h,n,a){this.update=()=>{for(const r of this.components)r.applySystem(this)},this.components=s,this.worldup=t,this.worldright=h,this.pos=n===void 0?[0,0,0]:n,this.dir=a===void 0?[1,0,0]:a}}class Nt extends Q{constructor(s,t,h){super(),this.pitch=0,this.yaw=0,this.controlsEnabled=!1,this.fast=!1,this.fly=!0,this.keys=new Set,this.leftMouseDown=!1,this.rightMouseDown=!1,this.applySystem=n=>{const a=new St(this.pitch,this.yaw,n.worldup,n.worldright);if(n.dir=y(a.front,-1),this.controlsEnabled){const r=V(J(a.right,n.worldup));let i=this.fast?.1:.04;this.fly?(this.keys.has("KeyW")&&this.physics.go(y(r,i)),this.keys.has("KeyS")&&this.physics.go(y(r,-i)),this.keys.has("KeyA")&&this.physics.go(y(a.right,i)),this.keys.has("KeyD")&&this.physics.go(y(a.right,-i)),this.keys.has("ShiftLeft")&&this.physics.go(y(n.worldup,-i)),this.keys.has("Space")&&this.physics.go(y(n.worldup,i))):(this.keys.has("KeyW")&&this.physics.go(y(r,i)),this.keys.has("KeyS")&&this.physics.go(y(r,-i)),this.keys.has("KeyA")&&this.physics.go(y(a.right,i)),this.keys.has("KeyD")&&this.physics.go(y(a.right,-i)),this.keys.has("Space")&&this.physics.jump()),this.keys.has("Digit1")&&(this.blockInteraction.placeID=1),this.keys.has("Digit2")&&(this.blockInteraction.placeID=2),this.keys.has("Digit3")&&(this.blockInteraction.placeID=3),this.keys.has("Digit4")&&(this.blockInteraction.placeID=4),this.keys.has("Digit5")&&(this.blockInteraction.placeID=5),this.leftMouseDown?this.blockInteraction.breakSelectedBlock():this.rightMouseDown&&this.blockInteraction.placeSelectedBlock()}},this.physics=t,this.blockInteraction=h,this.grabControlElement=s,window.addEventListener("keypress",n=>{n.key==="f"&&(this.fast=!this.fast),n.key==="m"&&(this.fly?(this.fly=!1,this.physics.enablePhysics()):(this.fly=!0,this.physics.disablePhysics()))}),window.addEventListener("keydown",n=>this.keys.add(n.code)),window.addEventListener("keyup",n=>this.keys.delete(n.code)),this.grabControlElement.addEventListener("click",n=>{this.grabControlElement.requestPointerLock()}),document.addEventListener("pointerlockchange",n=>{this.controlsEnabled=document.pointerLockElement===this.grabControlElement}),window.addEventListener("mousemove",n=>{if(!this.controlsEnabled)return;const a=.0015;this.yaw-=n.movementX*a,this.pitch+=n.movementY*a,this.pitch=dt(this.pitch,q(-89.9),q(89.9))}),window.addEventListener("mousedown",n=>{n.button===0?this.leftMouseDown=!0:n.button===2&&(this.rightMouseDown=!0)}),window.addEventListener("mouseup",n=>{n.button===0?this.leftMouseDown=!1:n.button===2&&(this.rightMouseDown=!1)})}}class Ut extends Q{constructor(s){super(),this.applySystem=t=>{this.camera.setDir(t.dir),this.camera.setPos(t.pos)},this.camera=s}}function P(e,s){return e.minX<=s.maxX&&e.maxX>=s.minX&&e.minY<=s.maxY&&e.maxY>=s.minY&&e.minZ<=s.maxZ&&e.maxZ>=s.minZ}class Ot extends Q{constructor(s){super(),this.upVel=0,this.wantGo=[0,0,0],this.wantJump=!1,this.x_rad=.3,this.z_rad=.3,this.p_y_rad=1.5,this.n_y_rad=.3,this.side_depth=.1,this.head_depth=.1,this.foot_depth=.6,this.physicsEnabled=!1,this.enablePhysics=()=>this.physicsEnabled=!0,this.disablePhysics=()=>{this.physicsEnabled=!1,this.upVel=0},this.getPhysicsEnabled=()=>this.physicsEnabled,this.go=t=>{this.wantGo=T(this.wantGo,t)},this.jump=()=>{this.wantJump=!0},this.calculatePlayerIntersection=t=>{let h={minX:t[0]-this.x_rad,maxX:t[0]-this.x_rad+this.side_depth,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},n={minX:t[0]+this.x_rad-this.side_depth,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},a={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]-this.z_rad+this.side_depth},r={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]+this.z_rad-this.side_depth,maxZ:t[2]+this.z_rad},i={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad,maxY:t[1]-this.n_y_rad+this.head_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},o={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]+this.p_y_rad-this.foot_depth,maxY:t[1]+this.p_y_rad,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},c=!1,l=!1,f=!1,g=!1,p=!1,_=!1;for(let E=-2;E<=2;E++)for(let u=-2;u<=2;u++)for(let d=-2;d<=2;d++){const v=T(t,[E,u,d]).map(R=>Math.floor(R)),m=this.world.getBlock(v);if(m!=null&&this.world.blockManager.defs[m].pointable){let R={minX:v[0],maxX:v[0]+1,minY:v[1],maxY:v[1]+1,minZ:v[2],maxZ:v[2]+1};!c&&P(h,R)&&(c=!0),!l&&P(n,R)&&(l=!0),!f&&P(i,R)&&(f=!0),!g&&P(o,R)&&(g=!0),!p&&P(a,R)&&(p=!0),!_&&P(r,R)&&(_=!0)}}return{left:c,right:l,up:f,down:g,back:p,front:_}},this.applySystem=t=>{if(!this.physicsEnabled){t.pos=T(t.pos,this.wantGo),this.wantGo=[0,0,0];return}this.upVel-=.001,this.upVel=dt(this.upVel,-.1,.1),this.wantGo=T(this.wantGo,y(t.worldup,this.upVel));let h=T(t.pos,this.wantGo);const n=this.calculatePlayerIntersection(h);this.wantJump&&n.down&&(this.upVel=.05),this.wantJump=!1,n.left&&(this.wantGo[0]=Math.max(this.wantGo[0],0)),n.right&&(this.wantGo[0]=Math.min(this.wantGo[0],0)),n.up&&(this.wantGo[1]=Math.max(this.wantGo[1],0),this.upVel=Math.min(this.upVel,0)),n.down&&(this.wantGo[1]=Math.min(this.wantGo[1],0),this.upVel=Math.max(this.upVel,0)),n.back&&(this.wantGo[2]=Math.max(this.wantGo[2],0)),n.front&&(this.wantGo[2]=Math.min(this.wantGo[2],0)),t.pos=T(t.pos,this.wantGo),this.wantGo=[0,0,0]},this.world=s}}class Gt extends Q{constructor(s,t){super(),this.placeID=2,this.ray=null,this.breakRequests=new Map,this.placeRequests=new Map,this.breakSelectedBlock=()=>{if(this.ray){const h=JSON.stringify(this.ray.coords),n=this.breakRequests.get(h);this.breakRequests.set(h,n===void 0?0:n+1)}},this.placeSelectedBlock=()=>{if(this.ray){const h=JSON.stringify(T(this.ray.coords,pt(this.ray.face))),n=this.placeRequests.get(h);this.placeRequests.set(h,n===void 0?0:n+1)}},this.applySystem=h=>{for(const[n,a]of this.breakRequests)a>30&&(this.world.setBlock(JSON.parse(n),0),this.breakRequests.delete(n));for(const[n,a]of this.placeRequests)a>20&&(this.world.setBlock(JSON.parse(n),this.placeID),this.placeRequests.delete(n));this.ray=this.world.castRay(this.camera.getPos(),this.camera.getDir(),100),this.ray?this.world.addHighlight(this.uniqueId,this.ray):this.world.removeHighlight(this.uniqueId)},this.uniqueId=Pt(32),this.camera=s,this.world=t}}const lt=[0,-1,0],Xt=[-1,0,0];class Ft{constructor(s,t){this.resizeCanvas=()=>{this.canvas.width=window.innerWidth/2,this.canvas.height=window.innerHeight/2},this.start=()=>this.animationLoop(),this.animationLoop=()=>{for(const r of this.entityList)r.update();this.world.update(this.camera.getPos()),this.world.render(this.camera.getMvp(lt)),this.requestID=window.requestAnimationFrame(this.animationLoop)},this.canvas=s,this.blockManager=t,this.camera=new Lt([0,0,0],[0,0,1],this.canvas),this.gl=s.getContext("webgl2"),this.world=new bt(42,this.camera.getPos(),this.gl,t,this.camera);const h=new Ot(this.world),n=new Gt(this.camera,this.world),a=new It([new Nt(this.canvas,h,n),new Ut(this.camera),h,n],lt,Xt);this.entityList=[a],this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas)}}async function I(e){return new Promise((s,t)=>{const h=document.getElementById(e);h.onerror=t,h.onload=()=>s(h),h.complete&&s(h)})}async function N(e){return await Promise.all([I(`${e}-left`),I(`${e}-right`),I(`${e}-up`),I(`${e}-down`),I(`${e}-front`),I(`${e}-back`)])}async function Bt(){const e=new Et(16,[{name:"air",pointable:!1,light:!1,transparent:!0},{name:"grass",pointable:!0,light:!1,transparent:!1,textures:await N("grass")},{name:"soil",pointable:!0,light:!1,transparent:!1,textures:await N("soil")},{name:"stone",pointable:!0,light:!1,transparent:!1,textures:await N("stone")},{name:"glass",pointable:!0,light:!1,transparent:!0,textures:await N("glass")},{name:"lamp",pointable:!0,light:!0,transparent:!1,textures:await N("lamp")},{name:"selector",pointable:!0,light:!1,transparent:!1,textures:await N("selector")}]),s=document.getElementById("canvas");new Ft(s,e).start()}Bt();
