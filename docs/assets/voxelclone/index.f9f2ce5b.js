import"../modulepreload-polyfill.b7f2da20.js";import{m as Rt}from"../mod.4956582c.js";function q(n){return Math.PI*n/180}function nt([n,e,t]){return Math.hypot(n,e,t)}function W(n){const e=nt(n);return n.map(t=>t/e)}function F([n,e,t]){return[n,e,t]}function j([n,e,t],[s,r,c]){return n*s+e*r+t*c}function $([n,e,t],[s,r,c]){return[e*c-t*r,t*s-n*c,n*r-e*s]}function y(n,e){return[n[0]*e,n[1]*e,n[2]*e]}function R(n,e){return[n[0]+e[0],n[1]+e[1],n[2]+e[2]]}function X(n,e){return[n[0]-e[0],n[1]-e[1],n[2]-e[2]]}function ct(n){const[e,t,s,r]=n;return[[e[0],t[0],s[0],r[0]],[e[1],t[1],s[1],r[1]],[e[2],t[2],s[2],r[2]],[e[3],t[3],s[3],r[3]]]}function _t(n,e,t,s){const r=1/Math.tan(n/2),c=s-t;return[[r/e,0,0,0],[0,r,0,0],[0,0,-(t+s)/c,-2*t*s/c],[0,0,-1,0]]}function mt(n,e,t){let s=W(X(e,n));const r=W($(s,t)),c=W($(r,s));if(!r.every(o=>o==o))throw"two parallel vectors were given";s=y(s,-1);const h=kt(-j(r,n),-j(c,n),-j(s,n)),i=[[r[0],r[1],r[2],0],[c[0],c[1],c[2],0],[s[0],s[1],s[2],0],[0,0,0,1]];return Q(h,i)}function kt(n,e,t){return[[1,0,0,n],[0,1,0,e],[0,0,1,t],[0,0,0,1]]}function v(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]+n[3]*e[3]}function Q(n,e){const[t,s,r,c]=n,[h,i,o,a]=ct(e);return[[v(t,h),v(t,i),v(t,o),v(t,a)],[v(s,h),v(s,i),v(s,o),v(s,a)],[v(r,h),v(r,i),v(r,o),v(r,a)],[v(c,h),v(c,i),v(c,o),v(c,a)]]}function et(n,e){return[n[0],n[1],n[2],e]}function Y(n){return[n[0],n[1],n[2]]}function H(n,e){const[t,s,r,c]=n;return[v(t,e),v(s,e),v(r,e),v(c,e)]}function ft([n,e,t],s){const r=(d,g,f)=>{const p=Math.sqrt(d*d+g*g+f*f);return[d/p,g/p,f/p]};let[c,h,i]=r(n,e,t),[o,a]=[Math.cos(s),Math.sin(s)],l=1-o;return[[c*c*l+o,c*h*l-i*a,c*i*l+h*a,0],[c*h*l+i*a,h*h*l+o,h*i*l-c*a,0],[c*i*l-h*a,h*i*l+c*a,i*i*l+o,0],[0,0,0,1]]}function dt(n){const[e,t,s,r]=ct(n);return[...e,...t,...s,...r]}function Et(n,e,t){return Math.min(Math.max(n,e),t)}function O(n,e){if(!n)throw new Error(e)}function I(n,e){const t=n%e;return t<0?t+e:t}var k=(n=>(n[n.LEFT=0]="LEFT",n[n.RIGHT=1]="RIGHT",n[n.UP=2]="UP",n[n.DOWN=3]="DOWN",n[n.FRONT=4]="FRONT",n[n.BACK=5]="BACK",n))(k||{});function Tt(n){switch(n){case 0:return[-1,0,0];case 1:return[1,0,0];case 2:return[0,-1,0];case 3:return[0,1,0];case 5:return[0,0,-1];case 4:return[0,0,1]}}class xt{constructor(e,t){this.buildTextureAtlas=s=>{let r=s.createTexture();s.bindTexture(s.TEXTURE_2D_ARRAY,r),s.pixelStorei(s.UNPACK_ALIGNMENT,1),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MAG_FILTER,s.NEAREST);const c=new Uint8Array(this.tileSize*this.tileSize*this.defs.length*6*4);s.texImage3D(s.TEXTURE_2D_ARRAY,0,s.RGBA,this.tileSize,this.tileSize,this.defs.length*6,0,s.RGBA,s.UNSIGNED_BYTE,c);for(let h=0;h<this.defs.length;h++){const i=this.defs[h];if(i.textures!==void 0)for(let o=0;o<i.textures.length;o++)s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,h*6+o,this.tileSize,this.tileSize,1,s.RGBA,s.UNSIGNED_BYTE,i.textures[o])}return s.generateMipmap(s.TEXTURE_2D_ARRAY),r},this.tileSize=e,this.defs=t;for(let s=0;s<this.defs.length;s++){const r=this.defs[s];if(r.textures!==void 0)for(let c=0;c<r.textures.length;c++){const h=r.textures[c];O(h.height===e,`block #${s} face #${c} height != ${e}, found ${h.height}`),O(h.width===e,`block #${s} face #${c} width != ${e}, found ${h.width}`)}}}}function z(n,e,t){const s=n.createShader(e);return n.shaderSource(s,t),n.compileShader(s),s}function pt(n,e,t){const s=n.createProgram();for(const c of e)n.attachShader(s,c);for(const[c,h]of t)n.bindAttribLocation(s,c,h);if(n.linkProgram(s),n.getProgramParameter(s,n.LINK_STATUS))return s;for(const c of e)n.getShaderParameter(c,n.COMPILE_STATUS)||console.log(n.getShaderInfoLog(c)),n.deleteShader(c);return console.log(n.getProgramInfoLog(s)),n.deleteProgram(s),null}const vt=1,At=1,wt=1,yt=1,bt=1,C=32,b=32,w=32,ht=2,rt=2,ot=2,K=1,V=1,Z=1,J=256,P=12,at=(ht*2+1)*(rt*2+1)*(ot*2+1),st=P*at,Dt=`#version 300 es
precision highp int;
precision highp float;
uniform mat4 u_mvpMat;

in vec3 a_position;
out vec3 v_position;

in vec3 a_tuv;
out vec3 v_tuv;

in vec3 a_normal;
out vec3 v_normal;

void main() {
   v_tuv = a_tuv;
   v_normal = a_normal;
   v_position = a_position;
   // actual location
   gl_Position = u_mvpMat * vec4(a_position, 1.0);
}
`,Ct=`#version 300 es
precision highp int;
precision highp float;
precision highp isampler2D;
precision highp sampler2DArray;

// the texture atlas for the blocks
uniform sampler2DArray u_textureAtlas;

// Shared between all chunks
uniform sampler2DArray u_lightDepthArr;
uniform sampler2DArray u_lightDataArr;

// specific to the chunk.
// Contains 27 entries of start indexes and lengths
uniform isampler2D u_lightIndexes;

// position
in vec3 v_position;

// normal
in vec3 v_normal;

// texCoord
in vec3 v_tuv;

out vec4 v_outColor;

void main() {
  vec4 color = texture(u_textureAtlas, v_tuv);

  float lightSum = 0.2;
  for(int c = 0; c < 27; c++) {
    ivec3 lightIndexData = texelFetch(u_lightIndexes, ivec2(c, 0), 0).xyz;
    // if marked empty, skip chunk
    if(lightIndexData.z == 0) {
        continue;
    }

    for(int i = lightIndexData.x; i < lightIndexData.y; i++) {
      // get light position from texture
      vec3 lightPos = texelFetch(u_lightDataArr, ivec3(0, 0, i), 0).rgb;
      mat4 lightMvp = mat4(
          texelFetch(u_lightDataArr, ivec3(1, 0, i), 0),
          texelFetch(u_lightDataArr, ivec3(2, 0, i), 0),
          texelFetch(u_lightDataArr, ivec3(3, 0, i), 0),
          texelFetch(u_lightDataArr, ivec3(4, 0, i), 0)
      );
      vec4 lightSpacePosition = lightMvp * vec4(v_position, 1.0);

      vec3 projectedCoord = lightSpacePosition.xyz / lightSpacePosition.w;
      bool inRange =
          projectedCoord.z >= -1.0 &&
          projectedCoord.z <= 1.0 &&
          projectedCoord.x >= -1.0 &&
          projectedCoord.x <= 1.0 &&
          projectedCoord.y >= -1.0 &&
          projectedCoord.y <= 1.0;

      // remap coords to texCoords
      vec2 texCoord = (projectedCoord.xy + vec2(1.0, 1.0))/2.0;

      float depthMapDepth = texture(u_lightDepthArr, vec3(texCoord, i)).r;
      const float bias = 0.005;
      float currentDepth = (projectedCoord.z + 1.0)/2.0 - bias;

      if(inRange && currentDepth <= depthMapDepth) {
          float intensity = 1.0-currentDepth;
          vec3 lightDir = normalize(lightPos - v_position);
          float diffuseIntensity = max(dot(v_normal, lightDir), 0.0);
          lightSum += 7.0*diffuseIntensity*intensity;
      }
    }
  }

  v_outColor = vec4(color.rgb*lightSum, color.a);
}
`,Lt=`#version 300 es
precision highp float;
in vec3 a_position;
uniform mat4 u_mvpMat;
void main() {
   gl_Position = u_mvpMat * vec4(a_position, 1.0);
}
`,Mt=`#version 300 es
precision highp float;
in vec3 v_tuv;
out vec4 v_outColor;

void main() {
  v_outColor = vec4(0.0, 0.0, 0.0, 1.0);
}
`;class It{constructor(e,t,s,r,c){this.POSITION_LOC=0,this.NORMAL_LOC=1,this.TUV_LOC=2,this.emptyChunk=new Uint16Array(C*b*w),this.getWorldChunkLoc=h=>[Math.floor(h[0]/C),Math.floor(h[1]/b),Math.floor(h[2]/w)],this.createGraphics=h=>{const i=this.gl.createVertexArray();this.gl.bindVertexArray(i);const o=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,o),this.gl.bufferData(this.gl.ARRAY_BUFFER,h,this.gl.DYNAMIC_DRAW),this.gl.enableVertexAttribArray(this.POSITION_LOC),this.gl.vertexAttribPointer(this.POSITION_LOC,3,this.gl.FLOAT,!1,9*4,0*4),this.gl.enableVertexAttribArray(this.NORMAL_LOC),this.gl.vertexAttribPointer(this.NORMAL_LOC,3,this.gl.FLOAT,!1,9*4,3*4),this.gl.enableVertexAttribArray(this.TUV_LOC),this.gl.vertexAttribPointer(this.TUV_LOC,3,this.gl.FLOAT,!1,9*4,6*4),{vao:i,buffer:o,vertexCount:h.length/9}},this.deleteGraphics=h=>{this.gl.deleteBuffer(h.buffer),this.gl.deleteVertexArray(h.vao)},this.deleteChunkGraphics=h=>{this.deleteGraphics(h.solid),this.deleteGraphics(h.transparent)},this.shouldBeLoaded=h=>{const i=X(h,this.worldChunkCenterLoc);return i[0]>=-K&&i[0]<=K&&i[1]>=-V&&i[1]<=V&&i[2]>=-Z&&i[2]<=Z},this.shouldBeUnloaded=h=>{const i=X(h,this.worldChunkCenterLoc);return!(i[0]>=-ht&&i[0]<=ht&&i[1]>=-rt&&i[1]<=rt&&i[2]>=-ot&&i[2]<=ot)},this.unloadChunk=h=>{const i=this.chunk_map.get(h);this.freeChunkNumbers.push(i.chunkNumber),i.graphics!==void 0&&this.deleteChunkGraphics(i.graphics),i.completeLighting!==void 0&&this.freeChunkLightingGPUData.push(i.completeLighting.data);for(const o of this.adjacentChunkLocs(JSON.parse(h))){const a=this.chunk_map.get(JSON.stringify(o));(a==null?void 0:a.completeLighting)!==void 0&&(a.completeLighting.stale=!0)}this.chunk_map.delete(h)},this.updateCameraLoc=()=>{for(const[o,a]of this.chunk_map)this.shouldBeUnloaded(JSON.parse(o))&&this.unloadChunk(o);for(let o=-K;o<=K;o++)for(let a=-V;a<=V;a++)for(let l=-Z;l<=Z;l++){const d=JSON.stringify(R(this.worldChunkCenterLoc,[o,a,l]));if(this.chunk_map.get(d)===void 0){const f=this.freeChunkNumbers.pop();O(f!==void 0,"Ran out of chunk numbers! Indicates bug in program"),this.chunk_map.set(d,{chunkNumber:f})}}const h=Array.from(this.chunk_map.keys(),o=>JSON.parse(o)).sort((o,a)=>{const l=nt(X(o,this.worldChunkCenterLoc)),d=nt(X(a,this.worldChunkCenterLoc));return l-d}),i=new Map;for(const o of h){const a=JSON.stringify(o);i.set(a,this.chunk_map.get(a))}this.chunk_map=i},this.addHighlight=(h,i)=>{const o=this.highlights.get(h);o!==void 0&&this.deleteGraphics(o);const a=this.createGraphics(it([{bi:6,cubeLoc:i.coords,face:i.face}]));this.highlights.set(h,a)},this.removeHighlight=h=>{const i=this.highlights.get(h);i!==void 0&&(this.deleteGraphics(i),this.highlights.delete(h))},this.createLightData=h=>{const i=R(h.cubeLoc,[.5,.5,.5]),o=_t(q(90),1,.5,30),a=h.face===k.UP||h.face===k.DOWN?[-1,0,0]:[0,-1,0],l=mt(i,R(i,Tt(h.face)),a),d=Q(o,l);return[i,d]},this.updateLightDataTex=(h,i)=>{O(i.length<=P,"too many lights per chunk!");const o=new Float32Array(i.length*20);for(let a=0;a<i.length;a++){let[l,d]=i[a],[g,f,p,E]=ct(d);o.set(l,a*20),o.set(g,a*20+4),o.set(f,a*20+8),o.set(p,a*20+12),o.set(E,a*20+16)}this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.lightDataTexArr),this.gl.texSubImage3D(this.gl.TEXTURE_2D_ARRAY,0,0,0,h*P,5,1,i.length,this.gl.RGBA,this.gl.FLOAT,o)},this.renderShadowMap=(h,i,o)=>{this.gl.useProgram(this.shadowProgram),this.gl.uniformMatrix4fv(this.shadowMvpMatLoc,!1,dt(i)),this.gl.viewport(0,0,J,J),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,h),this.gl.clear(this.gl.DEPTH_BUFFER_BIT);for(const a of o)this.gl.bindVertexArray(a.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,a.vertexCount)},this.adjacentChunkLocs=h=>[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]].map(o=>R(h,o)),this.neighboringChunkLocs=h=>{const i=[];for(let o=-1;o<=1;o++)for(let a=-1;a<=1;a++)for(let l=-1;l<=1;l++)(l!==0||a!==0||o!==0)&&i.push(R(h,[o,a,l]));return i},this.getChunkBlocksIfExists=h=>{var o;const i=(o=this.chunk_map.get(JSON.stringify(h)))==null?void 0:o.blocks;return i||this.emptyChunk},this.update=h=>{let i=0;t:for(const[a,l]of this.chunk_map){const d=JSON.parse(a);if(l.blocks===void 0){l.blocks=St(d,this.noiseFn);for(const f of this.adjacentChunkLocs(d)){const p=this.chunk_map.get(JSON.stringify(f));p&&p.mesh&&(p.mesh.stale=!0)}i+=vt}if(i>1)break t;const g=[d[0]*C,d[1]*b,d[2]*w];if(l.mesh===void 0||l.mesh.stale){for(const u of this.adjacentChunkLocs(d))if(this.shouldBeLoaded(u)){const _=this.chunk_map.get(JSON.stringify(u));if(_===void 0||_.blocks===void 0)continue t}const{solid:f,transparent:p,lights:E}=Nt(g,this.blockManager,l.blocks,this.getChunkBlocksIfExists(R(d,[-1,0,0])),this.getChunkBlocksIfExists(R(d,[1,0,0])),this.getChunkBlocksIfExists(R(d,[0,-1,0])),this.getChunkBlocksIfExists(R(d,[0,1,0])),this.getChunkBlocksIfExists(R(d,[0,0,-1])),this.getChunkBlocksIfExists(R(d,[0,0,1])));l.mesh={solid:f,transparent:p,lights:E,stale:!1},l.graphics!==void 0&&(l.graphics.stale=!0),i+=At}if(i>1)break t;if(l.graphics===void 0||l.graphics.stale){l.graphics!==void 0&&this.deleteChunkGraphics(l.graphics),l.graphics={solid:this.createGraphics(it(l.mesh.solid)),transparent:this.createGraphics(it(l.mesh.transparent)),stale:!1},l.ownLights!==void 0&&(l.ownLights.stale=!0);for(const f of this.neighboringChunkLocs(d)){const p=this.chunk_map.get(JSON.stringify(f));p&&p.ownLights&&(p.ownLights.stale=!0)}i+=wt}if(i>1)break t;if(l.ownLights===void 0||l.ownLights.stale){const f=l.mesh.lights.slice(0,P).map(this.createLightData),p=l.ownLights===void 0||l.ownLights.lightData.length!==f.length;l.ownLights={stale:!0,lightData:f};const E=[l.graphics.solid];for(const u of this.neighboringChunkLocs(d)){const _=this.chunk_map.get(JSON.stringify(u));_&&_.graphics&&E.push(_.graphics.solid)}for(let u=0;u<f.length;u++)this.renderShadowMap(this.shadowFbs[l.chunkNumber*P+u],f[u][1],E);if(this.updateLightDataTex(l.chunkNumber,f),p){l.completeLighting!==void 0&&(l.completeLighting.stale=!0);for(const u of this.neighboringChunkLocs(d)){const _=this.chunk_map.get(JSON.stringify(u));_&&_.completeLighting&&(_.completeLighting.stale=!0)}}l.ownLights.stale=!1,i+=yt}if(i>1)break t;if(l.completeLighting===void 0||l.completeLighting.stale){if(l.completeLighting===void 0){const E=this.freeChunkLightingGPUData.pop();O(E!==void 0,"Ran out of GPU Data! Indicates bug in program"),l.completeLighting={stale:!0,data:E}}const f=new Int32Array(27*3);let p=0;for(const E of[d,...this.neighboringChunkLocs(d)]){const u=this.chunk_map.get(JSON.stringify(E));if((u==null?void 0:u.ownLights)!==void 0){const _=u.chunkNumber*P;f[p+0]=_,f[p+1]=_+u.ownLights.lightData.length,f[p+2]=1,p+=3}}this.gl.bindTexture(this.gl.TEXTURE_2D,l.completeLighting.data.lightIndexesTex),this.gl.texSubImage2D(this.gl.TEXTURE_2D,0,0,0,27,1,this.gl.RGB_INTEGER,this.gl.INT,f),l.completeLighting.stale=!1,i+=bt}if(i>1)break t}const o=this.getWorldChunkLoc(h);(o[0]!==this.worldChunkCenterLoc[0]||o[1]!==this.worldChunkCenterLoc[1]||o[2]!==this.worldChunkCenterLoc[2])&&(this.worldChunkCenterLoc=o,this.updateCameraLoc())},this.render=h=>{this.gl.useProgram(this.renderProgram),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.uniformMatrix4fv(this.renderMvpMatLoc,!1,dt(h)),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.textureAtlas),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.shadowTexArr),this.gl.activeTexture(this.gl.TEXTURE2),this.gl.bindTexture(this.gl.TEXTURE_2D_ARRAY,this.lightDataTexArr);for(const i of this.chunk_map.values())i.graphics!==void 0&&i.completeLighting!==void 0&&(this.gl.bindVertexArray(i.graphics.solid.vao),this.gl.activeTexture(this.gl.TEXTURE3),this.gl.bindTexture(this.gl.TEXTURE_2D,i.completeLighting.data.lightIndexesTex),this.gl.drawArrays(this.gl.TRIANGLES,0,i.graphics.solid.vertexCount));this.gl.depthMask(!1);for(const i of this.chunk_map.values())i.graphics!==void 0&&(this.gl.bindVertexArray(i.graphics.transparent.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,i.graphics.transparent.vertexCount));this.gl.depthMask(!0),this.gl.disable(this.gl.DEPTH_TEST);for(const i of this.highlights.values())this.gl.bindVertexArray(i.vao),this.gl.drawArrays(this.gl.TRIANGLES,0,i.vertexCount)},this.getBlock=h=>{const i=this.chunk_map.get(JSON.stringify(this.getWorldChunkLoc(h)));return i&&i.blocks?i.blocks[A(I(h[0],C),I(h[1],b),I(h[2],w))]:null},this.setBlock=(h,i)=>{const o=d=>{const g=this.chunk_map.get(JSON.stringify(d));g&&g.mesh&&(g.mesh.stale=!0)},a=this.getWorldChunkLoc(h),l=this.chunk_map.get(JSON.stringify(a));if(l&&l.blocks){const d=Math.floor(I(h[0],C)),g=Math.floor(I(h[1],b)),f=Math.floor(I(h[2],w));return l.blocks[A(d,g,f)]=i,o(a),d===0&&o(R(a,[-1,0,0])),d===C-1&&o(R(a,[1,0,0])),g===0&&o(R(a,[0,-1,0])),g===b-1&&o(R(a,[0,1,0])),f===0&&o(R(a,[0,0,-1])),f===w-1&&o(R(a,[0,0,1])),!0}else return!1},this.intbound=(h,i)=>{const o=Math.round(h)==h;if(i<0&&o)return 0;let a;return h==0?a=1:a=Math.ceil(h),(i>0?a-h:h-Math.floor(h))/Math.abs(i)},this.castRay=(h,i,o)=>{let a=Math.floor(h[0]),l=Math.floor(h[1]),d=Math.floor(h[2]);const[g,f,p]=i,E=Math.sign(g),u=Math.sign(f),_=Math.sign(p);let T=this.intbound(h[0],g),m=this.intbound(h[1],f),x=this.intbound(h[2],p);const L=E/g,M=u/f,lt=_/p;O(j(i,i)!==0,"direction vector is 0");const B=o/Math.sqrt(g*g+f*f+p*p);let G=k.UP;for(;;){const ut=this.getBlock([a,l,d]);if(ut===null)break;if(this.blockManager.defs[ut].pointable)return{coords:[a,l,d],face:G};if(T<m)if(T<x){if(T>B)break;a+=E,T+=L,G=E==1?k.LEFT:k.RIGHT}else{if(x>B)break;d+=_,x+=lt,G=_==1?k.BACK:k.FRONT}else if(m<x){if(m>B)break;l+=u,m+=M,G=u==1?k.UP:k.DOWN}else{if(x>B)break;d+=_,x+=lt,G=_==1?k.BACK:k.FRONT}}return null},this.gl=s,this.blockManager=r,this.seed=e,this.noiseFn=Rt.makeNoise3D(e),this.worldChunkCenterLoc=this.getWorldChunkLoc(t),this.chunk_map=new Map,this.highlights=new Map,this.freeChunkNumbers=[];for(let h=0;h<at;h++)this.freeChunkNumbers.push(h);this.textureAtlas=this.blockManager.buildTextureAtlas(this.gl),this.renderProgram=pt(this.gl,[z(this.gl,this.gl.VERTEX_SHADER,Dt),z(this.gl,this.gl.FRAGMENT_SHADER,Ct)],new Map([[this.POSITION_LOC,"a_position"],[this.NORMAL_LOC,"a_normal"],[this.TUV_LOC,"a_tuv"]])),this.gl.useProgram(this.renderProgram),this.renderMvpMatLoc=this.gl.getUniformLocation(this.renderProgram,"u_mvpMat"),this.renderTextureAtlasLoc=this.gl.getUniformLocation(this.renderProgram,"u_textureAtlas"),this.renderLightDepthArrLoc=this.gl.getUniformLocation(this.renderProgram,"u_lightDepthArr"),this.renderLightDataArrLoc=this.gl.getUniformLocation(this.renderProgram,"u_lightDataArr"),this.renderLightIndexesLoc=this.gl.getUniformLocation(this.renderProgram,"u_lightIndexes"),this.gl.uniform1i(this.renderTextureAtlasLoc,0),this.gl.uniform1i(this.renderLightDepthArrLoc,1),this.gl.uniform1i(this.renderLightDataArrLoc,2),this.gl.uniform1i(this.renderLightIndexesLoc,3),this.shadowProgram=pt(this.gl,[z(this.gl,this.gl.VERTEX_SHADER,Lt),z(this.gl,this.gl.FRAGMENT_SHADER,Mt)],new Map([[this.POSITION_LOC,"a_position"]])),this.gl.useProgram(this.shadowProgram),this.shadowMvpMatLoc=this.gl.getUniformLocation(this.shadowProgram,"u_mvpMat");{this.freeChunkLightingGPUData=[];for(let h=0;h<at;h++){const i=s.createTexture();s.bindTexture(s.TEXTURE_2D,i),s.pixelStorei(s.UNPACK_ALIGNMENT,1),s.texImage2D(s.TEXTURE_2D,0,s.RGB32I,27,1,0,s.RGB_INTEGER,s.INT,null),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,s.NEAREST),this.freeChunkLightingGPUData.push({lightIndexesTex:i})}this.lightDataTexArr=s.createTexture(),s.bindTexture(s.TEXTURE_2D_ARRAY,this.lightDataTexArr),s.texImage3D(s.TEXTURE_2D_ARRAY,0,s.RGBA32F,5,1,st,0,s.RGBA,s.FLOAT,null),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),this.shadowTexArr=s.createTexture(),s.bindTexture(s.TEXTURE_2D_ARRAY,this.shadowTexArr),s.texImage3D(s.TEXTURE_2D_ARRAY,0,s.DEPTH_COMPONENT16,J,J,st,0,s.DEPTH_COMPONENT,s.UNSIGNED_SHORT,null),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D_ARRAY,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),this.shadowFbs=[];for(let h=0;h<st;h++){const i=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,i),s.framebufferTextureLayer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,this.shadowTexArr,0,h),this.shadowFbs.push(i)}}this.updateCameraLoc()}}function A(n,e,t){return Math.floor(n)*b*w+Math.floor(e)*w+Math.floor(t)}function St(n,e){const t=[n[0]*C,n[1]*b,n[2]*w],s=new Uint16Array(C*b*w),r=20;for(let c=0;c<C;c++)for(let h=0;h<b;h++)for(let i=0;i<w;i++){const o=A(c,h,i),a=c+t[0],l=h+t[1],d=i+t[2],g=e(a/r,l/r,d/r),f=e(a/r,(l-1)/r,d/r);g>.5?f>.5?s[o]=3:s[o]=1:s[o]=0}return s[0]=5,s}function D(n,e){return!(n.textures===void 0||!n.transparent&&!e.transparent||n==e)}function Nt(n,e,t,s,r,c,h,i,o){const a=[],l=[],d=[];for(let g=0;g<C;g++)for(let f=0;f<b;f++)for(let p=0;p<w;p++){const E=t[A(g,f,p)],u=[n[0]+g,n[1]+f,n[2]+p],_=e.defs[E];if(_.textures===void 0)continue;const T=_.transparent?d:l;if(g===0?D(_,e.defs[s[A(C-1,f,p)]]):D(_,e.defs[t[A(g-1,f,p)]])){const m={bi:E,cubeLoc:u,face:k.LEFT};T.push(m),_.light&&a.push(m)}if(g===C-1?D(_,e.defs[r[A(0,f,p)]]):D(_,e.defs[t[A(g+1,f,p)]])){const m={bi:E,cubeLoc:u,face:k.RIGHT};T.push(m),_.light&&a.push(m)}if(f===0?D(_,e.defs[c[A(g,b-1,p)]]):D(_,e.defs[t[A(g,f-1,p)]])){const m={bi:E,cubeLoc:u,face:k.UP};T.push(m),_.light&&a.push(m)}if(f===b-1?D(_,e.defs[h[A(g,0,p)]]):D(_,e.defs[t[A(g,f+1,p)]])){const m={bi:E,cubeLoc:u,face:k.DOWN};T.push(m),_.light&&a.push(m)}if(p===0?D(_,e.defs[i[A(g,f,w-1)]]):D(_,e.defs[t[A(g,f,p-1)]])){const m={bi:E,cubeLoc:u,face:k.BACK};T.push(m),_.light&&a.push(m)}if(p===w-1?D(_,e.defs[o[A(g,f,0)]]):D(_,e.defs[t[A(g,f,p+1)]])){const m={bi:E,cubeLoc:u,face:k.FRONT};T.push(m),_.light&&a.push(m)}}return{solid:l,transparent:d,lights:a}}function it(n){const e=new Float32Array(n.length*6*9);let t=0;for(const{bi:s,face:r,cubeLoc:[c,h,i]}of n){const o=[c+0,h+0,i+0],a=[c+1,h+0,i+0],l=[c+0,h+0,i+1],d=[c+1,h+0,i+1],g=[c+0,h+1,i+0],f=[c+1,h+1,i+0],p=[c+0,h+1,i+1],E=[c+1,h+1,i+1],u=s*6+r,_=[-1,0,0],T=[1,0,0],m=[0,-1,0],x=[0,1,0],L=[0,0,-1],M=[0,0,1];switch(r){case k.LEFT:{e.set(o,t),t+=3,e.set(_,t),t+=3,e.set([1,0,u],t),t+=3,e.set(l,t),t+=3,e.set(_,t),t+=3,e.set([0,0,u],t),t+=3,e.set(g,t),t+=3,e.set(_,t),t+=3,e.set([1,1,u],t),t+=3,e.set(l,t),t+=3,e.set(_,t),t+=3,e.set([0,0,u],t),t+=3,e.set(p,t),t+=3,e.set(_,t),t+=3,e.set([0,1,u],t),t+=3,e.set(g,t),t+=3,e.set(_,t),t+=3,e.set([1,1,u],t),t+=3;break}case k.RIGHT:{e.set(a,t),t+=3,e.set(T,t),t+=3,e.set([0,0,u],t),t+=3,e.set(f,t),t+=3,e.set(T,t),t+=3,e.set([0,1,u],t),t+=3,e.set(d,t),t+=3,e.set(T,t),t+=3,e.set([1,0,u],t),t+=3,e.set(d,t),t+=3,e.set(T,t),t+=3,e.set([1,0,u],t),t+=3,e.set(f,t),t+=3,e.set(T,t),t+=3,e.set([0,1,u],t),t+=3,e.set(E,t),t+=3,e.set(T,t),t+=3,e.set([1,1,u],t),t+=3;break}case k.UP:{e.set(l,t),t+=3,e.set(m,t),t+=3,e.set([1,1,u],t),t+=3,e.set(o,t),t+=3,e.set(m,t),t+=3,e.set([1,0,u],t),t+=3,e.set(a,t),t+=3,e.set(m,t),t+=3,e.set([0,0,u],t),t+=3,e.set(l,t),t+=3,e.set(m,t),t+=3,e.set([1,1,u],t),t+=3,e.set(a,t),t+=3,e.set(m,t),t+=3,e.set([0,0,u],t),t+=3,e.set(d,t),t+=3,e.set(m,t),t+=3,e.set([0,1,u],t),t+=3;break}case k.DOWN:{e.set(g,t),t+=3,e.set(x,t),t+=3,e.set([0,0,u],t),t+=3,e.set(p,t),t+=3,e.set(x,t),t+=3,e.set([0,1,u],t),t+=3,e.set(f,t),t+=3,e.set(x,t),t+=3,e.set([1,0,u],t),t+=3,e.set(f,t),t+=3,e.set(x,t),t+=3,e.set([1,0,u],t),t+=3,e.set(p,t),t+=3,e.set(x,t),t+=3,e.set([0,1,u],t),t+=3,e.set(E,t),t+=3,e.set(x,t),t+=3,e.set([1,1,u],t),t+=3;break}case k.BACK:{e.set(o,t),t+=3,e.set(L,t),t+=3,e.set([0,0,u],t),t+=3,e.set(g,t),t+=3,e.set(L,t),t+=3,e.set([0,1,u],t),t+=3,e.set(a,t),t+=3,e.set(L,t),t+=3,e.set([1,0,u],t),t+=3,e.set(a,t),t+=3,e.set(L,t),t+=3,e.set([1,0,u],t),t+=3,e.set(g,t),t+=3,e.set(L,t),t+=3,e.set([0,1,u],t),t+=3,e.set(f,t),t+=3,e.set(L,t),t+=3,e.set([1,1,u],t),t+=3;break}case k.FRONT:{e.set(p,t),t+=3,e.set(M,t),t+=3,e.set([1,1,u],t),t+=3,e.set(l,t),t+=3,e.set(M,t),t+=3,e.set([1,0,u],t),t+=3,e.set(d,t),t+=3,e.set(M,t),t+=3,e.set([0,0,u],t),t+=3,e.set(p,t),t+=3,e.set(M,t),t+=3,e.set([1,1,u],t),t+=3,e.set(d,t),t+=3,e.set(M,t),t+=3,e.set([0,0,u],t),t+=3,e.set(E,t),t+=3,e.set(M,t),t+=3,e.set([0,1,u],t),t+=3;break}}}return e}class Ut{constructor(e,t,s,r){const c=et(s,0),h=et(r,0),i=et($(s,r),0),o=ft(s,t),a=Y(H(o,h)),l=ft(a,e),d=Q(l,o);this.right=Y(H(d,h)),this.up=Y(H(d,c)),this.front=Y(H(d,i))}}class Pt{constructor(e,t,s){this.getPos=()=>F(this.pos),this.setPos=r=>this.pos=F(r),this.getDir=()=>F(this.dir),this.setDir=r=>this.dir=F(r),this.getMvp=r=>{const c=q(90),h=this.canvas.width/this.canvas.height,i=_t(c,h,.1,100),o=mt(this.pos,R(this.pos,this.dir),r);return Q(i,o)},this.pos=e,this.dir=t,this.canvas=s}}class tt{}function Ot(n){function e(s){return s.toString(16).padStart(2,"0")}const t=new Uint8Array(n/2);return window.crypto.getRandomValues(t),Array.from(t,e).join("")}class Gt{constructor(e,t,s,r,c){this.update=()=>{for(const h of this.components)h.applySystem(this)},this.components=e,this.worldup=t,this.worldright=s,this.pos=r===void 0?[0,0,0]:r,this.dir=c===void 0?[1,0,0]:c}}class Xt extends tt{constructor(e,t,s){super(),this.pitch=0,this.yaw=0,this.controlsEnabled=!1,this.fast=!1,this.fly=!0,this.keys=new Set,this.leftMouseDown=!1,this.rightMouseDown=!1,this.applySystem=r=>{const c=new Ut(this.pitch,this.yaw,r.worldup,r.worldright);if(r.dir=y(c.front,-1),this.controlsEnabled){const h=W($(c.right,r.worldup));let i=this.fast?.1:.04;this.fly?(this.keys.has("KeyW")&&this.physics.go(y(h,i)),this.keys.has("KeyS")&&this.physics.go(y(h,-i)),this.keys.has("KeyA")&&this.physics.go(y(c.right,i)),this.keys.has("KeyD")&&this.physics.go(y(c.right,-i)),this.keys.has("ShiftLeft")&&this.physics.go(y(r.worldup,-i)),this.keys.has("Space")&&this.physics.go(y(r.worldup,i))):(this.keys.has("KeyW")&&this.physics.go(y(h,i)),this.keys.has("KeyS")&&this.physics.go(y(h,-i)),this.keys.has("KeyA")&&this.physics.go(y(c.right,i)),this.keys.has("KeyD")&&this.physics.go(y(c.right,-i)),this.keys.has("Space")&&this.physics.jump()),this.keys.has("Digit1")&&(this.blockInteraction.placeID=1),this.keys.has("Digit2")&&(this.blockInteraction.placeID=2),this.keys.has("Digit3")&&(this.blockInteraction.placeID=3),this.keys.has("Digit4")&&(this.blockInteraction.placeID=4),this.keys.has("Digit5")&&(this.blockInteraction.placeID=5),this.leftMouseDown?this.blockInteraction.breakSelectedBlock():this.rightMouseDown&&this.blockInteraction.placeSelectedBlock()}},this.physics=t,this.blockInteraction=s,this.grabControlElement=e,window.addEventListener("keypress",r=>{r.key==="f"&&(this.fast=!this.fast),r.key==="m"&&(this.fly?(this.fly=!1,this.physics.enablePhysics()):(this.fly=!0,this.physics.disablePhysics()))}),window.addEventListener("keydown",r=>this.keys.add(r.code)),window.addEventListener("keyup",r=>this.keys.delete(r.code)),this.grabControlElement.addEventListener("click",r=>{this.grabControlElement.requestPointerLock()}),document.addEventListener("pointerlockchange",r=>{this.controlsEnabled=document.pointerLockElement===this.grabControlElement}),window.addEventListener("mousemove",r=>{if(!this.controlsEnabled)return;const c=.0015;this.yaw-=r.movementX*c,this.pitch+=r.movementY*c,this.pitch=Et(this.pitch,q(-89.9),q(89.9))}),window.addEventListener("mousedown",r=>{r.button===0?this.leftMouseDown=!0:r.button===2&&(this.rightMouseDown=!0)}),window.addEventListener("mouseup",r=>{r.button===0?this.leftMouseDown=!1:r.button===2&&(this.rightMouseDown=!1)})}}class Bt extends tt{constructor(e){super(),this.applySystem=t=>{this.camera.setDir(t.dir),this.camera.setPos(t.pos)},this.camera=e}}function S(n,e){return n.minX<=e.maxX&&n.maxX>=e.minX&&n.minY<=e.maxY&&n.maxY>=e.minY&&n.minZ<=e.maxZ&&n.maxZ>=e.minZ}class Ft extends tt{constructor(e){super(),this.upVel=0,this.wantGo=[0,0,0],this.wantJump=!1,this.x_rad=.3,this.z_rad=.3,this.p_y_rad=1.5,this.n_y_rad=.3,this.side_depth=.1,this.head_depth=.1,this.foot_depth=.6,this.physicsEnabled=!1,this.enablePhysics=()=>this.physicsEnabled=!0,this.disablePhysics=()=>{this.physicsEnabled=!1,this.upVel=0},this.getPhysicsEnabled=()=>this.physicsEnabled,this.go=t=>{this.wantGo=R(this.wantGo,t)},this.jump=()=>{this.wantJump=!0},this.calculatePlayerIntersection=t=>{let s={minX:t[0]-this.x_rad,maxX:t[0]-this.x_rad+this.side_depth,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},r={minX:t[0]+this.x_rad-this.side_depth,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},c={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]-this.z_rad,maxZ:t[2]-this.z_rad+this.side_depth},h={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad+this.head_depth,maxY:t[1]+this.p_y_rad-this.foot_depth,minZ:t[2]+this.z_rad-this.side_depth,maxZ:t[2]+this.z_rad},i={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]-this.n_y_rad,maxY:t[1]-this.n_y_rad+this.head_depth,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},o={minX:t[0]-this.x_rad,maxX:t[0]+this.x_rad,minY:t[1]+this.p_y_rad-this.foot_depth,maxY:t[1]+this.p_y_rad,minZ:t[2]-this.z_rad,maxZ:t[2]+this.z_rad},a=!1,l=!1,d=!1,g=!1,f=!1,p=!1;for(let E=-2;E<=2;E++)for(let u=-2;u<=2;u++)for(let _=-2;_<=2;_++){const T=R(t,[E,u,_]).map(x=>Math.floor(x)),m=this.world.getBlock(T);if(m!=null&&this.world.blockManager.defs[m].pointable){let x={minX:T[0],maxX:T[0]+1,minY:T[1],maxY:T[1]+1,minZ:T[2],maxZ:T[2]+1};!a&&S(s,x)&&(a=!0),!l&&S(r,x)&&(l=!0),!d&&S(i,x)&&(d=!0),!g&&S(o,x)&&(g=!0),!f&&S(c,x)&&(f=!0),!p&&S(h,x)&&(p=!0)}}return{left:a,right:l,up:d,down:g,back:f,front:p}},this.applySystem=t=>{if(!this.physicsEnabled){t.pos=R(t.pos,this.wantGo),this.wantGo=[0,0,0];return}this.upVel-=.001,this.upVel=Et(this.upVel,-.1,.1),this.wantGo=R(this.wantGo,y(t.worldup,this.upVel));let s=R(t.pos,this.wantGo);const r=this.calculatePlayerIntersection(s);this.wantJump&&r.down&&(this.upVel=.05),this.wantJump=!1,r.left&&(this.wantGo[0]=Math.max(this.wantGo[0],0)),r.right&&(this.wantGo[0]=Math.min(this.wantGo[0],0)),r.up&&(this.wantGo[1]=Math.max(this.wantGo[1],0),this.upVel=Math.min(this.upVel,0)),r.down&&(this.wantGo[1]=Math.min(this.wantGo[1],0),this.upVel=Math.max(this.upVel,0)),r.back&&(this.wantGo[2]=Math.max(this.wantGo[2],0)),r.front&&(this.wantGo[2]=Math.min(this.wantGo[2],0)),t.pos=R(t.pos,this.wantGo),this.wantGo=[0,0,0]},this.world=e}}class Yt extends tt{constructor(e,t){super(),this.placeID=2,this.ray=null,this.breakRequests=new Map,this.placeRequests=new Map,this.breakSelectedBlock=()=>{if(this.ray){const s=JSON.stringify(this.ray.coords),r=this.breakRequests.get(s);this.breakRequests.set(s,r===void 0?0:r+1)}},this.placeSelectedBlock=()=>{if(this.ray){const s=JSON.stringify(R(this.ray.coords,Tt(this.ray.face))),r=this.placeRequests.get(s);this.placeRequests.set(s,r===void 0?0:r+1)}},this.applySystem=s=>{for(const[r,c]of this.breakRequests)c>30&&(this.world.setBlock(JSON.parse(r),0),this.breakRequests.delete(r));for(const[r,c]of this.placeRequests)c>20&&(this.world.setBlock(JSON.parse(r),this.placeID),this.placeRequests.delete(r));this.ray=this.world.castRay(this.camera.getPos(),this.camera.getDir(),100),this.ray?this.world.addHighlight(this.uniqueId,this.ray):this.world.removeHighlight(this.uniqueId)},this.uniqueId=Ot(32),this.camera=e,this.world=t}}const gt=[0,-1,0],Ht=[-1,0,0];class zt{constructor(e,t){this.resizeCanvas=()=>{this.canvas.width=window.innerWidth/2,this.canvas.height=window.innerHeight/2},this.start=()=>this.animationLoop(),this.animationLoop=()=>{for(const h of this.entityList)h.update();this.world.update(this.camera.getPos()),this.world.render(this.camera.getMvp(gt)),this.requestID=window.requestAnimationFrame(this.animationLoop)},this.canvas=e,this.blockManager=t,this.camera=new Pt([0,0,0],[0,0,1],this.canvas),this.gl=e.getContext("webgl2"),this.world=new It(42,this.camera.getPos(),this.gl,t,this.camera);const s=new Ft(this.world),r=new Yt(this.camera,this.world),c=new Gt([new Xt(this.canvas,s,r),new Bt(this.camera),s,r],gt,Ht);this.entityList=[c],this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas)}}async function N(n){return new Promise((e,t)=>{const s=document.getElementById(n);s.onerror=t,s.onload=()=>e(s),s.complete&&e(s)})}async function U(n){return await Promise.all([N(`${n}-left`),N(`${n}-right`),N(`${n}-up`),N(`${n}-down`),N(`${n}-front`),N(`${n}-back`)])}async function Kt(){const n=new xt(16,[{name:"air",pointable:!1,light:!1,transparent:!0},{name:"grass",pointable:!0,light:!1,transparent:!1,textures:await U("grass")},{name:"soil",pointable:!0,light:!1,transparent:!1,textures:await U("soil")},{name:"stone",pointable:!0,light:!1,transparent:!1,textures:await U("stone")},{name:"glass",pointable:!0,light:!1,transparent:!0,textures:await U("glass")},{name:"lamp",pointable:!0,light:!0,transparent:!1,textures:await U("lamp")},{name:"selector",pointable:!0,light:!1,transparent:!1,textures:await U("selector")}]),e=document.getElementById("canvas");new zt(e,n).start()}Kt();
