import{S as r}from"./style.23d33e06.js";import{R as c,j as e,a as o,b as a,F as d,S as n,q as s,A as i}from"./vendor.8c8c5e31.js";import{H as l}from"./HrefLink.58e1be21.js";import{A as m}from"./ArticleLayout.576cc918.js";import{f as h}from"./load.41e68f77.js";var p="/assets/compugenesis_screenshot.36dc0787.png",u="/assets/compugenesis_flowchart.7a753ee6.png",g="/assets/vulkan-triangle-v2_screenshot.ee931030.png",b="/assets/c-opencl-raymarcher_sierpinski.42422da4.png",y="/assets/c-opencl-raymarcher_warp.50e60ead.gif",k="/assets/lasagna.8f181be3.png",f="/assets/lasagna_fizzbuzz.c35bb93d.txt";const x=()=>e(m,{children:({Citation:L,CitationBank:N})=>a(d,{children:[a(r,{name:"Compugenesis",id:"compugenesis",children:[e("p",{children:"Compugenesis is a Rust simulation that uses L-Systems to model plants efficiently and accurately."}),e("figure",{className:"text-center my-3",children:e("img",{src:p,className:"border border-dark mx-auto d-block",alt:"Demo of the Compugenesis system"})}),e("h4",{children:"Goals:"}),a("ul",{children:[e("li",{children:"Create a flexible plant simulation and paired microclimate implementation that uses the parallelization capabilities of a GPU."}),e("li",{children:"Use the L-System implementation to simulate plant topology within a 95% confidence interval (CI) for actual plant dimensions."}),e("li",{children:"Simulate plant topology in response to temperature, soil moisture, and sunlight."})]}),e("figure",{className:"text-center my-3",children:e("img",{src:u,className:"border border-dark mx-auto d-block bg-dark",alt:"Flowchart of Compugenesis"})}),a("p",{className:"mt-4",children:["Link: ",e(l,{href:"https://github.com/pimpale/compugenesis"})]})]}),a(r,{name:"Vulkan Voxel Renderer",id:"vulkan-voxel-renderer",children:[e("p",{children:"This project is a simple voxel renderer made using Vulkan and C. It's a small demo example and not a full game, but it successfully demonstrates the basic principles of building texture atlases, chunk generation, and dynamic chunk loading without a game engine"}),e("p",{children:"This project's code and assets are 100% public domain, and you can do whatever you like with them."}),e("figure",{className:"text-center my-3",children:e("img",{src:g,className:"border border-dark mx-auto d-block w-75",alt:"Demo of the game"})}),e("h4",{children:"Features"}),a("ul",{children:[e("li",{children:"Internal face culling"}),e("li",{children:"Cubical chunks"}),e("li",{children:"Chunks are dynamically loaded and unloaded"}),e("li",{children:"Infinite terrain generation"}),e("li",{children:"Textured blocks (using texture atlas)"}),e("li",{children:"Proper camera movement"})]}),e("h4",{children:"Goals"}),e("p",{children:"We will add these later at some point, but they're not present right now:"}),a("ul",{children:[e("li",{children:"Destroying blocks"}),e("li",{children:"Adding blocks"}),e("li",{children:"Being able to walk around without flying"}),e("li",{children:"Entities"}),e("li",{children:"Block picker"}),e("li",{children:"Lighting"})]}),a("p",{className:"mt-4",children:["Link: ",e(l,{href:"https://github.com/pimpale/vulkan-triangle-v2"})]})]}),a(r,{name:"C OpenCL Raymarcher",id:"c-opencl-raymarcher",children:[e("p",{children:"A simple raymarcher written in C with OpenCL acceleration."}),e("p",{children:"Below are some screenshots:"}),a("figure",{className:"text-center my-3",children:[e("img",{src:b,className:"border border-dark mx-auto d-block w-50",alt:"3D Sierpinski triangle produced by raymarcher"}),e("figcaption",{children:"3D Sierpinski Triangle"})]}),a("figure",{className:"text-center my-3",children:[e("img",{src:y,className:"border border-dark mx-auto d-block w-50",alt:"Black hole rendered by raymarcher"}),e("figcaption",{children:"Black hole rendered by raymarcher"})]}),a("p",{className:"mt-4",children:["Link: ",e(l,{href:"https://github.com/pimpale/c-opencl-raymarcher"})]})]}),a(r,{name:"Lasagna",id:"lasagna",children:[e("figure",{className:"text-center my-3",children:e("img",{src:k,className:"border border-dark mx-auto d-block w-25",alt:"Lasagna Logo"})}),e("p",{children:"Very small stack based language. Influenced by Lisp and Forth."}),e("h4",{className:"mb-3",children:"Hello World"}),e(n,{className:"mx-5",showLineNumbers:!0,style:s,children:"(hello world) print"}),e("h4",{className:"mb-3",children:"Fizzbuzz"}),a(i,{promise:h(f),children:[e(i.Pending,{children:e("div",{className:"spinner-border",role:"status"})}),e(i.Fulfilled,{children:t=>e(n,{className:"mx-5",showLineNumbers:!0,style:s,children:t})}),e(i.Rejected,{children:e("div",{className:"spinner-border",role:"status"})})]}),a("p",{className:"mt-4",children:["Link: ",e(l,{href:"https://github.com/pimpale/lasagna"})]})]})]})});c.render(e(o.StrictMode,{children:e(x,{})}),document.getElementById("root"));
