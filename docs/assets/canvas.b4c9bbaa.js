class h{constructor(o){this.mousePos=null,this.mouseDownListeners=[],this.mouseMoveListeners=[],this.mouseUpListeners=[],this.addMouseDownListener=e=>this.mouseDownListeners.push(e),this.removeMouseDownListener=e=>this.mouseDownListeners=this.mouseDownListeners.filter(s=>s!==e),this.addMouseMoveListener=e=>this.mouseMoveListeners.push(e),this.removeMouseMoveListener=e=>this.mouseMoveListeners=this.mouseMoveListeners.filter(s=>s!==e),this.addMouseUpListener=e=>this.mouseUpListeners.push(e),this.reupMouseUpListener=e=>this.mouseUpListeners=this.mouseUpListeners.filter(s=>s!==e),this.handleMouseDown=e=>{const s=this.getMousePos(this.canvas,e);this.mousePos={current:s,previous:s};for(const t of this.mouseDownListeners)t(s)},this.handleMouseUp=e=>{this.mousePos=null;const s=this.getMousePos(this.canvas,e);for(const t of this.mouseUpListeners)t(s)},this.handleMouseMove=e=>{if(!this.mousePos)return;const s=this.getMousePos(this.canvas,e);this.mousePos={current:s,previous:this.mousePos.current};for(const t of this.mouseMoveListeners)t(s)},this.discardTouchEvent=e=>e.preventDefault(),this.cleanup=()=>{this.canvas.removeEventListener("pointerdown",this.handleMouseDown),this.canvas.removeEventListener("pointermove",this.handleMouseMove),window.removeEventListener("pointerup",this.handleMouseUp),this.canvas.removeEventListener("touchstart",this.discardTouchEvent),this.canvas.removeEventListener("touchmove",this.discardTouchEvent),this.canvas.removeEventListener("touchend",this.discardTouchEvent),this.canvas.removeEventListener("touchcancel",this.discardTouchEvent)},this.canvas=o,this.canvas.addEventListener("pointerdown",this.handleMouseDown),this.canvas.addEventListener("pointermove",this.handleMouseMove),window.addEventListener("pointerup",this.handleMouseUp),this.canvas.addEventListener("touchstart",this.discardTouchEvent),this.canvas.addEventListener("touchmove",this.discardTouchEvent),this.canvas.addEventListener("touchend",this.discardTouchEvent),this.canvas.addEventListener("touchcancel",this.discardTouchEvent)}getMousePos(o,e){const s=o.getBoundingClientRect(),t=o.width/s.width,i=o.height/s.height;return{x:(e.clientX-s.left)*t,y:(e.clientY-s.top)*i}}}export{h as C};
