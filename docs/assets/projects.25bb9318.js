import{S as r}from"./style.43320a39.js";import{R as n,j as e,a as l,b as a,F as t}from"./vendor.1c6ffa94.js";import{H as i}from"./HrefLink.c5a7898d.js";import{A as s}from"./ArticleLayout.a656bd7d.js";var c="/assets/compugenesis_screenshot.36dc0787.png",o="/assets/compugenesis_flowchart.7a753ee6.png",d="/assets/vulkan-triangle-v2_screenshot.ee931030.png",m="/assets/c-opencl-raymarcher_sierpinski.42422da4.png",h="/assets/c-opencl-raymarcher_warp.50e60ead.gif";const u=()=>e(s,{children:({Citation:p,CitationBank:g})=>a(t,{children:[a(r,{name:"Compugenesis",id:"compugenesis",children:[e("p",{children:"Compugenesis is a Rust simulation that uses L-Systems to model plants efficiently and accurately."}),e("figure",{className:"text-center my-3",children:e("img",{src:c,className:"border border-dark mx-auto d-block",alt:"Demo of the Compugenesis system"})}),e("h4",{children:"Goals:"}),a("ul",{children:[e("li",{children:"Create a flexible plant simulation and paired microclimate implementation that uses the parallelization capabilities of a GPU."}),e("li",{children:"Use the L-System implementation to simulate plant topology within a 95% confidence interval (CI) for actual plant dimensions."}),e("li",{children:"Simulate plant topology in response to temperature, soil moisture, and sunlight."})]}),e("figure",{className:"text-center my-3",children:e("img",{src:o,className:"border border-dark mx-auto d-block bg-dark",alt:"Flowchart of Compugenesis"})}),a("p",{className:"mt-4",children:["Link: ",e(i,{href:"https://github.com/pimpale/compugenesis"})]})]}),a(r,{name:"Vulkan Voxel Renderer",id:"vulkan-voxel-renderer",children:[e("p",{children:"This project is a simple voxel renderer made using Vulkan and C. It's a small demo example and not a full game, but it successfully demonstrates the basic principles of building texture atlases, chunk generation, and dynamic chunk loading without a game engine"}),e("p",{children:"This project's code and assets are 100% public domain, and you can do whatever you like with them."}),e("figure",{className:"text-center my-3",children:e("img",{src:d,className:"border border-dark mx-auto d-block w-75",alt:"Demo of the game"})}),e("h4",{children:"Features"}),a("ul",{children:[e("li",{children:"Internal face culling"}),e("li",{children:"Cubical chunks"}),e("li",{children:"Chunks are dynamically loaded and unloaded"}),e("li",{children:"Infinite terrain generation"}),e("li",{children:"Textured blocks (using texture atlas)"}),e("li",{children:"Proper camera movement"})]}),e("h4",{children:"Goals"}),e("p",{children:"We will add these later at some point, but they're not present right now:"}),a("ul",{children:[e("li",{children:"Destroying blocks"}),e("li",{children:"Adding blocks"}),e("li",{children:"Being able to walk around without flying"}),e("li",{children:"Entities"}),e("li",{children:"Block picker"}),e("li",{children:"Lighting"})]}),a("p",{className:"mt-4",children:["Link: ",e(i,{href:"https://github.com/pimpale/vulkan-triangle-v2"})]})]}),a(r,{name:"C OpenCL Raymarcher",id:"c-opencl-raymarcher",children:[e("figure",{className:"text-center my-3",children:e("img",{src:m,className:"border border-dark mx-auto d-block",alt:"3D Sierpinski triangle produced by raymarcher"})}),e("figure",{className:"text-center my-3",children:e("img",{src:h,className:"border border-dark mx-auto d-block",alt:"Black hole rendered by raymarcher"})})]})]})});n.render(e(l.StrictMode,{children:e(u,{})}),document.getElementById("root"));
