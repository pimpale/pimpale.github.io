{"version":3,"sources":["components/TerrainGenIntro.tsx","ScalarMap.ts","VectorMap.ts","components/ImageDataDisplay.tsx","components/VectorMapDisplay.tsx","components/WireframeRenderer.tsx","components/Header.tsx","components/Layout.tsx","components/Section.tsx","assets/govind_pimpale_resume.pdf","pages/Home.tsx","pages/Achernar.tsx","math.ts","assets/Mug_and_Torus_morph.gif","assets/ColorWheel.png","components/SingularityDemo.tsx","pages/TerrainGeneration.tsx","pages/Resume.tsx","pages/Error.tsx","components/ScrollToTop.tsx","App.tsx","index.tsx"],"names":["TerrainGenIntroPhase","ScalarMap","xsize","ysize","arr","this","Float32Array","x","y","assert","v","width","height","VectorMap","vx","vy","ImageDataDisplay","props","displayCanvas","React","createRef","paint","bind","canvas","current","context","getContext","putImageData","data","className","style","ref","Component","VectorMapDisplay","tick","base","state","alphaData","particles","Array","intervalCode","setState","window","setInterval","clearInterval","dims","nparticles","map","p","dir","vmap","getv","Math","floor","age","filter","concat","_","random","ndata","setv","ctx","final","ImageData","bindex","maybeCanvas","maybeContext","paintHeightMap","makeTorusNoise2D","scale","seed","noise4","makeNoise4D","theta","phi","cos","PI","sin","createCurlNoise","sampleCurlNoise","noise","EPSILON","dx","ret","createElevationMap","createFractalNoise","noises","sum","weight","octaves","weightsum","o","reduce","a","b","rnoises","i","createMountainNoise","pow","abs","mnoise","clamp","max","min","dest","rval","mval","val","thresholdHeightMap","hmap","thresh","threshcol","imageData","value","r","g","TerrainGenIntro","nextPhaseClick","event","nextphase","preventDefault","HeightMapGen","OceanGen","airCurrents","Date","now","WindMapGen","initialElevation","rmap","histtemp","currtemp","type","onClick","WireframeRenderer","mount","requestID","controls","scene","camera","renderer","wireframeMesh","sceneSetup","clientWidth","clientHeight","THREE","position","z","TrackballControls","noPan","noZoom","alpha","setSize","appendChild","domElement","addCustomSceneObjects","geometries","geometry","color","material","wireframe","add","push","ambientLight","startAnimationLoop","forEach","w","rotateY","update","render","requestAnimationFrame","handleWindowResize","handleResize","addEventListener","removeEventListener","cancelAnimationFrame","dispose","Header","listenToScroll","scrolled","document","body","scrollTop","documentElement","scrollHeight","scroll","transitionDuration","to","id","Footer","Layout","children","Section","overflow","top","visibility","name","Rotated","circleEdge","xDisplacement","rotation","display","left","transformOrigin","transform","distance","IntroCard","title","introStyle","minHeight","minWidth","circleCenter","Home","href","Resume","offset","Achernar","mod","n","m","loadImage","imageUrl","fetch","response","blob","fileBlob","createImageBitmap","bitmap","createElement","drawImage","getImageData","extend","img","radius","newImg","srcx","srcbasei","destbasei","mirror","boxBlur","srcxsize","srcysize","newxsize","newysize","rSums","Uint32Array","gSums","bSums","aSums","srcBaseIdx","destIdx","srcIdx","pixels","srcy","aIdx","bIdx","cIdx","dIdx","rSum","gSum","bSum","aSum","destBaseIdx","cubeGeometry","cubeMaterials","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","SingularityDemo","range","mesh","handleCircularityChange","valueAsNumber","newPosition","attributes","count","getX","getY","getZ","dist","hypot","nx","ny","nz","newGeometry","clone","setAttribute","remove","geo","mat","step","defaultValue","AsideCard","TerrainGeneration","src","MugAndTorusMorphUrl","alt","promise","ColorWheelUrl","then","setData","Pending","role","Fulfilled","fixedData","mirrorData","periodicData","fixedBlur","mirrorBlur","periodicBlur","onChange","e","target","ResumePath","aspectRatio","Error","ScrollToTop","pathname","useLocation","useEffect","scrollTo","App","path","exact","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbdd4b03.chunk.js","sourcesContent":["import React from 'react';\nimport assert from 'assert';\n\nimport { makeNoise2D, makeNoise4D } from 'open-simplex-noise';\nimport ScalarMap from '../ScalarMap';\nimport VectorMap from '../VectorMap';\n\n\nimport ImageDataDisplay from '../components/ImageDataDisplay';\nimport VectorMapDisplay from '../components/VectorMapDisplay';\n\nfunction makeTorusNoise2D(scale: number, seed: number) {\n  const noise4 = makeNoise4D(seed);\n  return (theta: number, phi: number) => noise4(\n    Math.cos(theta * Math.PI * 2) / scale, Math.sin(theta * Math.PI * 2) / scale,\n    Math.cos(phi * Math.PI * 2) / scale, Math.sin(phi * Math.PI * 2) / scale\n  );\n}\n\nfunction createCurlNoise(xsize: number, ysize: number, seed: number) {\n  function sampleCurlNoise(noise: (x: number, y: number) => number, x: number, y: number) {\n    const EPSILON = 0.0001;\n    //Find rate of change in X direction\n    const dxs1 = noise(x + EPSILON, y);\n    const dxs2 = noise(x - EPSILON, y);\n    //Average to find approximate derivative\n    const dx = (dxs1 - dxs2) / (2 * EPSILON);\n    //Find rate of change in Y direction\n    const dys1 = noise(x, y + EPSILON);\n    const dys2 = noise(x, y - EPSILON);\n    //Average to find approximate derivative\n    const dy = (dys1 - dys2) / (2 * EPSILON);\n    //Curl\n    return [dy, -dx];\n  }\n\n  let ret = new VectorMap(xsize, ysize);\n\n  const noise = makeTorusNoise2D(3, seed);\n\n  // find rate of change in X direction by averaging together 2 samples\n  for (let x = 0; x < xsize; x++) {\n    for (let y = 0; y < ysize; y++) {\n      ret.setv(x, y, sampleCurlNoise(noise, x / xsize, y / ysize));\n    }\n  }\n  return ret;\n}\n\n\nfunction createElevationMap(xsize: number, ysize: number, seed: number) {\n  function createFractalNoise(\n    x: number,\n    y: number,\n    noises: {\n      noise: (x: number, y: number) => number,\n      weight: number\n    }[]\n  ) {\n    let sum = 0;\n    for (const { noise, weight } of noises) {\n      sum += noise(x, y) * weight;\n    }\n    return sum;\n  }\n\n  const octaves = [\n    { scale: 1.20, weight: 70 },\n    { scale: 0.64, weight: 19 },\n    { scale: 0.32, weight: 15 },\n    { scale: 0.16, weight: 13 },\n    { scale: 0.08, weight: 8 },\n    { scale: 0.04, weight: 5 },\n    { scale: 0.03, weight: 3 },\n  ];\n\n  const weightsum = octaves.map(o => o.weight).reduce((a, b) => a + b);\n\n  const rnoises = octaves.map(({ scale, weight }, i) => ({\n    noise: makeTorusNoise2D(scale, seed + i),\n    weight: weight / weightsum\n  }));\n\n\n  function createMountainNoise(\n    x: number,\n    y: number,\n    noise: (x: number, y: number) => number,\n  ) {\n    return Math.pow(1 - Math.abs(noise(x, y)), 3);\n  }\n\n  const mnoise = makeTorusNoise2D(3, seed - 1);\n\n  const clamp = (x: number) => Math.max(Math.min(x, 1), 0)\n\n  // where results will be written to, (0.0 -> 1.0)\n  let dest = new ScalarMap(xsize, ysize);\n\n  for (let x = 0; x < xsize; x++) {\n    for (let y = 0; y < ysize; y++) {\n      const rval = createFractalNoise(x / xsize, y / ysize, rnoises) + 0.5;\n\n      const mval = createMountainNoise(x / xsize, y / ysize, mnoise) + 0.5;\n\n      const val = Math.pow(mval * 0.3 + rval * 0.7, 4);\n      dest.setv(x, y, clamp(val));\n    }\n  }\n\n  return dest;\n}\n\ntype Color = {\n  r: number,\n  g: number,\n  b: number,\n  a: number\n}\n\n\nfunction thresholdHeightMap(hmap: ScalarMap, thresh: number, threshcol: Color) {\n  const { width, height } = hmap.dims();\n  const imageData = new ImageData(width, height);\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      const i = (x + y * width) * 4;\n      const value = hmap.getv(x, y);\n      if (value > thresh) {\n        imageData.data[i + 0] = value * 255;\n        imageData.data[i + 1] = value * 255;\n        imageData.data[i + 2] = value * 255;\n        imageData.data[i + 3] = 255;\n      } else {\n        imageData.data[i + 0] = threshcol.r;\n        imageData.data[i + 1] = threshcol.g;\n        imageData.data[i + 2] = threshcol.b;\n        imageData.data[i + 3] = threshcol.a;\n      }\n    }\n  }\n  return imageData;\n}\n\n// temperature calculated in celsius\n// Affected by elevation and latitude\nfunction createTemperatureMap(elevation: ScalarMap, seed: number) {\n  const random = makeNoise2D(seed);\n  const { width, height } = elevation.dims();\n  const tmap = new ScalarMap(width, height);\n\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n\n    }\n  }\n\n}\n\nenum TerrainGenIntroPhase {\n  HeightMapGen,\n  OceanGen,\n  WindMapGen,\n}\n\ninterface TerrainGenIntroProps {\n  width: number,\n  height: number,\n  style?: React.CSSProperties,\n  className: string,\n}\n\ninterface TerrainGenIntroState {\n  state: TerrainGenIntroPhase,\n  // the initial heightmap that will be modified\n  initialElevation: ScalarMap | null,\n  airCurrents: VectorMap | null,\n  rmap: ScalarMap | null,\n  histtemp: ScalarMap | null,\n  currtemp: ScalarMap | null,\n}\n\nclass TerrainGenIntro extends React.Component<TerrainGenIntroProps, TerrainGenIntroState>{\n\n  constructor(props: TerrainGenIntroProps) {\n    super(props);\n    this.state = {\n      state: TerrainGenIntroPhase.HeightMapGen,\n      initialElevation: createElevationMap(this.props.width, this.props.height, Date.now()),\n      airCurrents: null,\n      rmap: null,\n      histtemp: null,\n      currtemp: null,\n    };\n  }\n\n\n  nextPhaseClick = (event: React.MouseEvent) => {\n\n    event.preventDefault();\n    let nextphase;\n    switch (this.state.state) {\n      case TerrainGenIntroPhase.HeightMapGen: {\n        nextphase = TerrainGenIntroPhase.OceanGen;\n        break;\n      }\n      case TerrainGenIntroPhase.OceanGen: {\n        this.setState({\n          airCurrents: createCurlNoise(this.props.width, this.props.height, Date.now())\n        });\n        nextphase = TerrainGenIntroPhase.WindMapGen;\n        break;\n      }\n      case TerrainGenIntroPhase.WindMapGen: {\n        nextphase = TerrainGenIntroPhase.HeightMapGen;\n        break;\n      }\n    }\n    this.setState({\n      state: nextphase,\n    });\n  }\n\n  render() {\n    switch (this.state.state) {\n      case TerrainGenIntroPhase.HeightMapGen: {\n        assert(this.state.initialElevation != null);\n        return <>\n          <ImageDataDisplay\n            className={this.props.className}\n            style={this.props.style}\n            data={thresholdHeightMap(this.state.initialElevation, 0, {\n              r: 0,\n              g: 0,\n              b: 0,\n              a: 0,\n            })}\n          />\n          <div>\n            <button type=\"button\" className=\"btn btn-dark\" onClick={this.nextPhaseClick}>\n              Next Phase\n            </button>\n          </div>\n        </>\n      }\n      case TerrainGenIntroPhase.OceanGen: {\n        assert(this.state.initialElevation != null);\n        return <>\n          <ImageDataDisplay\n            className={this.props.className}\n            style={this.props.style}\n            data={thresholdHeightMap(this.state.initialElevation, 0.2, {\n              // gruvbox dark blue\n              r: 0x07,\n              g: 0x66,\n              b: 0x78,\n              a: 0xFF,\n            })}\n          />\n          <div>\n            <button type=\"button\" className=\"btn btn-dark\" onClick={this.nextPhaseClick}>\n              Next Phase\n            </button>\n          </div>\n        </>\n      }\n      case TerrainGenIntroPhase.WindMapGen: {\n        assert(this.state.initialElevation != null);\n        assert(this.state.airCurrents != null);\n        return <>\n          <VectorMapDisplay\n            className={this.props.className}\n            style={this.props.style}\n            vmap={this.state.airCurrents}\n            base={thresholdHeightMap(this.state.initialElevation, 0.2, {\n              // gruvbox dark blue\n              r: 0x07,\n              g: 0x66,\n              b: 0x78,\n              a: 0xFF,\n            })}\n          />\n          <div>\n            <button type=\"button\" className=\"btn btn-dark\" onClick={this.nextPhaseClick}>\n              Reset\n            </button>\n          </div>\n        </>\n      }\n    }\n  }\n}\n\n\nexport default TerrainGenIntro;\n","import assert from 'assert';\n\nclass ScalarMap {\n  private arr: Float32Array;\n  private xsize: number;\n  private ysize: number;\n\n  constructor(xsize: number, ysize: number) {\n    this.arr = new Float32Array(xsize * ysize);\n    this.xsize = xsize;\n    this.ysize = ysize;\n  }\n\n  getv(x: number, y: number) {\n    assert(x < this.xsize);\n    assert(y < this.ysize);\n    return this.arr[this.xsize * y + x];\n  }\n\n  setv(x: number, y: number, v: number) {\n    assert(x < this.xsize);\n    assert(y < this.ysize);\n    assert(v >= 0 && v <= 1.0);\n    this.arr[this.xsize * y + x] = v;\n  }\n\n  dims() {\n    return { width: this.xsize, height: this.ysize };\n  }\n}\n\nexport default ScalarMap;\n","import assert from 'assert';\n\nclass VectorMap {\n  private arr: Float32Array;\n  private xsize: number;\n  private ysize: number;\n\n  constructor(xsize: number, ysize: number) {\n    this.arr = new Float32Array(xsize * ysize * 2);\n    this.xsize = xsize;\n    this.ysize = ysize;\n  }\n\n  getv(x: number, y: number) {\n    assert(x < this.xsize);\n    assert(y < this.ysize);\n    return [this.arr[(this.xsize * y + x) * 2 + 0],\n    this.arr[(this.xsize * y + x) * 2 + 1]];\n  }\n\n  setv(x: number, y: number, v: number[]) {\n    assert(x < this.xsize);\n    assert(y < this.ysize);\n    let [vx, vy] = v;\n    this.arr[(this.xsize * y + x) * 2 + 0] = vx;\n    this.arr[(this.xsize * y + x) * 2 + 1] = vy;\n  }\n\n  dims() {\n    return { width: this.xsize, height: this.ysize };\n  }\n\n}\n\nexport default VectorMap;\n","import React from 'react';\n\n// Object displaying some image data\n\ninterface ImageDataDisplayProps {\n  data: ImageData,\n  className?: string,\n  style?: React.CSSProperties\n}\n\nclass ImageDataDisplay extends React.Component<ImageDataDisplayProps> {\n\n  private displayCanvas = React.createRef<HTMLCanvasElement>();\n\n  constructor(props: ImageDataDisplayProps) {\n    super(props);\n    this.paint = this.paint.bind(this);\n  }\n\n  componentDidMount() {\n    this.paint();\n  }\n\n  componentDidUpdate() {\n    this.paint();\n  }\n\n  paint() {\n    const canvas = this.displayCanvas.current;\n    if (canvas != null) {\n      const context = canvas.getContext(\"2d\");\n      if (context != null) {\n        context.putImageData(this.props.data, 0, 0);\n      }\n    }\n  }\n\n  render() {\n    const { width, height } = this.props.data;\n    return <canvas\n      className={this.props.className}\n      style={this.props.style}\n      ref={this.displayCanvas}\n      width={width}\n      height={height}\n    />\n  }\n}\n\nexport default ImageDataDisplay;\n","import React from 'react';\nimport ScalarMap from '../ScalarMap';\nimport VectorMap from '../VectorMap';\n\n\ntype VectorMapDisplayParticle = {\n  x: number;\n  y: number;\n  age: number;\n}\n\ninterface VectorMapDisplayState {\n  alphaData: ScalarMap;\n  particles: VectorMapDisplayParticle[];\n  intervalCode: number | null;\n}\n\ninterface VectorMapDisplayProps {\n  vmap: VectorMap;\n  base: ImageData;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nclass VectorMapDisplay extends React.Component<VectorMapDisplayProps, VectorMapDisplayState> {\n  private displayCanvas = React.createRef<HTMLCanvasElement>();\n\n  constructor(props: VectorMapDisplayProps) {\n    super(props);\n    this.paint = this.paint.bind(this);\n    this.tick = this.tick.bind(this);\n    const { width, height } = props.base;\n    this.state = {\n      alphaData: new ScalarMap(width, height),\n      particles: new Array<VectorMapDisplayParticle>(),\n      intervalCode: null,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ intervalCode: window.setInterval(this.tick, 100) });\n  }\n\n  componentWillUnmount() {\n    if (!!this.state.intervalCode) {\n      window.clearInterval(this.state.intervalCode)\n    }\n    this.setState({ intervalCode: null })\n  }\n\n  componentDidUpdate() {\n    this.paint();\n  }\n\n\n  tick() {\n    const { width, height } = this.state.alphaData.dims();\n    // update particles\n    const nparticles = this.state.particles.map(\n      (p) => {\n        // move particles\n        const dir = this.props.vmap.getv(Math.floor(p.x), Math.floor(p.y));\n        return {\n          x: p.x + dir[0] / 2,\n          y: p.y + dir[1] / 2,\n          age: p.age + 1\n        }\n      })\n      // decay particles that are outside boundaries or too old\n      .filter((p) => p.x > 0 && p.x < width && p.y > 0 && p.y < height && p.age < 100)\n      .concat(\n        // Add more particles\n        [...Array<VectorMapDisplayParticle>(4)]\n          .map(_ => ({\n            x: Math.random() * width,\n            y: Math.random() * height,\n            age: 0,\n          }))\n      );\n\n    // regen imagedata\n    let ndata = new ScalarMap(width, height);\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        ndata.setv(x, y, this.state.alphaData.getv(x, y) / 1.1);\n      }\n    }\n\n    for (const p of nparticles) {\n      ndata.setv(Math.floor(p.x), Math.floor(p.y), 1);\n    }\n\n\n    this.setState({\n      alphaData: ndata,\n      particles: nparticles\n    });\n  }\n\n  paintHeightMap(ctx: CanvasRenderingContext2D) {\n    const { width, height } = this.props.base;\n    ctx.putImageData(this.props.base, 0, 0);\n    let final = new ImageData(width, height);\n    for (let x = 0; x < width; x++) {\n      for (let y = 0; y < height; y++) {\n        const bindex = (width * y + x) * 4;\n        final.data[bindex + 0] = this.props.base.data[bindex + 0];\n        final.data[bindex + 1] = this.props.base.data[bindex + 1] + this.state.alphaData.getv(x, y) * 255;\n        final.data[bindex + 2] = this.props.base.data[bindex + 2];\n        final.data[bindex + 3] = this.props.base.data[bindex + 3];\n      }\n    }\n    ctx.putImageData(final, 0, 0);\n  }\n\n  paint() {\n    const maybeCanvas = this.displayCanvas.current;\n    if (maybeCanvas != null) {\n      const maybeContext = maybeCanvas.getContext(\"2d\");\n      if (maybeContext != null) {\n        this.paintHeightMap(maybeContext);\n      }\n    }\n  }\n\n  render() {\n    const { width, height } = this.props.base;\n    return (\n      <canvas\n        style={this.props.style}\n        className={this.props.className}\n        ref={this.displayCanvas}\n        width={width}\n        height={height}\n      />\n    );\n  }\n}\n\nexport default VectorMapDisplay;\n","import React from \"react\";\nimport * as THREE from 'three';\nimport { TrackballControls } from \"three/examples/jsm/controls/TrackballControls\";\n\n\ntype WireframeRendererProps = {\n  style: React.CSSProperties,\n  geometries: {\n    geometry: THREE.BufferGeometry\n    color: number\n  }[]\n}\n\ntype WireframeRendererState = {}\n\nclass WireframeRenderer extends React.Component<WireframeRendererProps, WireframeRendererState> {\n\n  // this is the ref that three js uses\n  private mount = React.createRef<HTMLDivElement>();\n\n  // we assume these variables are properly initialized\n  private requestID!: number;\n  private controls!: TrackballControls;\n  private scene!: THREE.Scene;\n  private camera!: THREE.OrthographicCamera;\n  private renderer!: THREE.WebGLRenderer;\n  private wireframeMesh: THREE.Mesh[] = [];\n\n\n  componentDidMount() {\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID!);\n    this.controls!.dispose();\n  }\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.mount.current!.clientWidth;\n    const height = this.mount.current!.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.OrthographicCamera(\n      -10,\n      10,\n      10,\n      -10,\n    );\n\n    this.camera.position.z = 10; // is used here to set some distance from a cube that is located at z = 0\n    // TrackballControls allow a camera to trackball around the object\n    // https://threejs.org/docs/#examples/controls/TrackballControls\n    this.controls = new TrackballControls(this.camera, this.mount.current!);\n\n    this.controls.noPan = true;\n    this.controls.noZoom = true;\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: true }); // alpha true enables transparency\n    this.renderer.setSize(width, height);\n    this.mount.current!.appendChild(this.renderer.domElement); // mount using React ref\n  };\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n\n    // create wireframe from provided geometry\n    for (const { geometry, color } of this.props.geometries) {\n      const material = new THREE.MeshBasicMaterial({\n        wireframe: true,\n        color: color,\n      });\n\n      // add wireframe\n      const wireframe = new THREE.Mesh(geometry, material);\n      this.scene.add(wireframe);\n      this.wireframeMesh.push(wireframe);\n    }\n\n    // add ambient light\n    const ambientLight = new THREE.AmbientLight(0xffffff);\n    this.scene.add(ambientLight);\n  };\n\n  startAnimationLoop = () => {\n    this.wireframeMesh.forEach(w => w.rotateY(0.005));\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n  };\n\n  handleWindowResize = () => {\n    const width = this.mount.current!.clientWidth;\n    const height = this.mount.current!.clientHeight;\n\n    this.controls.handleResize();\n    this.renderer.setSize(width, height);\n\n    // only for perspective cameras\n    /*\n     * this.camera.aspect = width / height;\n     * // Note that after making changes to most of camera properties you have to call\n     * // .updateProjectionMatrix for the changes to take effect.\n     * this.camera.updateProjectionMatrix();\n     */\n  };\n\n  render() {\n    return <div style={this.props.style} ref={this.mount} />;\n  }\n}\n\nexport default WireframeRenderer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ThreeDotsVertical } from 'react-bootstrap-icons'\n\ninterface HeaderProps {\n}\n\ninterface HeaderState {\n  scroll: number;\n}\n\nclass Header extends React.Component<HeaderProps, HeaderState> {\n\n  constructor(props: HeaderProps) {\n    super(props);\n    this.state = {\n      scroll: 0,\n    };\n  }\n\n  listenToScroll = () => {\n    const winScroll =\n      document.body.scrollTop || document.documentElement.scrollTop\n\n    const height =\n      document.documentElement.scrollHeight -\n      document.documentElement.clientHeight\n\n    const scrolled = winScroll / height\n\n    this.setState({\n      scroll: scrolled,\n    })\n  }\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.listenToScroll)\n  }\n\n  render() {\n    const navStyle = {\n      transitionDuration: \"0.4s\"\n    };\n    return (\n      <header className=\"pb-5\">\n        <nav style={navStyle} className={\"navbar navbar-expand-lg py-3 fixed-top\" + (this.state.scroll === 0 ? \"\" : \" bg-secondary\")}>\n          <div className=\"container d-flex\">\n            <Link className=\"navbar-brand\" to=\"/\"><strong>Govind Pimpale</strong></Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              {/*Left Aligned*/}\n              <div className=\"navbar-nav\">\n                <Link to=\"/resume\" className=\"nav-item nav-link\"><strong>Resume</strong></Link>\n                <Link to=\"/projects\" className=\"nav-item nav-link\"><strong>Projects</strong></Link>\n              </div>\n              {/*Right Aligned*/}\n              <div className=\"navbar-nav ms-auto\">\n                <Link to=\"/terraingeneration\" className=\"nav-item nav-link\"><strong>Terrain Generation</strong></Link>\n                <Link to=\"/gravity\" className=\"nav-item nav-link\"><strong>Gravity</strong></Link>\n                <Link to=\"/achernar\" className=\"nav-item nav-link\"><strong>Achernar</strong></Link>\n              </div>\n            </div>\n            {/*Collapsible Button*/}\n            <button type=\"button\" className=\"navbar-toggler navbar-toggler-right\"\n              data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n            >\n              <ThreeDotsVertical className=\"text-body\" />\n            </button>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header';\n\nfunction Footer() {\n  return (\n    <footer className=\"container-fluid my-3\"><br />\n      <p>&copy; Govind Pimpale, MIT Licensed</p>\n    </footer>\n  )\n}\n\n\nconst Layout: React.FunctionComponent<{}> = props =>\n  <>\n    <Header />\n    {props.children}\n    <Footer />\n  </>\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype SectionProps = {\n  id: string\n  name: string\n}\n\nconst Section: React.FunctionComponent<SectionProps> = props => {\n  return <section className=\"mt-5\" style={{ overflow: \"hidden\", position: \"relative\", }}>\n    <span\n      id={props.id}\n      style={{\n        position: \"absolute\",\n        top: \"-100px\",\n        visibility: \"hidden\",\n      }}></span>\n    <div>\n      <Link to={`#${props.id}`} className=\"float-end text-muted\"><h3>#</h3></Link>\n      <h2>{props.name}</h2>\n    </div>\n    {props.children}\n  </section>\n}\n\nexport default Section;\n","export default __webpack_public_path__ + \"static/media/govind_pimpale_resume.1587fc69.pdf\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as THREE from 'three';\nimport TerrainGenIntro from '../components/TerrainGenIntro';\nimport WireframeRenderer from '../components/WireframeRenderer';\nimport Layout from '../components/Layout';\nimport Section from '../components/Section';\nimport LazyLoad from 'react-lazyload';\n\nimport Resume from '../assets/govind_pimpale_resume.pdf';\n\nimport { CaretDownFill } from 'react-bootstrap-icons';\n\ntype RotatedProps = {\n  rotation: number,\n  distance: number,\n}\n\nconst Rotated: React.FunctionComponent<RotatedProps> = props => {\n  const xDisplacement = Math.cos(props.rotation * (Math.PI / 180));\n  let circleEdge;\n  if (xDisplacement < -0.1) {\n    // Left\n    circleEdge = {\n      display: \"block\",\n      position: \"absolute\" as const,\n      top: \"50%\",\n      left: \"50%\",\n      transformOrigin: \"right\",\n      transform: `rotate(${props.rotation}deg) translate(${props.distance}em) rotate(${-props.rotation}deg) translate(-100%, -50%)`,\n    }\n  } else if (xDisplacement > 0.1) {\n    // Right\n    circleEdge = {\n      display: \"block\",\n      position: \"absolute\" as const,\n      top: \"50%\",\n      left: \"50%\",\n      transformOrigin: \"left\",\n      transform: `rotate(${props.rotation}deg) translate(${props.distance}em) rotate(${-props.rotation}deg) translate(0%, -50%)`,\n    };\n  } else {\n    // Center\n    circleEdge = {\n      display: \"block\",\n      position: \"absolute\" as const,\n      top: \"50%\",\n      left: \"50%\",\n      transformOrigin: \"center\",\n      transform: `rotate(${props.rotation}deg) translate(${props.distance}em) rotate(${-props.rotation}deg) translate(-50%, -50%)`,\n    };\n  }\n\n  return (\n    <div style={circleEdge}>\n      {props.children}\n    </div>\n  );\n}\n\ntype IntroCardProps = {\n  title: string,\n}\n\nconst IntroCard: React.FunctionComponent<IntroCardProps> = props =>\n  <div className=\"card\" style={{ width: \"15rem\" }}>\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{props.title}</h5>\n      <div className=\"card-text\">{props.children}</div>\n    </div>\n  </div>\n\nconst introStyle = {\n  height: \"100vh\",\n  minHeight: \"50em\",\n  width: \"100%\",\n  minWidth: \"100em\"\n}\n\n\nconst circleCenter = {\n  transformOrigin: \"center\",\n  display: \"block\",\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  width: \"20em\",\n  height: \"20em\",\n  transform: \"translate(-50%, -50%)\",\n}\n\n\nfunction Home() {\n  return <Layout>\n    <div style={introStyle}>\n      <WireframeRenderer\n        style={circleCenter}\n        geometries={[{\n          geometry: new THREE.IcosahedronGeometry(5),\n          color: 0xEBDBB2\n        }]}\n      />\n      {/* Down button */}\n      <Rotated distance={20} rotation={90} >\n        <a href=\"#about\" className=\"btn btn-secondary border-dark\"><CaretDownFill /></a>\n      </Rotated>\n      {/* Data */}\n      <div className=\"navbarSupportedContent\">\n        <Rotated distance={15} rotation={-45} >\n          <IntroCard title=\"About\">\n            <a href=\"#about\">About me, my projects, and this site</a>\n          </IntroCard>\n        </Rotated>\n        <Rotated distance={15} rotation={0} >\n          <IntroCard title=\"Innexgo\">\n            <a href=\"#innexgo\">Open source education systems</a>\n          </IntroCard>\n        </Rotated>\n        <Rotated distance={15} rotation={45} >\n          <IntroCard title=\"Source\">\n            <a href=\"https://github.com/pimpale/pimpale.github.io\">View source code for this site</a>\n          </IntroCard>\n        </Rotated>\n        <Rotated distance={15} rotation={-45 + 180} >\n          <IntroCard title=\"Achernar\">\n            <a href=\"#achernar\">A minimalistic, secure, and low level language</a>\n          </IntroCard>\n        </Rotated>\n        <Rotated distance={15} rotation={0 + 180} >\n          <IntroCard title=\"Terrain Generation\">\n            <a href=\"#terraingeneration\">Demo Procedural Generation System</a>\n          </IntroCard>\n        </Rotated>\n        <Rotated distance={15} rotation={45 + 180} >\n          <IntroCard title=\"Resume\" >\n            <Link to=\"/resume\">View Resume</Link>\n          </IntroCard>\n        </Rotated>\n      </div>\n    </div>\n    <div id=\"content\" className=\"container\">\n      <Section id=\"about\" name=\"About\">\n        <h5>Me</h5>\n        <p>\n          I'm a student at UCLA, studying Computer Science and Engineering.\n          I believe in <a\n            href=\"https://globalprioritiesinstitute.org/wp-content/uploads/2019/Greaves_MacAskill_The_Case_for_Strong_Longtermism.pdf\">\n            Strong Longtermism\n          </a> and the <a href=\"https://suckless.org/philosophy/\">Suckless philosophy</a>.\n          In my free time, I enjoy recreational programming (especially in C).\n          I currently work at <a href=\"https://innexgo.com\">Innexgo</a>, making educational software.\n        </p>\n        <ul>\n          <li><a href=\"https://github.com/pimpale/\">Github</a></li>\n          <li><a href=\"https://www.linkedin.com/in/govind-pimpale/\">LinkedIn</a></li>\n          <li><a href={Resume}>Resume</a></li>\n        </ul>\n        <h5>Projects</h5>\n        <p>\n          Most of my projects are licensed permissively, usually under MIT or the Unlicense. If they're not on the site,\n          you can find them <a href=\"https://github.com/pimpale/\">here</a>. You can also follow me on github to keep up to date on their development.\n        </p>\n        <h5>Site</h5>\n        <p>\n          This site was made\n          using <a href=\"https://reactjs.org/\">ReactJS</a> and <a href=\"https://www.typescriptlang.org/\">Typescript</a>,\n          with the animations in <a href=\"https://threejs.org/\">three.js</a>.\n          All content on this site is licensed under the MIT license unless otherwise specified.\n          The source of this website can be found <a href=\"https://github.com/pimpale/pimpale.github.io\">here</a>.\n        </p>\n      </Section>\n      <Section id=\"innexgo\" name=\"Innexgo\">\n        <p>\n          In 2018 I helped create Innexgo, an open source student attendance system. Innexgo uses RFID stickers to automatically take\n          attendance without wasting student or teacher time and provides data analysis tools for converting raw attendance data to useful\n          graphs and statistics.\n        </p>\n        <p>\n          <a href=\"https://innexgo.com\">Company Website</a>\n          <br />\n          <a href=\"https://github.com/innexgo\">Source Code</a>\n        </p>\n      </Section>\n      <Section id=\"achernar\" name=\"Achernar\">\n        <h5>Goals</h5>\n        Achernar is a <b><i>Work In Progress</i></b> programming language focusing on:\n        <ul>\n          <li>\n            <b>Minimalism</b>: Achernar strives to be <i>orthogonal</i>.\n            Language features are simple to understand, independent, and highly composable.\n            As such, minimalism is both possible and ergonomic.\n          </li>\n          <li><b>Versatility</b>: Achernar does not lock the user into any particular framework and is highly unopinionated.\n            Use Achernar compiled or interpreted. It can be easily dropped into any existing project without dragging in any dependencies.\n          </li>\n          <li><b>Safe</b>: Achernar is designed with type safety in mind. It is strongly typed and offers additional Ada\n            style contract programming.\n          </li>\n        </ul>\n        <h5>Current Status</h5>\n        <p>\n          I am currently about 50% through writing the first compiler in C that will compiler Achernar code.\n          The compiler uses its own custom standard library called  <code>comlib</code> that will evolve into Achernar's standard library.\n        </p>\n        <h5>Additional Information</h5>\n        <p>\n          <Link to=\"https://github.com/pimpale/achernar\">Achernar Source Code</Link>\n          <br />\n          <Link to=\"/achernar\">More Info</Link>\n        </p>\n      </Section>\n      <br />\n      <Section id=\"terraingeneration\" name=\"TerrainGeneration\">\n        <div>\n          {/* This is pretty expensive to load so we'll only do it when necessary */}\n          <LazyLoad height={800} offset={100}>\n            <TerrainGenIntro\n              width={400}\n              height={400}\n              style={{ width: \"800px\", height: \"800px\" }}\n              className=\"border border-dark\"\n            />\n          </LazyLoad>\n          <br />\n          <Link to=\"/terraingeneration\">More Terrain Generation</Link>\n        </div>\n      </Section>\n      <br />\n    </div>\n  </Layout>\n}\n\nexport default Home;\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport Section from '../components/Section';\n\nfunction Achernar() {\n  return <Layout>\n  <Section id=\"operators\" name=\"Operators\">\n\n  </Section>\n  </Layout>\n}\n\nexport default Achernar;\n","import { assert } from '@innexgo/frontend-common';\n\nexport function mod(n: number, m: number) {\n  return ((n % m) + m) % m;\n}\n\nexport async function loadImage(imageUrl: string) {\n  const response = await fetch(imageUrl);\n  const fileBlob = await response.blob();\n  const bitmap = await createImageBitmap(fileBlob);\n  const canvas = document.createElement('canvas');\n  canvas.width  = bitmap.width;\n  canvas.height = bitmap.height;\n  const context = canvas.getContext('2d')!;\n  context.drawImage(bitmap, 0, 0);\n  return context.getImageData(0, 0, bitmap.width, bitmap.height);\n}\n\n\nexport type BoundaryConditions = \"FIXED\" | \"MIRROR\" | \"PERIODIC\";\n\n\n// extends an image so that it can be processed by the given matrix\nexport function extend(img: ImageData, b: BoundaryConditions, radius: number): ImageData {\n  // radius is the amount we have to pad the image with\n  assert(radius> 0, \"radius must be positive\");\n\n  let newImg = new ImageData(img.height + radius * 2, img.width + radius * 2);\n\n  switch (b) {\n    case \"FIXED\": {\n      for (let y = 0; y < newImg.width; y++) {\n        for (let x = 0; x < newImg.height; x++) {\n          // clamp x and y between the correct values\n          const srcx = Math.max(Math.min(x - radius, img.width - 1), 0);\n          const srcy = Math.max(Math.min(y - radius, img.height - 1), 0);\n\n          // calculate base indexes\n          const srcbasei = (srcy * img.width + srcx) * 4;\n          const destbasei = (y * newImg.width + x) * 4;\n\n          // copy r, g, b, a\n          newImg.data[destbasei + 0] = img.data[srcbasei + 0];\n          newImg.data[destbasei + 1] = img.data[srcbasei + 1];\n          newImg.data[destbasei + 2] = img.data[srcbasei + 2];\n          newImg.data[destbasei + 3] = img.data[srcbasei + 3];\n        }\n      }\n      break;\n    }\n    case \"PERIODIC\": {\n      for (let y = 0; y < newImg.width; y++) {\n        for (let x = 0; x < newImg.height; x++) {\n          // wrap x and y between the correct values\n          const srcx = mod(x - radius, img.width);\n          const srcy = mod(y - radius, img.height);\n\n          // calculate base indexes\n          const srcbasei = (srcy * img.width + srcx) * 4;\n          const destbasei = (y * newImg.width + x) * 4;\n\n          // copy r, g, b, a\n          newImg.data[destbasei + 0] = img.data[srcbasei + 0];\n          newImg.data[destbasei + 1] = img.data[srcbasei + 1];\n          newImg.data[destbasei + 2] = img.data[srcbasei + 2];\n          newImg.data[destbasei + 3] = img.data[srcbasei + 3];\n        }\n      }\n      break;\n    }\n    case \"MIRROR\": {\n      function mirror(x: number, w: number) {\n        if (x < 0) {\n          // extend\n          return Math.min(Math.max(-x, 0), w);\n        } else if (x >= w) {\n          // extend\n          return Math.min(Math.max(2 * w - x, 0), w);\n        } else {\n          return x;\n        }\n      }\n\n      for (let y = 0; y < newImg.width; y++) {\n        for (let x = 0; x < newImg.height; x++) {\n          // wrap x and y between the correct values\n          const srcx = mirror(x - radius, img.width - 1);\n          const srcy = mirror(y - radius, img.height - 1);\n\n          // calculate base indexes\n          const srcbasei = (srcy * img.width + srcx) * 4;\n          const destbasei = (y * newImg.width + x) * 4;\n\n          // copy r, g, b, a\n          newImg.data[destbasei + 0] = img.data[srcbasei + 0];\n          newImg.data[destbasei + 1] = img.data[srcbasei + 1];\n          newImg.data[destbasei + 2] = img.data[srcbasei + 2];\n          newImg.data[destbasei + 3] = img.data[srcbasei + 3];\n        }\n      }\n      break;\n    }\n  }\n\n  return newImg;\n}\n\n// crops the data\nexport function boxBlur(img: ImageData, radius: number) {\n  assert(radius > 0, \"radius must be positive\");\n\n  // radius is the amount we will crop from the image\n\n  // dimensions of the src image\n  const srcxsize = img.width;\n  const srcysize = img.height;\n\n\n  // dimensions of new image\n  const newxsize = srcxsize - radius * 2;\n  const newysize = srcysize - radius * 2;\n\n  assert(newxsize > 0 && newysize > 0, \"radius is too large\");\n\n  // create new image\n  let newImg = new ImageData(newxsize, newysize);\n\n  // create specific channel sums\n  // each array is the sum of specified channel in the rectangle [0, x] by [0, y]\n  let rSums = new Uint32Array(srcxsize * srcysize);\n  let gSums = new Uint32Array(srcxsize * srcysize);\n  let bSums = new Uint32Array(srcxsize * srcysize);\n  let aSums = new Uint32Array(srcxsize * srcysize);\n\n  // here, we calculate the sum in each of the channels in the horizontal direction\n  for (let y = 0; y < srcysize; y++) {\n    // note we start at 1, not 0\n    for (let x = 1; x < srcxsize; x++) {\n      const srcBaseIdx = (srcysize*y + x) * 4;\n      const destIdx = srcysize*y + x;\n      // add the left column value to the current position\n      rSums[destIdx] = img.data[srcBaseIdx+0] + rSums[destIdx-1];\n      gSums[destIdx] = img.data[srcBaseIdx+1] + gSums[destIdx-1];\n      bSums[destIdx] = img.data[srcBaseIdx+2] + bSums[destIdx-1];\n      aSums[destIdx] = img.data[srcBaseIdx+3] + aSums[destIdx-1];\n    }\n  }\n\n  // now, we calculate the sum in each of the channels in the vertical direction\n  for (let x = 0; x < srcxsize; x++) {\n    // note we start at 1, not 0\n    for (let y = 1; y < srcysize; y++) {\n      const destIdx = srcysize*y + x;\n      const srcIdx = srcysize*(y-1) + x;\n      // add the above row value to the current position\n      rSums[destIdx] += rSums[srcIdx];\n      gSums[destIdx] += gSums[srcIdx];\n      bSums[destIdx] += bSums[srcIdx];\n      aSums[destIdx] += aSums[srcIdx];\n    }\n  }\n\n  // number of pixels in box\n  const pixels = Math.pow(radius*2, 2);\n\n  // now, we calculate the blur\n  for(let y = 0; y < newysize; y++) {\n    for(let x = 0; x < newxsize; x++) {\n      // see explanation here\n      // https://github.com/francium/fast-blur/blob/master/fast_blur.c\n\n      // get src coords\n      const srcx = x + radius;\n      const srcy = y + radius;\n\n      // calculate indexes\n      const aIdx = (srcx - radius) + srcysize*(srcy - radius) ;\n      const bIdx = (srcx - radius) + srcysize*(srcy + radius) ;\n      const cIdx = (srcx + radius) + srcysize*(srcy - radius) ;\n      const dIdx = (srcx + radius) + srcysize*(srcy + radius) ;\n\n      // get sums\n      const rSum = rSums[dIdx] - (rSums[bIdx] + rSums[cIdx] - rSums[aIdx]);\n      const gSum = gSums[dIdx] - (gSums[bIdx] + gSums[cIdx] - gSums[aIdx]);\n      const bSum = bSums[dIdx] - (bSums[bIdx] + bSums[cIdx] - bSums[aIdx]);\n      const aSum = aSums[dIdx] - (aSums[bIdx] + aSums[cIdx] - aSums[aIdx]);\n\n      // destIdx\n      const destBaseIdx = (x + y*newysize)*4;\n      newImg.data[destBaseIdx+0] = rSum / pixels;\n      newImg.data[destBaseIdx+1] = gSum / pixels;\n      newImg.data[destBaseIdx+2] = bSum / pixels;\n      newImg.data[destBaseIdx+3] = aSum / pixels;\n    }\n  }\n\n  return newImg;\n}\n","export default __webpack_public_path__ + \"static/media/Mug_and_Torus_morph.c51dd507.gif\";","export default __webpack_public_path__ + \"static/media/ColorWheel.d590a16e.png\";","import React from \"react\";\nimport * as THREE from 'three';\nimport { TrackballControls } from \"three/examples/jsm/controls/TrackballControls\";\n\n\ntype SingularityDemoProps = {\n  style?: React.CSSProperties,\n  className?: string\n}\n\ntype SingularityDemoState = {}\n\nconst cubeGeometry = new THREE.BoxGeometry(1, 1, 1, 5, 5, 5)\n\nconst cubeMaterials = [\n  new THREE.MeshBasicMaterial({\n    polygonOffset: true,\n    polygonOffsetFactor: 1, // positive value pushes polygon further away\n    polygonOffsetUnits: 1,\n    color: 0x458588,\n  }),\n  new THREE.MeshBasicMaterial({\n    polygonOffset: true,\n    polygonOffsetFactor: 1, // positive value pushes polygon further away\n    polygonOffsetUnits: 1,\n    color: 0xdc3545,\n  }),\n  new THREE.MeshBasicMaterial({\n    polygonOffset: true,\n    polygonOffsetFactor: 1, // positive value pushes polygon further away\n    polygonOffsetUnits: 1,\n    color: 0x98971a,\n  }),\n  new THREE.MeshBasicMaterial({\n    polygonOffset: true,\n    polygonOffsetFactor: 1, // positive value pushes polygon further away\n    polygonOffsetUnits: 1,\n    color: 0xb16286,\n  }),\n  new THREE.MeshBasicMaterial({\n    polygonOffset: true,\n    polygonOffsetFactor: 1, // positive value pushes polygon further away\n    polygonOffsetUnits: 1,\n    color: 0xd79921,\n  }),\n  new THREE.MeshBasicMaterial({\n    polygonOffset: true,\n    polygonOffsetFactor: 1, // positive value pushes polygon further away\n    polygonOffsetUnits: 1,\n    color: 0xEBDBB2,\n  }),\n];\n\n\nclass SingularityDemo extends React.Component<SingularityDemoProps, SingularityDemoState> {\n\n  // this is the ref that three js uses\n  private mount = React.createRef<HTMLDivElement>();\n\n  // this is the ref we use to monitor circularization\n  private range = React.createRef<HTMLInputElement>();\n\n  // we assume these variables are properly initialized\n  private requestID!: number;\n  private controls!: TrackballControls;\n  private scene!: THREE.Scene;\n  private camera!: THREE.OrthographicCamera;\n  private renderer!: THREE.WebGLRenderer;\n  private mesh!: THREE.Mesh;\n\n\n  componentDidMount() {\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.handleCircularityChange();\n    this.startAnimationLoop();\n    window.addEventListener('resize', this.handleWindowResize);\n    this.range.current!.addEventListener('change', this.handleCircularityChange);\n  }\n\n\n  componentWillUnmount() {\n    this.range.current!.removeEventListener('change', this.handleCircularityChange);\n    window.removeEventListener('resize', this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID!);\n    this.controls!.dispose();\n  }\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.mount.current!.clientWidth;\n    const height = this.mount.current!.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.OrthographicCamera(\n      -1.5,\n      1.5,\n      1.5,\n      -1.5,\n    );\n\n    this.camera.position.z = 10; // is used here to set some distance from a cube that is located at z = 0\n    // TrackballControls allow a camera to trackball around the object\n    // https://threejs.org/docs/#examples/controls/TrackballControls\n    this.controls = new TrackballControls(this.camera, this.mount.current!);\n\n    this.controls.noPan = true;\n    this.controls.noZoom = true;\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: true }); // alpha true enables transparency\n    this.renderer.setSize(width, height);\n    this.mount.current!.appendChild(this.renderer.domElement); // mount using React ref\n  };\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n    // add ambient light\n    const ambientLight = new THREE.AmbientLight(0xffffff);\n    this.scene.add(ambientLight);\n  };\n\n  handleCircularityChange = () => {\n    // how much to lerp towards circle\n    const alpha = this.range.current!.valueAsNumber;\n\n    // we're going to calculate a new position that's an interpolation\n    const newPosition = new Float32Array(cubeGeometry.attributes.position.count * 3);\n\n    for (let i = 0; i < cubeGeometry.attributes.position.count; i++) {\n      // original x positions\n      const x = cubeGeometry.attributes.position.getX(i);\n      const y = cubeGeometry.attributes.position.getY(i);\n      const z = cubeGeometry.attributes.position.getZ(i);\n\n      const dist = Math.hypot(x, y, z);\n\n      // circular x positions\n      const nx = x / dist;\n      const ny = y / dist;\n      const nz = z / dist;\n\n      // lerp the new values between the circle calculated\n      newPosition[i * 3 + 0] = x + (nx - x) * alpha;\n      newPosition[i * 3 + 1] = y + (ny - y) * alpha;\n      newPosition[i * 3 + 2] = z + (nz - z) * alpha;\n    }\n\n    // set our new geometry\n    let newGeometry = cubeGeometry.clone();\n    newGeometry .setAttribute('position', new THREE.BufferAttribute(newPosition, 3));\n\n    // remove old mesh\n    this.scene.remove(this.mesh);\n\n    // add mesh\n    const mesh = new THREE.Mesh(newGeometry, cubeMaterials);\n    this.scene.add(mesh);\n    this.mesh = mesh;\n\n    // wireframe\n    let geo = new THREE.WireframeGeometry( this.mesh.geometry );\n    let mat = new THREE.LineBasicMaterial( { color: 0x1d2021} );\n    let wireframe = new THREE.LineSegments( geo, mat );\n    mesh.add( wireframe );\n  }\n\n  startAnimationLoop = () => {\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n\n    // The window.requestAnimationFrame() method tells the browser that you wish to perform\n    // an animation and requests that the browser call a specified function\n    // to update an animation before the next repaint\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n  };\n\n  handleWindowResize = () => {\n    const width = this.mount.current!.clientWidth;\n    const height = this.mount.current!.clientHeight;\n\n    this.controls.handleResize();\n    this.renderer.setSize(width, height);\n  };\n\n  render() {\n    return <div style={this.props.style} className={this.props.className}>\n      <div ref={this.mount} className=\"ratio ratio-1x1 border border-dark\" />\n      <div className=\"mx-auto d-block flex-grow-1 \">\n        <label className=\"form-label\">Circularness</label>\n        <input type=\"range\" className=\"form-range\" min=\"0\" max=\"1\" step=\"0.05\" defaultValue=\"0\" ref={this.range} />\n      </div>\n    </div>;\n  }\n}\n\nexport default SingularityDemo;\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport Section from '../components/Section';\nimport { Async } from 'react-async';\nimport LazyLoad from 'react-lazyload';\n\nimport ImageDataDisplay from '../components/ImageDataDisplay';\nimport { loadImage, extend, boxBlur } from '../math';\n\nimport MugAndTorusMorphUrl from \"../assets/Mug_and_Torus_morph.gif\";\nimport ColorWheelUrl from \"../assets/ColorWheel.png\";\n\n// demos\nimport SingularityDemo from '../components/SingularityDemo';\n\n\n\ntype FootnoteProps = {\n  index: number,\n  source: string,\n}\nconst Footnote: React.FunctionComponent<FootnoteProps> = props =>\n  <a href={props.source} style={{ textDecoration: \"none\" }}>\n    <sup>[{props.index}]</sup>\n  </a>\n\n\n\n\n\n\ntype AsideCardProps = {\n  title: string,\n}\n\nconst AsideCard: React.FunctionComponent<AsideCardProps> = props =>\n  <div className=\"card mx-5 mb-2\">\n    <div className=\"card-body\">\n      <h6 className=\"card-title text-decoration-underline\">{props.title}</h6>\n      <div className=\"card-text\">{props.children}</div>\n    </div>\n  </div>\n\n\nconst TerrainGeneration = () =>\n  <Layout>\n    <div className=\"container mt-5\">\n      <Section id=\"overview\" name=\"Overview\">\n        <h4>Goals</h4>\n        <p>\n          Our goal in this article will be to procedurally generate and simulate a small game world.\n          There are hundreds of ways to do this, and as we go along, we'll explore some of the different strategies we could have chosen and their tradeoffs.\n        </p>\n        <h4>Rationale</h4>\n        <p>\n          Procedural generation is a versatile tactic in game programming.\n          Games that utilize procedural generation can have much larger maps than those with handcrafted levels, since they can generate content on the fly.\n          (Ex. <a href=\"https://en.wikipedia.org/wiki/Minecraft\">Minecraft</a> and <a href=\"https://en.wikipedia.org/wiki/No_Man%27s_Sky\">No Man's Sky</a>)\n          However, a potential downside is that excessive use of procedural generation makes games feel predictable and repetitive.\n          In order to mitigate this, some games increase the depth of the world by using more elaborate generation systems.\n          Dwarf Fortress, for example, even <a href=\"https://dwarffortresswiki.org/index.php/DF2014:World_generation\">simulates an entire virtual history</a>.\n          In the following sections, we'll discuss some techniques that could be used to procedurally generate content for a hypothetical game.\n        </p>\n        <h4>Key Decisions</h4>\n        <p>\n          In summary, our key techniques are as follows:\n        </p>\n        <ul>\n          <li>Finite (but large) world</li>\n          <li>Square grid as fundamental data structure</li>\n          <li>World level procedural generation done at worldgen time, chunk level procedural generation done at runtime.</li>\n          <li>Donut world (Periodic Boundary Conditions)</li>\n          <li>Detailed biome and weather simulations</li>\n          <li>Hydraulic Erosion (Fjords and River Valleys)</li>\n          <li>Simulating History</li>\n        </ul>\n      </Section>\n      <Section id=\"topology\" name=\"World Topology\">\n        <h4>Topology</h4>\n        <p>\n          Our first (and perhaps biggest) major choice is deciding on the world's <strong>topology</strong>.\n        </p>\n        <AsideCard title=\"Topology\">\n          Topology describes the fundamental geometric properties of an object, especially those properties that don't change as the object is stretched, squished, or otherwise distorted.\n          For example, a coffee mug is topologically equivalent to a donut since the mug, like the donut, has one through hole.\n          <div className=\"mx-auto text-center my-3\">\n            <img src={MugAndTorusMorphUrl} className=\"border border-dark mx-auto d-block\" alt=\"A mug morphing into a torus and back\" />\n            <small>Image in the public domain. <a href=\"https://commons.wikimedia.org/wiki/File:Mug_and_Torus_morph.gif\">Source</a></small>\n          </div>\n          If you're interested, <a href=\"https://en.wikipedia.org/wiki/Topology\">you can read more about topology on Wikipedia</a>.\n        </AsideCard>\n        <p>\n          For our purposes, however, we want to know how the world should be shaped:\n        </p>\n        <ul>\n          <li>Is it 2D or or 3D?</li>\n          <li>Infinite or finite?</li>\n          <li>Flat or Sphere?</li>\n          <li>Boundary Conditions?</li>\n        </ul>\n        <p>\n          We will answer each of these questions in turn.\n        </p>\n        <h4>3D or 2D?</h4>\n        <p>\n          In this article, we'll choose a 3D game since it tends to be easier to adapt a 3d algorithm to a 2d world than the other way around.\n          However, it's important to note: just because our game world is 3D doesn't mean we always need to use a 3D data structure when generating the world.\n          If we guarantee that for each point on our world's surface, the elevation is a well defined number, then we can use a 2d graph or grid to represent the heightmap.\n        </p>\n        <p>\n          Heightmaps won't work if our world isn't vertically simple.\n          {/* TODO Provide example of vertically vs nonvertically simple */}\n          For example, if we want our world to be primarily cave based, with no real \"surface\" to speak of, then a given (x, y) coordinate pair may have multiple surfaces at different z levels.\n          The same problem would apply for a floating island map.\n          A possible workaround would be to use a small number of discrete z levels, each of which uses its own seperate heightmap.\n          This approach is less efficient compared to a single heightmap, but since each per unit heightmap is smaller, it may still be feasible.\n        </p>\n        <h4>Infinite or Finite?</h4>\n        <p>\n          If we don't have any complex build time systems, then we can make our world size effectively infinite, and just generate everything at runtime.\n          This is the approach Minecraft takes.\n          In some ways, this is optimal:\n          The user doesn't have to wait at all for world generation, and we have a lot of flexibility with how large the map should be.\n        </p>\n        <p>\n          However, an infinite world bars us from doing deeper simulations that require knowledge of the game map ahead of time.\n          We can't generate realistic rivers, glaciers, or historical simulations in such a world.\n          For this reason, we'll choose a finite, but reasonably large, size.\n        </p>\n        <h4>Flat or Sphere?</h4>\n        <p>\n          Spherical worlds are more realistic, so if creating an accurate simulation is important, spheres are the way to go.\n          Spherical geometry is also required if you want to be able to render the planet's surface from space.\n        </p>\n        <p>\n          However, spherical geometry is incompatible with voxel tiling over the surface.\n          If we tile over the surface of a sphere with a square grid, we will end up with at least a few <strong>singularities</strong>.\n        </p>\n        <AsideCard title=\"Singularities\">\n          <p>\n            The most common use of the word <strong>singularity</strong> is in reference to the center of a black hole, where gravity is infinitely strong.\n            However, a singularity can refer to any point where a mathematical function is undefined or has a undefined derivative.\n          </p>\n          <SingularityDemo className=\"mx-auto\" style={{ width: \"20em\" }} />\n          <p>\n            The demo above shows a simple way to tile a sphere using squares.\n            In the context of using a square grid to title over a sphere, singularties are points where our regular grid breaks down.\n            Notice how each corner square tile will be missing one diagonal neighbor, resulting in angles near it being highly distorted.\n            So in this case singularities appear at the corners of the cube.\n          </p>\n          <p>\n            In general though, there is no way to tile a sphere using a regular square grid.\n            There will always be tiles with less than the average number of neighboring tiles.\n          </p>\n        </AsideCard>\n        <p>\n          Since dealing with spheres is a needless hassle unless we have a specific use case, we're going to try to use a flat surface without curvature.\n          This will enable us to use a grid when processing the data.\n        </p>\n        <h4>Boundary Conditions?</h4>\n        <p>\n          Now that we've settled on a flat finite surface, we have to decide what should go at the edges.\n          However, we need to do more than just decide the content of the edge grid tiles.\n          Many map operations need to access data from neighboring tiles.\n          So, in order to process the edge tiles, we need to gather data from \"beyond the edge\".\n        </p>\n        <p>\n          A <strong>boundary condition</strong> is a constraint on how we treat operations that go over the edges.\n        </p>\n        <p>\n          We'll use a box blur in order to demonstrate the impacts of boundary conditions.\n        </p>\n\n        <LazyLoad offset={200}>\n          <AsideCard title=\"Blurring And Boundary Conditions\">\n            <Async promise={\n              loadImage(ColorWheelUrl)\n                // we want to be able to change radius\n                .then(x => ({ img: x, radius: 100 }))\n            }>\n              {({ setData }) => <>\n                <Async.Pending>\n                  <div className=\"spinner-border\" role=\"status\" />\n                </Async.Pending>\n                <Async.Fulfilled<{ img: ImageData, radius: number }>>{({ img, radius }) => {\n\n                  const fixedData = extend(img, \"FIXED\", radius)\n                  const mirrorData = extend(img, \"MIRROR\", radius)\n                  const periodicData = extend(img, \"PERIODIC\", radius)\n\n                  const fixedBlur = boxBlur(fixedData, radius);\n                  const mirrorBlur = boxBlur(mirrorData, radius);\n                  const periodicBlur = boxBlur(periodicData, radius);\n\n                  return <div className=\"container\">\n                    <div className=\"mx-auto text-center my-3\" style={{ width: \"20em\" }}>\n                      <p><strong>Source Image</strong></p>\n                      <ImageDataDisplay\n                        style={{ width: \"15em\", height: \"15em\" }}\n                        className=\"border border-dark mx-auto d-block\"\n                        data={img}\n                      />\n                      <small>Image in the public domain.<a href=\"https://commons.wikimedia.org/wiki/File:Eight-colour-wheel-2D.png\">Source</a></small>\n                      <div className=\"mx-auto d-block mt-3\">\n                        <label className=\"form-label\">Blur Radius</label>\n                        <input type=\"range\" className=\"form-range\" min=\"1\" max=\"100\" defaultValue=\"100\"\n                          onChange={e => setData({ radius: e.target.valueAsNumber, img })}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <strong>Fixed Boundary Condition</strong>\n                        <p>After extension:</p>\n                        <ImageDataDisplay\n                          className=\"border border-dark\"\n                          style={{ width: \"15em\", height: \"15em\" }}\n                          data={fixedData}\n                        />\n                        <p>Final Result:</p>\n                        <ImageDataDisplay\n                          className=\"border border-dark\"\n                          style={{ width: \"15em\", height: \"15em\" }}\n                          data={fixedBlur}\n                        />\n                      </div>\n                      <div className=\"col\">\n                        <strong>Mirrored Boundary Condition</strong>\n                        <p>After extension:</p>\n                        <ImageDataDisplay\n                          className=\"border border-dark\"\n                          style={{ width: \"15em\", height: \"15em\" }}\n                          data={mirrorData}\n                        />\n                        <p>Final Result:</p>\n                        <ImageDataDisplay\n                          className=\"border border-dark\"\n                          style={{ width: \"15em\", height: \"15em\" }}\n                          data={mirrorBlur}\n                        />\n                      </div>\n                      <div className=\"col\">\n                        <strong>Periodic Boundary Condition</strong>\n                        <p>After extension:</p>\n                        <ImageDataDisplay\n                          className=\"border border-dark\"\n                          style={{ width: \"15em\", height: \"15em\" }}\n                          data={periodicData}\n                        />\n                        <p>Final Result:</p>\n                        <ImageDataDisplay\n                          className=\"border border-dark\"\n                          style={{ width: \"15em\", height: \"15em\" }}\n                          data={periodicBlur}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                }}\n                </Async.Fulfilled>\n              </>}\n            </Async>\n          </AsideCard>\n        </LazyLoad>\n        <p>Essentially:</p>\n        <ul>\n          <li>Fixed boundary conditions extend the value that was closest to the edge.</li>\n          <li>Mirrored boundary conditions make a mirror the data on the side closest.</li>\n          <li>Periodic boundary conditions take data from the opposite edge of the image.</li>\n        </ul>\n        <p>Note how the choice of the boundary condition makes a huge impact on the final blurred image.</p>\n        <p>\n          All of these boundary conditions are workable.\n          We're going to choose a periodic boundary condition though, since it means we don't have to deal with invisible world barriers.\n          This is the same approach taken by a lot of old RPGs.\n        </p>\n      </Section>\n      <Section id=\"terrainGeneration\" name=\"Terrain Generation\">\n\n      </Section>\n    </div>\n\n  </Layout >\n\n\nexport default TerrainGeneration;\n","import Layout from '../components/Layout';\nimport Section from '../components/Section';\n\nimport ResumePath from '../assets/govind_pimpale_resume.pdf';\n\nconst Resume = () =>\n  <Layout>\n    <div className=\"container mt-5\">\n      <Section id=\"resume\" name=\"Resume\">\n        <iframe title=\"resume\" src={ResumePath} style={{ width: \"100%\", aspectRatio: \"0.9\" }} />\n      </Section>\n    </div>\n  </Layout>\n\n\nexport default Resume;\n","import { Link } from 'react-router-dom';\n\nfunction Error() {\n  return (\n    <div style={{\n      display: \"flex\",\n      height: \"100vh\",\n      width: \"100vw\"\n    }}>\n      <div className=\"my-auto mx-auto text-center\">\n        <h1>404 Error.</h1>\n        <h5>Page Not Found</h5>\n        <Link to=\"/\">Return Home</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Error\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Achernar from './pages/Achernar';\nimport TerrainGeneration from './pages/TerrainGeneration';\nimport Resume from './pages/Resume';\nimport Error from './pages/Error';\nimport ScrollToTop from \"./components/ScrollToTop\";\n\n// Bootstrap CSS & JS\nimport './styles/style.scss';\nimport 'bootstrap/dist/js/bootstrap';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ScrollToTop />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/achernar\" exact component={Achernar} />\n        <Route path=\"/terraingeneration\" exact component={TerrainGeneration} />\n        <Route path=\"/resume\" exact component={Resume} />\n        <Route path=\"/\" component={Error} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}